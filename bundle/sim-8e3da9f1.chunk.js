import{fY as e,S as t,e1 as a,L as s,j as l,k as i,fZ as d,ap as n,E as o,co as p,cr as r,ct as c,aG as m,br as f,B as S,aH as h,A as I,aq as u,a2 as g,F as w,bh as T,w as v}from"./detailed_results-2fca7066.chunk.js";import{e as y,q as P,f as O,m as b,c as D,d as F,I as C,T as A}from"./preset_utils-c298d622.chunk.js";const H={items:[{id:40562,enchant:3820,gems:[41333,42144]},{id:44661,gems:[39998]},{id:40459,enchant:3810,gems:[42144]},{id:44005,enchant:3859,gems:[42144]},{id:40234,enchant:1144,gems:[39998,39998]},{id:44008,enchant:2332,gems:[39998,0]},{id:40454,enchant:3604,gems:[40049,0]},{id:40561,enchant:3601,gems:[39998]},{id:40560,enchant:3719},{id:40558,enchant:3826},{id:40719},{id:40399},{id:40255},{id:40432},{id:40395,enchant:3834},{id:40273},{id:39712}]},M={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-1s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{and:{vals:[{dotIsActive:{spellId:{spellId:48135}}},{cmp:{op:"OpLe",lhs:{spellCastTime:{spellId:{spellId:48123}}},rhs:{dotRemainingTime:{spellId:{spellId:48135}}}}}]}},castSpell:{spellId:{spellId:14751}}}},{action:{condition:{and:{vals:[{dotIsActive:{spellId:{spellId:48135}}},{cmp:{op:"OpLe",lhs:{spellCastTime:{spellId:{spellId:48123}}},rhs:{dotRemainingTime:{spellId:{spellId:48135}}}}}]}},castSpell:{spellId:{spellId:48123}}}},{action:{condition:{not:{val:{dotIsActive:{spellId:{spellId:48300}}}}},castSpell:{spellId:{spellId:48300}}}},{action:{condition:{not:{val:{dotIsActive:{spellId:{spellId:48125}}}}},castSpell:{spellId:{spellId:48125}}}},{action:{castSpell:{spellId:{spellId:48135}}}},{action:{condition:{and:{vals:[{not:{val:{spellIsReady:{spellId:{spellId:48135}}}}},{cmp:{op:"OpLe",lhs:{spellTimeToReady:{spellId:{spellId:48135}}},rhs:{const:{val:"50ms"}}}}]}},wait:{duration:{spellTimeToReady:{spellId:{spellId:48135}}}}}},{hide:!0,action:{condition:{auraIsActive:{auraId:{spellId:59e3}}},castSpell:{spellId:{spellId:48123}}}},{hide:!0,action:{castSpell:{spellId:{spellId:53007}}}},{hide:!0,action:{castSpell:{spellId:{spellId:48158}}}},{hide:!0,action:{castSpell:{spellId:{spellId:48127}}}},{hide:!0,action:{castSpell:{spellId:{tag:3,spellId:48156}}}},{action:{castSpell:{spellId:{spellId:48123}}}}]},W=y("Preraid Preset",{items:[{id:42553,enchant:3820,gems:[41333,40014]},{id:40680},{id:34210,enchant:3810,gems:[42144,40014]},{id:41610,enchant:3859},{id:43792,enchant:1144,gems:[42144,40049]},{id:37361,enchant:2332,gems:[0]},{id:39285,enchant:3246,gems:[40014,0]},{id:40696,gems:[40049,39998]},{id:37854,enchant:3719},{id:44202,enchant:3826,gems:[40026]},{id:43253,gems:[42144]},{id:39250},{id:37835},{id:37873},{id:41384,enchant:3834},{id:40698},{id:37177}]}),B=y("P1 Preset",H),j=e.create({useDevouringPlague:!0,useShadowWordDeath:!1,useMindBlast:!1}),k=P("Legacy Default",t.SpecSmitePriest,j),R=O("Default",M),N={name:"Standard",data:a.create({talentsString:"05332031013005023310001-005551002020152-00502",glyphs:s.create({major1:l.GlyphOfSmite,major2:l.GlyphOfShadowWordPain,major3:l.GlyphOfShadowWordDeath,minor1:i.GlyphOfFortitude,minor2:i.GlyphOfShadowfiend,minor3:i.GlyphOfFading})})},x=d.create({useInnerFire:!0,useShadowfiend:!0,powerInfusionTarget:n.create()}),E=o.create({flask:p.FlaskOfTheFrostWyrm,food:r.FoodFishFeast,defaultPotion:c.RunicManaInjector,prepopPotion:c.PotionOfWildMagic}),G=m.create({giftOfTheWild:f.TristateEffectImproved,arcaneBrilliance:!0,divineSpirit:!0,totemOfWrath:!0,moonkinAura:f.TristateEffectImproved,wrathOfAirTotem:!0,sanctifiedRetribution:!0,bloodlust:!0}),L=S.create({blessingOfKings:!0,blessingOfWisdom:f.TristateEffectImproved,blessingOfMight:f.TristateEffectImproved,vampiricTouch:!0}),U=h.create({faerieFire:f.TristateEffectImproved,ebonPlaguebringer:!0,heartOfTheCrusader:!0,judgementOfWisdom:!0}),V=b({fieldName:"powerInfusionTarget",id:I.fromSpellId(10060),extraCssClasses:["within-raid-sim-hide"],getValue:e=>e.getSpecOptions().powerInfusionTarget?.type==u.Player,setValue:(e,t,a)=>{const s=t.getSpecOptions();s.powerInfusionTarget=n.create({type:a?u.Player:u.Unknown,index:0}),t.setSpecOptions(e,s)}}),q=b({fieldName:"useInnerFire",id:I.fromSpellId(48168)}),_=b({fieldName:"useShadowfiend",id:I.fromSpellId(34433)}),K={inputs:[D({fieldName:"useDevouringPlague",label:"Use Devouring Plague",labelTooltip:"Use Devouring Plague whenever its not active."}),D({fieldName:"useShadowWordDeath",label:"Use Shadow Word: Death",labelTooltip:"Use Shadow Word: Death whenever off CD."}),D({fieldName:"useMindBlast",label:"Use Mind Blast",labelTooltip:"Use Mind Blast whenever off CD."}),D({fieldName:"memeDream",label:"Meme Dream",labelTooltip:"Assumes 2nd Smite Priest in raid, so just spams HF + Smite with permanent HF uptime.",extraCssClasses:["within-raid-sim-hide"]}),F({fieldName:"allowedHolyFireDelayMs",label:"Allowed Delay for HF",labelTooltip:"Time, in milliseconds, the player is allowed to wait for Holy Fire if it is about to come off CD."})]};class Y extends C{constructor(e,t){super(e,t,{cssClass:"smite-priest-sim-ui",cssScheme:"priest",knownIssues:[],epStats:[g.StatIntellect,g.StatSpirit,g.StatSpellPower,g.StatSpellHit,g.StatSpellCrit,g.StatSpellHaste,g.StatMP5],epReferenceStat:g.StatSpellPower,displayStats:[g.StatHealth,g.StatStamina,g.StatIntellect,g.StatSpirit,g.StatSpellPower,g.StatSpellHit,g.StatSpellCrit,g.StatSpellHaste,g.StatMP5],modifyDisplayStats:e=>{let t=new w;return t=t.addStat(g.StatSpellHit,1*e.getTalents().shadowFocus*T),{talents:t}},defaults:{gear:B.gear,epWeights:w.fromMap({[g.StatIntellect]:.38,[g.StatSpirit]:.38,[g.StatSpellPower]:1,[g.StatSpellHit]:1.65,[g.StatSpellCrit]:.32,[g.StatSpellHaste]:.78,[g.StatMP5]:.35}),consumes:E,rotation:j,talents:N.data,specOptions:x,raidBuffs:G,partyBuffs:v.create({}),individualBuffs:L,debuffs:U},playerIconInputs:[V,q,_],rotationInputs:K,includeBuffDebuffInputs:[],excludeBuffDebuffInputs:[],otherInputs:{inputs:[A]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[N],rotations:[k,R],gear:[W,B]},autoRotation:e=>R.rotation.rotation})}}export{j as D,B as P,Y as S,N as a,x as b,E as c};
//# sourceMappingURL=sim-8e3da9f1.chunk.js.map
