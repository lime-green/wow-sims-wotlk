import{A as e,aq as t,ap as a,eL as s,T as i,eM as n,eN as o,eO as r,S as l,e1 as c,L as m,D as d,b as h,eP as p,E as u,co as f,cr as g,ct as S,a2 as w,ab as T,F as b,aG as y,br as C,w as k,B as P,aH as G,bt as A,$ as E,V as O}from"./detailed_results-2fca7066.chunk.js";import{m as R,a as B,l as v,b as M,c as I,d as W,e as x,Q as D,I as F,U as N,J as H,V as z,T as Y,x as q}from"./preset_utils-c298d622.chunk.js";R({fieldName:"innervateTarget",id:e.fromSpellId(29166),extraCssClasses:["within-raid-sim-hide"],getValue:e=>e.getSpecOptions().innervateTarget?.type==t.Player,setValue:(e,s,i)=>{const n=s.getSpecOptions();n.innervateTarget=a.create({type:i?t.Player:t.Unknown,index:0}),s.setSpecOptions(e,n)}});const U=B({fieldName:"latencyMs",label:"Latency",labelTooltip:"Player latency, in milliseconds. Adds a delay to actions that cannot be spell queued."}),j=v({fieldName:"assumeBleedActive",label:"Assume Bleed Always Active",labelTooltip:"Assume bleed always exists for 'Rend and Tear' calculations. Otherwise will only calculate based on own rip/rake/lacerate.",extraCssClasses:["within-raid-sim-hide"]});function L(e){let t=e.getRotation();return t.manualParams&&t.rotationType==s.SingleTarget}function J(e){let t=e.getRotation();return t.manualParams&&t.rotationType==s.Aoe}const V={inputs:[M({fieldName:"rotationType",label:"Type",values:[{name:"Single Target",value:s.SingleTarget},{name:"AOE",value:s.Aoe}]}),I({fieldName:"prePopOoc",label:"Pre-pop Clearcasting",labelTooltip:"Start fight with clearcasting",showWhen:e=>e.getTalents().omenOfClarity,changeEmitter:e=>i.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),I({fieldName:"prePopBerserk",label:"Pre-pop Berserk",labelTooltip:"Pre pop berserk 1 sec before fight",showWhen:e=>e.getTalents().berserk,changeEmitter:e=>i.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),I({fieldName:"manualParams",label:"Manual Advanced Parameters",labelTooltip:"Manually specify advanced parameters, otherwise will use preset defaults"}),W({fieldName:"maxFfDelay",label:"Max FF Delay",labelTooltip:"Max allowed delay to wait for ff to come off CD in seconds",float:!0,positive:!0,showWhen:e=>e.getRotation().manualParams}),W({fieldName:"minRoarOffset",label:"Roar Offset",labelTooltip:"Targeted offset in Rip/Roar timings",showWhen:L}),W({fieldName:"ripLeeway",label:"Rip Leeway",labelTooltip:"Rip leeway when determining roar clips",showWhen:L}),I({fieldName:"useRake",label:"Use Rake",labelTooltip:"Use rake during rotation",showWhen:L}),I({fieldName:"useBite",label:"Bite during rotation",labelTooltip:"Use bite during rotation rather than just at end",showWhen:L}),W({fieldName:"biteTime",label:"Bite Time",labelTooltip:"Min seconds on Rip/Roar to bite",showWhen:e=>L(e)&&1==e.getRotation().useBite&&e.getRotation().biteModeType==n.Emperical}),I({fieldName:"flowerWeave",label:"Flower Weave",labelTooltip:"Fish for clearcasting during rotation with gotw",showWhen:J}),W({extraCssClasses:["used-in-apl"],fieldName:"raidTargets",label:"GotW Raid Targets",labelTooltip:"Raid size to assume for clearcast proc chance (can include pets as well, so 25 man raid potentically can be ~30)",showWhen:e=>e.aplRotation.enabled||J(e)&&1==e.getRotation().flowerWeave}),W({fieldName:"hotUptime",label:"Revitalize Hot Uptime",labelTooltip:"Hot uptime percentage to assume when theorizing energy gains",percent:!0,showWhen:e=>1==e.getRotation().useBite&&e.getRotation().biteModeType==n.Analytical})]},_={items:[{id:40473,enchant:3817,gems:[41398,39996]},{id:44664,gems:[39996]},{id:40494,enchant:3808,gems:[39996]},{id:40403,enchant:3605},{id:40539,enchant:3832,gems:[39996]},{id:39765,enchant:3845,gems:[39996,0]},{id:40541,enchant:3604,gems:[0]},{id:40205,gems:[39996]},{id:44011,enchant:3823,gems:[39996,49110]},{id:40243,enchant:3606,gems:[40014]},{id:40474},{id:40717},{id:42987},{id:40256},{id:40388,enchant:3789},{},{id:39757}]},K={items:[{id:46161,enchant:3817,gems:[41398,40002]},{id:45517,gems:[40002]},{id:45245,enchant:3808,gems:[40002,40002]},{id:46032,enchant:3605,gems:[40002,40058]},{id:45473,enchant:3832,gems:[40002,40002,40002]},{id:45869,enchant:3845,gems:[40037]},{id:46158,enchant:3604,gems:[40002]},{id:46095,gems:[40002,40002,40002]},{id:45536,enchant:3823,gems:[39996,39996,39996]},{id:45564,enchant:3606,gems:[39996,39996]},{id:46048,gems:[45862]},{id:45608,gems:[39996]},{id:45931},{id:46038},{id:45613,enchant:3789,gems:[40037,42702]},{},{id:40713}]},Q={items:[{id:48204,enchant:3817,gems:[41398,40146]},{id:47060,gems:[40117]},{id:48207,enchant:3808,gems:[40146]},{id:47545,enchant:3605,gems:[40117]},{id:48206,enchant:3832,gems:[40117,40146]},{id:45611,enchant:3845,gems:[40146,0]},{id:47945,enchant:3604,gems:[40112,40117,0]},{id:47112,gems:[40146,40117,40117]},{id:48205,enchant:3823,gems:[40117,49110]},{id:47077,enchant:3606,gems:[40146,40117]},{id:47075,gems:[40117]},{id:45608,gems:[40117]},{id:45931},{id:47131},{id:47239,enchant:3789,gems:[40146,40117]},{},{id:47668}]},$={items:[{id:51296,enchant:3817,gems:[41398,40117]},{id:50633,gems:[40117]},{id:51299,enchant:3808,gems:[40117]},{id:47545,enchant:3605,gems:[40117]},{id:51298,enchant:3832,gems:[40117,40125]},{id:50670,enchant:3845,gems:[40125,0]},{id:50675,enchant:3604,gems:[40162,40117,0]},{id:50707,gems:[40117,40117,40117]},{id:51297,enchant:3823,gems:[40117,40162]},{id:50607,enchant:3606,gems:[40143,40143]},{id:50604,gems:[40143]},{id:50402,gems:[40143]},{id:50363},{id:50343},{id:50735,enchant:3789,gems:[40117,49110,40143]},{},{id:50456}]},X=x("Preraid Preset",{items:[{id:42550,enchant:3817,gems:[41398,39996]},{id:40678},{id:37139,enchant:3808,gems:[39996]},{id:37840,enchant:3605},{id:37219,enchant:3832},{id:44203,enchant:3845,gems:[0]},{id:37409,enchant:3604,gems:[0]},{id:40694,gems:[49110,39996]},{id:37644,enchant:3823},{id:44297,enchant:3606},{id:37642},{id:37624},{id:40684},{id:37166},{id:37883,enchant:3827},{},{id:40713}]}),Z=x("P1 Preset",_),ee=x("P2 Preset",K),te=x("P3 Preset",Q),ae=x("P4 Preset",$),se=o.create({rotationType:s.SingleTarget,bearWeaveType:r.None,minCombosForRip:5,minCombosForBite:5,useRake:!0,useBite:!0,mangleSpam:!1,biteModeType:n.Emperical,biteTime:4,berserkBiteThresh:25,berserkFfThresh:15,powerbear:!1,minRoarOffset:12,ripLeeway:3,maintainFaerieFire:!0,hotUptime:0,snekWeave:!1,flowerWeave:!1,raidTargets:30,maxFfDelay:.1,prePopOoc:!0}),ie=D("Legacy Default",l.SpecFeralDruid,se),ne={name:"Standard",data:c.create({talentsString:"-543202132322010053120030310511-203503012",glyphs:m.create({major1:d.GlyphOfOmenOfClarity,major2:d.GlyphOfSavageRoar,major3:d.GlyphOfShred,minor1:h.GlyphOfDash,minor2:h.GlyphOfTheWild,minor3:h.GlyphOfUnburdenedRebirth})})},oe=p.create({latencyMs:100,assumeBleedActive:!0}),re=u.create({flask:f.FlaskOfEndlessRage,food:g.FoodDragonfinFilet,defaultPotion:S.PotionOfSpeed});class le extends F{constructor(e,t){super(e,t,{cssClass:"feral-druid-sim-ui",cssScheme:"druid",knownIssues:[],warnings:[],epStats:[w.StatStrength,w.StatAgility,w.StatAttackPower,w.StatMeleeHit,w.StatMeleeCrit,w.StatMeleeHaste,w.StatArmorPenetration,w.StatExpertise],epPseudoStats:[T.PseudoStatMainHandDps],epReferenceStat:w.StatAttackPower,displayStats:[w.StatHealth,w.StatStrength,w.StatAgility,w.StatAttackPower,w.StatMeleeHit,w.StatMeleeCrit,w.StatMeleeHaste,w.StatArmorPenetration,w.StatExpertise,w.StatMana],defaults:{gear:ae.gear,epWeights:b.fromMap({[w.StatStrength]:2.4,[w.StatAgility]:2.39,[w.StatAttackPower]:1,[w.StatMeleeHit]:2.51,[w.StatMeleeCrit]:2.23,[w.StatMeleeHaste]:1.83,[w.StatArmorPenetration]:2.08,[w.StatExpertise]:2.44},{[T.PseudoStatMainHandDps]:16.5}),consumes:re,rotation:se,talents:ne.data,specOptions:oe,raidBuffs:y.create({arcaneBrilliance:!0,giftOfTheWild:C.TristateEffectImproved,bloodlust:!0,manaSpringTotem:C.TristateEffectRegular,strengthOfEarthTotem:C.TristateEffectImproved,battleShout:C.TristateEffectImproved,unleashedRage:!0,icyTalons:!0,swiftRetribution:!0,sanctifiedRetribution:!0}),partyBuffs:k.create({heroicPresence:!0}),individualBuffs:P.create({blessingOfKings:!0,blessingOfMight:C.TristateEffectImproved}),debuffs:G.create({judgementOfWisdom:!0,bloodFrenzy:!0,giftOfArthas:!0,exposeArmor:!0,faerieFire:C.TristateEffectImproved,sunderArmor:!0,curseOfWeakness:C.TristateEffectRegular,heartOfTheCrusader:!0})},playerIconInputs:[],rotationInputs:V,includeBuffDebuffInputs:[N,H,z],excludeBuffDebuffInputs:[],otherInputs:{inputs:[U,j,Y,q]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[ne],rotations:[ie],gear:[X,Z,ee,te,ae]}}),this.addOptimizeGemsAction()}addOptimizeGemsAction(){this.addAction("Suggest Gems","optimize-gems-action",(async()=>{this.optimizeGems()}))}async optimizeGems(){let e=this.player.getGear().withoutGems();e=e.withMetaGem(this.sim.db.lookupGem(41398));const t=this.player.getEpWeights();let a=A.GemColorBlue,s=this.findBlueTearSlot(e,t);null==s&&(a=A.GemColorYellow,s=this.findYellowTearSlot(e,t)),e=this.socketTear(e,s,a),await this.updateGear(e);const i=this.findSocketsByColor(e,t,A.GemColorRed,s),n=new Array,o=this.calcArpTarget(e),r=(new b).withStat(w.StatArmorPenetration,o+11);n.push([40117,r]);const l=(new b).withStat(w.StatExpertise,217.135);n.push([40118,l]);const c=this.calcCritCap(e);n.push([40112,c]),n.push([40111,new b]);let m=0;this.player.hasProfession(E.Jewelcrafting)&&(e=this.optimizeJcGems(e,i,o,r,c),m=3),e=await this.fillGemsToCaps(e,i,n,0,m);const d=this.findSocketsByColor(e,t,A.GemColorYellow,s),h=new Array,p=(new b).withStat(w.StatMeleeHit,266.32);h.push([40125,p]),h.push([40162,p.add(l)]),this.detectArpStackConfiguration(o)&&(this.sortYellowSockets(e,d,t,s),h.reverse(),h.push([40117,r])),h.push([40148,p.add(c)]),h.push([40143,p]),h.push([40147,c]),h.push([40142,c]),h.push([40146,new b]),await this.fillGemsToCaps(e,d,h,0,0)}calcArpTarget(e){let t=1399;e.hasTrinket(45931)?t-=751:e.hasTrinket(40256)&&(t-=612);const a=e.getEquippedItem(O.ItemSlotMainHand);return null!=a&&null!=a.enchant&&3225==a.enchant.effectId&&(t-=120),t}calcCritCap(e){let t=0;return e.hasRelic(47668)&&(t+=200),e.hasRelic(50456)&&(t+=220),(e.hasTrinket(47131)||e.hasTrinket(47464))&&(t+=510),(e.hasTrinket(47115)||e.hasTrinket(47303))&&(t+=450),(e.hasTrinket(44253)||e.hasTrinket(42987))&&(t+=300),(new b).withStat(w.StatMeleeCrit,45.91*(77.8-1.1*t*1.06*1.02/83.33))}async updateGear(e){return this.player.setGear(i.nextEventID(),e),await this.sim.updateCharacterStats(i.nextEventID()),b.fromProto(this.player.getCurrentStats().finalStats)}findBlueTearSlot(e,t){let a=null,s=1e-8;for(var i of e.getItemSlots()){const n=e.getEquippedItem(i);if(!n)continue;if(1!=n.numSocketsOfColor(A.GemColorBlue))continue;const o=new b(n.item.socketBonus).computeEP(t);o>s&&(a=i,s=o)}return a}findYellowTearSlot(e,t){let a=null,s=1e-8;for(var i of e.getItemSlots()){const n=e.getEquippedItem(i);if(!n)continue;if(0!=n.numSocketsOfColor(A.GemColorBlue))continue;const o=n.numSocketsOfColor(A.GemColorYellow);if(0==o)continue;const r=new b(n.item.socketBonus).computeEP(t)/o;r>s&&(a=i,s=r)}return a}socketTear(e,t,a){if(null!=t){const s=e.getEquippedItem(t);for(const[i,n]of s.allSocketColors().entries())if(n==a)return e.withEquippedItem(t,s.withGem(this.sim.db.lookupGem(49110),i),!0)}return e}findSocketsByColor(e,t,a,s){const i=new Array,n=this.player.isBlacksmithing();for(var o of e.getItemSlots()){const r=e.getEquippedItem(o);if(!r)continue;const l=r.numSocketsOfColor(A.GemColorBlue)>0&&o!=s;for(const[e,s]of r.curSocketColors(n).entries()){if(r.hasSocketedGem(e))continue;let n=!1;s!=A.GemColorYellow||l||(n=new b(r.item.socketBonus).computeEP(t)>1e-8),(a==A.GemColorYellow&&n||a==A.GemColorRed&&!n)&&i.push([o,e])}}return i}sortYellowSockets(e,t,a,s){t.sort(((t,i)=>{const n=t[0],o=i[0];if(n==o)return 0;if(n==s)return-1;if(o==s)return 1;const r=e.getEquippedItem(n),l=new b(r.item.socketBonus).computeEP(a),c=e.getEquippedItem(o);return new b(c.item.socketBonus).computeEP(a)/c.numSocketsOfColor(A.GemColorYellow)-l/r.numSocketsOfColor(A.GemColorYellow)}))}async fillGemsToCaps(e,t,a,s,i){let n=e;const o=this.sim.db.lookupGem(a[s][0]);if(0==s)for(const[u,f]of t.slice(i))n=n.withGem(u,f,o);let r=await this.updateGear(n);const l=a[s][1];if(r.belowCaps(l)||s==a.length-1)return n;const c=this.sim.db.lookupGem(a[s+1][0]),m=a[s+1][1];let d=l.subtract(m);l.computeEP(d)<=0&&(d=l);for(var h=t.length-1;h>=i&&!r.belowCaps(d);h--){const[e,a]=t[h];n=n.withGem(e,a,c),r=await this.updateGear(n)}let p=h+1;return r.belowCaps(l)||(p=i),await this.fillGemsToCaps(n,t,a,s+1,p)}calcDistanceToArpTarget(e,t,a,s,i){const n=t+34*e+20*Math.max(0,Math.min(a-3,Math.floor((s-t-34*e)/20)));return Math.abs(n-i)}optimizeJcGems(e,t,a,s,i){const n=b.fromProto(this.player.getCurrentStats().finalStats),o=n.getStat(w.StatArmorPenetration),r=t.length,l=s.getStat(w.StatArmorPenetration),c=[0,1,2,3].reduce(((e,t)=>this.calcDistanceToArpTarget(e,o,r,l,a)<this.calcDistanceToArpTarget(t,o,r,l,a)?e:t)),m=n.belowCaps(i);let d=e;for(let h=0;h<3;h++){let e=42142;h<c?e=42153:m&&(e=42143),d=d.withGem(t[h][0],t[h][1],this.sim.db.lookupGem(e))}return d}detectArpStackConfiguration(e){const t=b.fromProto(this.player.getCurrentStats().finalStats).getStat(w.StatArmorPenetration);return e>1e3&&t>648&&t+20<e+11}}export{se as D,le as F,Z as P,ne as S,oe as a,re as b,ee as c,te as d};
//# sourceMappingURL=sim-f05a9f54.chunk.js.map
