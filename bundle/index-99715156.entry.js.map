{"version":3,"file":"index-99715156.entry.js","sources":["../../../ui/raid/presets.ts","../../../ui/raid/raid_picker.ts","../../../ui/raid/raid_stats.ts","../../../ui/raid/raid_tab.ts","../../../ui/core/components/raid_target_picker.ts","../../../ui/raid/assignments_picker.ts","../../../ui/raid/blessings_picker.ts","../../../ui/raid/tanks_picker.ts","../../../ui/raid/settings_tab.ts","../../../ui/raid/import_export.ts","../../../ui/raid/raid_sim_ui.ts","../../../ui/raid/index.ts"],"sourcesContent":["import { IndividualSimUI, OtherDefaults } from '../core/individual_sim_ui.js';\n\nimport {\n\tClass,\n\tConsumes,\n\tEquipmentSpec,\n\tFaction,\n\tRace,\n\tSpec\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\nimport {\n\tgetSpecIcon,\n\tspecNames,\n\tSpecOptions,\n\tSpecRotation,\n} from '../core/proto_utils/utils.js';\n\nimport { Player } from '../core/player.js';\n\nimport * as TankDeathknightPresets from '../tank_deathknight/presets.js';\nimport * as DeathknightPresets from '../deathknight/presets.js';\nimport * as BalanceDruidPresets from '../balance_druid/presets.js';\nimport * as FeralDruidPresets from '../feral_druid/presets.js';\nimport * as FeralTankDruidPresets from '../feral_tank_druid/presets.js';\nimport * as RestorationDruidPresets from '../restoration_druid/presets.js';\nimport * as ElementalShamanPresets from '../elemental_shaman/presets.js';\nimport * as EnhancementShamanPresets from '../enhancement_shaman/presets.js';\nimport * as RestorationShamanPresets from '../restoration_shaman/presets.js';\nimport * as HunterPresets from '../hunter/presets.js';\nimport * as MagePresets from '../mage/presets.js';\nimport * as RoguePresets from '../rogue/presets.js';\nimport * as HolyPaladinPresets from '../holy_paladin/presets.js';\nimport * as ProtectionPaladinPresets from '../protection_paladin/presets.js';\nimport * as RetributionPaladinPresets from '../retribution_paladin/presets.js';\nimport * as HealingPriestPresets from '../healing_priest/presets.js';\nimport * as ShadowPriestPresets from '../shadow_priest/presets.js';\nimport * as SmitePriestPresets from '../smite_priest/presets.js';\nimport * as WarriorPresets from '../warrior/presets.js';\nimport * as ProtectionWarriorPresets from '../protection_warrior/presets.js';\nimport * as WarlockPresets from '../warlock/presets.js';\n\nimport { TankDeathknightSimUI } from '../tank_deathknight/sim.js';\nimport { DeathknightSimUI } from '../deathknight/sim.js';\nimport { BalanceDruidSimUI } from '../balance_druid/sim.js';\nimport { FeralDruidSimUI } from '../feral_druid/sim.js';\nimport { FeralTankDruidSimUI } from '../feral_tank_druid/sim.js';\nimport { RestorationDruidSimUI } from '../restoration_druid/sim.js';\nimport { ElementalShamanSimUI } from '../elemental_shaman/sim.js';\nimport { EnhancementShamanSimUI } from '../enhancement_shaman/sim.js';\nimport { RestorationShamanSimUI } from '../restoration_shaman/sim.js';\nimport { HunterSimUI } from '../hunter/sim.js';\nimport { MageSimUI } from '../mage/sim.js';\nimport { RogueSimUI } from '../rogue/sim.js';\nimport { HolyPaladinSimUI } from '../holy_paladin/sim.js';\nimport { ProtectionPaladinSimUI } from '../protection_paladin/sim.js';\nimport { RetributionPaladinSimUI } from '../retribution_paladin/sim.js';\nimport { HealingPriestSimUI } from '../healing_priest/sim.js';\nimport { ShadowPriestSimUI } from '../shadow_priest/sim.js';\nimport { SmitePriestSimUI } from '../smite_priest/sim.js';\nimport { WarriorSimUI } from '../warrior/sim.js';\nimport { ProtectionWarriorSimUI } from '../protection_warrior/sim.js';\nimport { WarlockSimUI } from '../warlock/sim.js';\n\nexport const specSimFactories: Record<Spec, (parentElem: HTMLElement, player: Player<any>) => IndividualSimUI<any>> = {\n\t[Spec.SpecTankDeathknight]: (parentElem: HTMLElement, player: Player<any>) => new TankDeathknightSimUI(parentElem, player),\n\t[Spec.SpecDeathknight]: (parentElem: HTMLElement, player: Player<any>) => new DeathknightSimUI(parentElem, player),\n\t[Spec.SpecBalanceDruid]: (parentElem: HTMLElement, player: Player<any>) => new BalanceDruidSimUI(parentElem, player),\n\t[Spec.SpecFeralDruid]: (parentElem: HTMLElement, player: Player<any>) => new FeralDruidSimUI(parentElem, player),\n\t[Spec.SpecFeralTankDruid]: (parentElem: HTMLElement, player: Player<any>) => new FeralTankDruidSimUI(parentElem, player),\n\t[Spec.SpecRestorationDruid]: (parentElem: HTMLElement, player: Player<any>) => new RestorationDruidSimUI(parentElem, player),\n\t[Spec.SpecElementalShaman]: (parentElem: HTMLElement, player: Player<any>) => new ElementalShamanSimUI(parentElem, player),\n\t[Spec.SpecEnhancementShaman]: (parentElem: HTMLElement, player: Player<any>) => new EnhancementShamanSimUI(parentElem, player),\n\t[Spec.SpecRestorationShaman]: (parentElem: HTMLElement, player: Player<any>) => new RestorationShamanSimUI(parentElem, player),\n\t[Spec.SpecHunter]: (parentElem: HTMLElement, player: Player<any>) => new HunterSimUI(parentElem, player),\n\t[Spec.SpecMage]: (parentElem: HTMLElement, player: Player<any>) => new MageSimUI(parentElem, player),\n\t[Spec.SpecRogue]: (parentElem: HTMLElement, player: Player<any>) => new RogueSimUI(parentElem, player),\n\t[Spec.SpecHolyPaladin]: (parentElem: HTMLElement, player: Player<any>) => new HolyPaladinSimUI(parentElem, player),\n\t[Spec.SpecProtectionPaladin]: (parentElem: HTMLElement, player: Player<any>) => new ProtectionPaladinSimUI(parentElem, player),\n\t[Spec.SpecRetributionPaladin]: (parentElem: HTMLElement, player: Player<any>) => new RetributionPaladinSimUI(parentElem, player),\n\t[Spec.SpecHealingPriest]: (parentElem: HTMLElement, player: Player<any>) => new HealingPriestSimUI(parentElem, player),\n\t[Spec.SpecShadowPriest]: (parentElem: HTMLElement, player: Player<any>) => new ShadowPriestSimUI(parentElem, player),\n\t[Spec.SpecSmitePriest]: (parentElem: HTMLElement, player: Player<any>) => new SmitePriestSimUI(parentElem, player),\n\t[Spec.SpecWarrior]: (parentElem: HTMLElement, player: Player<any>) => new WarriorSimUI(parentElem, player),\n\t[Spec.SpecProtectionWarrior]: (parentElem: HTMLElement, player: Player<any>) => new ProtectionWarriorSimUI(parentElem, player),\n\t[Spec.SpecWarlock]: (parentElem: HTMLElement, player: Player<any>) => new WarlockSimUI(parentElem, player),\n};\n\n// Configuration necessary for creating new players.\nexport interface PresetSpecSettings<SpecType extends Spec> {\n\tspec: Spec,\n\trotation: SpecRotation<SpecType>,\n\ttalents: SavedTalents,\n\tspecOptions: SpecOptions<SpecType>,\n\tconsumes: Consumes,\n\n\tdefaultName: string,\n\tdefaultFactionRaces: Record<Faction, Race>,\n\tdefaultGear: Record<Faction, Record<number, EquipmentSpec>>,\n\totherDefaults?: OtherDefaults,\n\n\ttooltip: string,\n\ticonUrl: string,\n}\n\nexport const playerPresets: Array<PresetSpecSettings<any>> = [\n\t{\n\t\tspec: Spec.SpecTankDeathknight,\n\t\trotation: TankDeathknightPresets.DefaultRotation,\n\t\ttalents: TankDeathknightPresets.BloodTalents.data,\n\t\tspecOptions: TankDeathknightPresets.DefaultOptions,\n\t\tconsumes: TankDeathknightPresets.DefaultConsumes,\n\t\tdefaultName: 'Blood Tank',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: TankDeathknightPresets.P1_BLOOD_PRESET.gear,\n\t\t\t\t2: TankDeathknightPresets.P2_BLOOD_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: TankDeathknightPresets.P1_BLOOD_PRESET.gear,\n\t\t\t\t2: TankDeathknightPresets.P2_BLOOD_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Blood Tank Death Knight',\n\t\ticonUrl: getSpecIcon(Class.ClassDeathknight, 0),\n\t},\n\t{\n\t\tspec: Spec.SpecDeathknight,\n\t\trotation: DeathknightPresets.DefaultBloodRotation,\n\t\ttalents: DeathknightPresets.BloodTalents.data,\n\t\tspecOptions: DeathknightPresets.DefaultBloodOptions,\n\t\tconsumes: DeathknightPresets.DefaultConsumes,\n\t\tdefaultName: 'Blood DPS',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: DeathknightPresets.P1_BLOOD_PRESET.gear,\n\t\t\t\t2: DeathknightPresets.P2_BLOOD_PRESET.gear,\n\t\t\t\t3: DeathknightPresets.P3_BLOOD_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: DeathknightPresets.P1_BLOOD_PRESET.gear,\n\t\t\t\t2: DeathknightPresets.P2_BLOOD_PRESET.gear,\n\t\t\t\t3: DeathknightPresets.P3_BLOOD_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Blood DPS Death Knight',\n\t\ticonUrl: getSpecIcon(Class.ClassDeathknight, 3),\n\t},\n\t{\n\t\tspec: Spec.SpecDeathknight,\n\t\trotation: DeathknightPresets.DefaultFrostRotation,\n\t\ttalents: DeathknightPresets.FrostTalents.data,\n\t\tspecOptions: DeathknightPresets.DefaultFrostOptions,\n\t\tconsumes: DeathknightPresets.DefaultConsumes,\n\t\tdefaultName: 'Frost',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: DeathknightPresets.P1_FROST_PRESET.gear,\n\t\t\t\t2: DeathknightPresets.P2_FROST_PRESET.gear,\n\t\t\t\t3: DeathknightPresets.P3_FROST_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: DeathknightPresets.P1_FROST_PRESET.gear,\n\t\t\t\t2: DeathknightPresets.P2_FROST_PRESET.gear,\n\t\t\t\t3: DeathknightPresets.P3_FROST_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\totherDefaults: DeathknightPresets.OtherDefaults,\n\t\ttooltip: 'Frost Death Knight',\n\t\ticonUrl: getSpecIcon(Class.ClassDeathknight, 1),\n\t},\n\t{\n\t\tspec: Spec.SpecDeathknight,\n\t\trotation: DeathknightPresets.DefaultUnholyRotation,\n\t\ttalents: DeathknightPresets.UnholyDualWieldTalents.data,\n\t\tspecOptions: DeathknightPresets.DefaultUnholyOptions,\n\t\tconsumes: DeathknightPresets.DefaultConsumes,\n\t\tdefaultName: 'Unholy',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: DeathknightPresets.P1_UNHOLY_DW_PRESET.gear,\n\t\t\t\t2: DeathknightPresets.P2_UNHOLY_DW_PRESET.gear,\n\t\t\t\t3: DeathknightPresets.P3_UNHOLY_DW_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: DeathknightPresets.P1_UNHOLY_DW_PRESET.gear,\n\t\t\t\t2: DeathknightPresets.P2_UNHOLY_DW_PRESET.gear,\n\t\t\t\t3: DeathknightPresets.P3_UNHOLY_DW_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\totherDefaults: DeathknightPresets.OtherDefaults,\n\t\ttooltip: 'Dual-Wield Unholy DK',\n\t\ticonUrl: getSpecIcon(Class.ClassDeathknight, 2),\n\t},\n\t{\n\t\tspec: Spec.SpecBalanceDruid,\n\t\trotation: BalanceDruidPresets.DefaultRotation,\n\t\ttalents: BalanceDruidPresets.Phase2Talents.data,\n\t\tspecOptions: BalanceDruidPresets.DefaultOptions,\n\t\tconsumes: BalanceDruidPresets.DefaultConsumes,\n\t\totherDefaults: BalanceDruidPresets.OtherDefaults,\n\t\tdefaultName: 'Balance',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t[Faction.Horde]: Race.RaceTauren,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: BalanceDruidPresets.P1_PRESET.gear,\n\t\t\t\t2: BalanceDruidPresets.P2_PRESET.gear,\n\t\t\t\t3: BalanceDruidPresets.P3_PRESET_ALLI.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: BalanceDruidPresets.P1_PRESET.gear,\n\t\t\t\t2: BalanceDruidPresets.P2_PRESET.gear,\n\t\t\t\t3: BalanceDruidPresets.P3_PRESET_HORDE.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecBalanceDruid],\n\t\ticonUrl: getSpecIcon(Class.ClassDruid, 0),\n\t},\n\t{\n\t\tspec: Spec.SpecFeralDruid,\n\t\trotation: FeralDruidPresets.DefaultRotation,\n\t\ttalents: FeralDruidPresets.StandardTalents.data,\n\t\tspecOptions: FeralDruidPresets.DefaultOptions,\n\t\tconsumes: FeralDruidPresets.DefaultConsumes,\n\t\tdefaultName: 'Cat',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t[Faction.Horde]: Race.RaceTauren,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: FeralDruidPresets.P1_PRESET.gear,\n\t\t\t\t2: FeralDruidPresets.P2_PRESET.gear,\n\t\t\t\t3: FeralDruidPresets.P3_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: FeralDruidPresets.P1_PRESET.gear,\n\t\t\t\t2: FeralDruidPresets.P2_PRESET.gear,\n\t\t\t\t3: FeralDruidPresets.P3_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecFeralDruid],\n\t\ticonUrl: getSpecIcon(Class.ClassDruid, 3),\n\t},\n\t{\n\t\tspec: Spec.SpecFeralTankDruid,\n\t\trotation: FeralTankDruidPresets.DefaultRotation,\n\t\ttalents: FeralTankDruidPresets.StandardTalents.data,\n\t\tspecOptions: FeralTankDruidPresets.DefaultOptions,\n\t\tconsumes: FeralTankDruidPresets.DefaultConsumes,\n\t\tdefaultName: 'Bear',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t[Faction.Horde]: Race.RaceTauren,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: FeralTankDruidPresets.P1_PRESET.gear,\n\t\t\t\t2: FeralTankDruidPresets.P2_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: FeralTankDruidPresets.P1_PRESET.gear,\n\t\t\t\t2: FeralTankDruidPresets.P2_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecFeralTankDruid],\n\t\ticonUrl: getSpecIcon(Class.ClassDruid, 1),\n\t},\n\t{\n\t\tspec: Spec.SpecRestorationDruid,\n\t\trotation: RestorationDruidPresets.DefaultRotation,\n\t\ttalents: RestorationDruidPresets.CelestialFocusTalents.data,\n\t\tspecOptions: RestorationDruidPresets.DefaultOptions,\n\t\tconsumes: RestorationDruidPresets.DefaultConsumes,\n\t\tdefaultName: 'Restoration',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t[Faction.Horde]: Race.RaceTauren,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: RestorationDruidPresets.P1_PRESET.gear,\n\t\t\t\t2: RestorationDruidPresets.P2_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: RestorationDruidPresets.P1_PRESET.gear,\n\t\t\t\t2: RestorationDruidPresets.P2_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecRestorationDruid],\n\t\ticonUrl: getSpecIcon(Class.ClassDruid, 2),\n\t},\n\t{\n\t\tspec: Spec.SpecHunter,\n\t\trotation: HunterPresets.DefaultRotation,\n\t\ttalents: HunterPresets.BeastMasteryTalents.data,\n\t\tspecOptions: HunterPresets.BMDefaultOptions,\n\t\tconsumes: HunterPresets.DefaultConsumes,\n\t\tdefaultName: 'Beast Mastery',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: HunterPresets.MM_P1_PRESET.gear,\n\t\t\t\t2: HunterPresets.MM_P2_PRESET.gear,\n\t\t\t\t3: HunterPresets.MM_P3_PRESET.gear,\n\t\t\t\t4: HunterPresets.MM_P4_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: HunterPresets.MM_P1_PRESET.gear,\n\t\t\t\t2: HunterPresets.MM_P2_PRESET.gear,\n\t\t\t\t3: HunterPresets.MM_P3_PRESET.gear,\n\t\t\t\t4: HunterPresets.MM_P4_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Beast Mastery Hunter',\n\t\ticonUrl: getSpecIcon(Class.ClassHunter, 0),\n\t},\n\t{\n\t\tspec: Spec.SpecHunter,\n\t\trotation: HunterPresets.DefaultRotation,\n\t\ttalents: HunterPresets.MarksmanTalents.data,\n\t\tspecOptions: HunterPresets.DefaultOptions,\n\t\tconsumes: HunterPresets.DefaultConsumes,\n\t\tdefaultName: 'Marksmanship',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: HunterPresets.MM_P1_PRESET.gear,\n\t\t\t\t2: HunterPresets.MM_P2_PRESET.gear,\n\t\t\t\t3: HunterPresets.MM_P3_PRESET.gear,\n\t\t\t\t4: HunterPresets.MM_P4_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: HunterPresets.MM_P1_PRESET.gear,\n\t\t\t\t2: HunterPresets.MM_P2_PRESET.gear,\n\t\t\t\t3: HunterPresets.MM_P3_PRESET.gear,\n\t\t\t\t4: HunterPresets.MM_P4_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Marksmanship Hunter',\n\t\ticonUrl: getSpecIcon(Class.ClassHunter, 1),\n\t},\n\t{\n\t\tspec: Spec.SpecHunter,\n\t\trotation: HunterPresets.DefaultRotation,\n\t\ttalents: HunterPresets.SurvivalTalents.data,\n\t\tspecOptions: HunterPresets.DefaultOptions,\n\t\tconsumes: HunterPresets.DefaultConsumes,\n\t\tdefaultName: 'Survival',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: HunterPresets.SV_P1_PRESET.gear,\n\t\t\t\t2: HunterPresets.SV_P2_PRESET.gear,\n\t\t\t\t3: HunterPresets.SV_P3_PRESET.gear,\n\t\t\t\t4: HunterPresets.SV_P4_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: HunterPresets.SV_P1_PRESET.gear,\n\t\t\t\t2: HunterPresets.SV_P2_PRESET.gear,\n\t\t\t\t3: HunterPresets.SV_P3_PRESET.gear,\n\t\t\t\t4: HunterPresets.SV_P4_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Survival Hunter',\n\t\ticonUrl: getSpecIcon(Class.ClassHunter, 2),\n\t},\n\t{\n\t\tspec: Spec.SpecMage,\n\t\trotation: MagePresets.DefaultSimpleRotation,\n\t\ttalents: MagePresets.ArcaneTalents.data,\n\t\tspecOptions: MagePresets.DefaultArcaneOptions,\n\t\tconsumes: MagePresets.DefaultArcaneConsumes,\n\t\totherDefaults: MagePresets.OtherDefaults,\n\t\tdefaultName: 'Arcane',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: MagePresets.ARCANE_P1_PRESET.gear,\n\t\t\t\t2: MagePresets.ARCANE_P2_PRESET.gear,\n\t\t\t\t3: MagePresets.ARCANE_P3_PRESET_ALLIANCE.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: MagePresets.ARCANE_P1_PRESET.gear,\n\t\t\t\t2: MagePresets.ARCANE_P2_PRESET.gear,\n\t\t\t\t3: MagePresets.ARCANE_P3_PRESET_HORDE.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Arcane Mage',\n\t\ticonUrl: getSpecIcon(Class.ClassMage, 0),\n\t},\n\t{\n\t\tspec: Spec.SpecMage,\n\t\trotation: MagePresets.DefaultSimpleRotation,\n\t\ttalents: MagePresets.FireTalents.data,\n\t\tspecOptions: MagePresets.DefaultFireOptions,\n\t\tconsumes: MagePresets.DefaultFireConsumes,\n\t\totherDefaults: MagePresets.OtherDefaults,\n\t\tdefaultName: 'TTW Fire',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: MagePresets.FIRE_P1_PRESET.gear,\n\t\t\t\t2: MagePresets.FIRE_P2_PRESET.gear,\n\t\t\t\t3: MagePresets.FIRE_P3_PRESET_ALLIANCE.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: MagePresets.FIRE_P1_PRESET.gear,\n\t\t\t\t2: MagePresets.FIRE_P2_PRESET.gear,\n\t\t\t\t3: MagePresets.FIRE_P3_PRESET_HORDE.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'TTW Fire Mage',\n\t\ticonUrl: getSpecIcon(Class.ClassMage, 1),\n\t},\n\t{\n\t\tspec: Spec.SpecMage,\n\t\trotation: MagePresets.DefaultSimpleRotation,\n\t\ttalents: MagePresets.FrostfireTalents.data,\n\t\tspecOptions: MagePresets.DefaultFFBOptions,\n\t\tconsumes: MagePresets.DefaultFireConsumes,\n\t\totherDefaults: MagePresets.OtherDefaults,\n\t\tdefaultName: 'FFB Fire',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceGnome,\n\t\t\t[Faction.Horde]: Race.RaceTroll,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: MagePresets.FIRE_P1_PRESET.gear,\n\t\t\t\t2: MagePresets.FFB_P2_PRESET.gear,\n\t\t\t\t3: MagePresets.FFB_P3_PRESET_ALLIANCE.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: MagePresets.FIRE_P1_PRESET.gear,\n\t\t\t\t2: MagePresets.FFB_P2_PRESET.gear,\n\t\t\t\t3: MagePresets.FFB_P3_PRESET_HORDE.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'FFB Fire Mage',\n\t\ticonUrl: \"https://wow.zamimg.com/images/wow/icons/medium/ability_mage_frostfirebolt.jpg\",\n\t},\n\t{\n\t\tspec: Spec.SpecRogue,\n\t\trotation: RoguePresets.DefaultRotation,\n\t\ttalents: RoguePresets.AssassinationTalents137.data,\n\t\tspecOptions: RoguePresets.DefaultOptions,\n\t\tconsumes: RoguePresets.DefaultConsumes,\n\t\tdefaultName: 'Assassination',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: RoguePresets.P1_PRESET_ASSASSINATION.gear,\n\t\t\t\t2: RoguePresets.P2_PRESET_ASSASSINATION.gear,\n\t\t\t\t3: RoguePresets.P3_PRESET_ASSASSINATION.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: RoguePresets.P1_PRESET_ASSASSINATION.gear,\n\t\t\t\t2: RoguePresets.P2_PRESET_ASSASSINATION.gear,\n\t\t\t\t3: RoguePresets.P3_PRESET_ASSASSINATION.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Assassination Rogue',\n\t\ticonUrl: getSpecIcon(Class.ClassRogue, 0),\n\t},\n\t{\n\t\tspec: Spec.SpecRogue,\n\t\trotation: RoguePresets.DefaultRotation,\n\t\ttalents: RoguePresets.CombatCQCTalents.data,\n\t\tspecOptions: RoguePresets.DefaultOptions,\n\t\tconsumes: RoguePresets.DefaultConsumes,\n\t\tdefaultName: 'Combat',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: RoguePresets.P1_PRESET_COMBAT.gear,\n\t\t\t\t2: RoguePresets.P2_PRESET_COMBAT.gear,\n\t\t\t\t3: RoguePresets.P3_PRESET_COMBAT.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: RoguePresets.P1_PRESET_COMBAT.gear,\n\t\t\t\t2: RoguePresets.P2_PRESET_COMBAT.gear,\n\t\t\t\t3: RoguePresets.P3_PRESET_COMBAT.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Combat Rogue',\n\t\ticonUrl: getSpecIcon(Class.ClassRogue, 1),\n\t},\n\t{\n\t\tspec: Spec.SpecElementalShaman,\n\t\trotation: ElementalShamanPresets.DefaultRotation,\n\t\ttalents: ElementalShamanPresets.StandardTalents.data,\n\t\tspecOptions: ElementalShamanPresets.DefaultOptions,\n\t\tconsumes: ElementalShamanPresets.DefaultConsumes,\n\t\tdefaultName: 'Elemental',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceDraenei,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: ElementalShamanPresets.P1_PRESET.gear,\n\t\t\t\t2: ElementalShamanPresets.P2_PRESET.gear,\n\t\t\t\t3: ElementalShamanPresets.P3_PRESET_ALLI.gear,\n\t\t\t\t4: ElementalShamanPresets.P4_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: ElementalShamanPresets.P1_PRESET.gear,\n\t\t\t\t2: ElementalShamanPresets.P2_PRESET.gear,\n\t\t\t\t3: ElementalShamanPresets.P3_PRESET_HORDE.gear,\n\t\t\t\t4: ElementalShamanPresets.P4_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecElementalShaman],\n\t\ticonUrl: getSpecIcon(Class.ClassShaman, 0),\n\t},\n\t{\n\t\tspec: Spec.SpecEnhancementShaman,\n\t\trotation: EnhancementShamanPresets.DefaultRotation,\n\t\ttalents: EnhancementShamanPresets.StandardTalents.data,\n\t\tspecOptions: EnhancementShamanPresets.DefaultOptions,\n\t\tconsumes: EnhancementShamanPresets.DefaultConsumes,\n\t\tdefaultName: 'Enhancement',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceDraenei,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: EnhancementShamanPresets.P1_PRESET.gear,\n\t\t\t\t2: EnhancementShamanPresets.P2_PRESET_FT.gear,\n\t\t\t\t3: EnhancementShamanPresets.P3_PRESET_ALLIANCE.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: EnhancementShamanPresets.P1_PRESET.gear,\n\t\t\t\t2: EnhancementShamanPresets.P2_PRESET_FT.gear,\n\t\t\t\t3: EnhancementShamanPresets.P3_PRESET_HORDE.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecEnhancementShaman],\n\t\ticonUrl: getSpecIcon(Class.ClassShaman, 1),\n\t},\n\t{\n\t\tspec: Spec.SpecRestorationShaman,\n\t\trotation: RestorationShamanPresets.DefaultRotation,\n\t\ttalents: RestorationShamanPresets.RaidHealingTalents.data,\n\t\tspecOptions: RestorationShamanPresets.DefaultOptions,\n\t\tconsumes: RestorationShamanPresets.DefaultConsumes,\n\t\tdefaultName: 'Restoration',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceDraenei,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: RestorationShamanPresets.P1_PRESET.gear,\n\t\t\t\t2: RestorationShamanPresets.P2_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: RestorationShamanPresets.P1_PRESET.gear,\n\t\t\t\t2: RestorationShamanPresets.P2_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecRestorationShaman],\n\t\ticonUrl: getSpecIcon(Class.ClassShaman, 2),\n\t},\n\t{\n\t\tspec: Spec.SpecHealingPriest,\n\t\trotation: HealingPriestPresets.DiscDefaultRotation,\n\t\ttalents: HealingPriestPresets.DiscTalents.data,\n\t\tspecOptions: HealingPriestPresets.DefaultOptions,\n\t\tconsumes: HealingPriestPresets.DefaultConsumes,\n\t\tdefaultName: 'Discipline',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceDwarf,\n\t\t\t[Faction.Horde]: Race.RaceUndead,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: HealingPriestPresets.DISC_P1_PRESET.gear,\n\t\t\t\t2: HealingPriestPresets.DISC_P2_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: HealingPriestPresets.DISC_P1_PRESET.gear,\n\t\t\t\t2: HealingPriestPresets.DISC_P2_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Discipline Priest',\n\t\ticonUrl: getSpecIcon(Class.ClassPriest, 0),\n\t},\n\t{\n\t\tspec: Spec.SpecHealingPriest,\n\t\trotation: HealingPriestPresets.HolyDefaultRotation,\n\t\ttalents: HealingPriestPresets.HolyTalents.data,\n\t\tspecOptions: HealingPriestPresets.DefaultOptions,\n\t\tconsumes: HealingPriestPresets.DefaultConsumes,\n\t\tdefaultName: 'Holy',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceDwarf,\n\t\t\t[Faction.Horde]: Race.RaceUndead,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: HealingPriestPresets.HOLY_P1_PRESET.gear,\n\t\t\t\t2: HealingPriestPresets.HOLY_P2_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: HealingPriestPresets.HOLY_P1_PRESET.gear,\n\t\t\t\t2: HealingPriestPresets.HOLY_P2_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Holy Priest',\n\t\ticonUrl: getSpecIcon(Class.ClassPriest, 1),\n\t},\n\t{\n\t\tspec: Spec.SpecShadowPriest,\n\t\trotation: ShadowPriestPresets.DefaultRotation,\n\t\ttalents: ShadowPriestPresets.StandardTalents.data,\n\t\tspecOptions: ShadowPriestPresets.DefaultOptions,\n\t\tconsumes: ShadowPriestPresets.DefaultConsumes,\n\t\tdefaultName: 'Shadow',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceDwarf,\n\t\t\t[Faction.Horde]: Race.RaceUndead,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: ShadowPriestPresets.P1_PRESET.gear,\n\t\t\t\t2: ShadowPriestPresets.P2_PRESET.gear,\n\t\t\t\t3: ShadowPriestPresets.P3_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: ShadowPriestPresets.P1_PRESET.gear,\n\t\t\t\t2: ShadowPriestPresets.P2_PRESET.gear,\n\t\t\t\t3: ShadowPriestPresets.P3_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecShadowPriest],\n\t\ticonUrl: getSpecIcon(Class.ClassPriest, 2),\n\t},\n\t{\n\t\tspec: Spec.SpecSmitePriest,\n\t\trotation: SmitePriestPresets.DefaultRotation,\n\t\ttalents: SmitePriestPresets.StandardTalents.data,\n\t\tspecOptions: SmitePriestPresets.DefaultOptions,\n\t\tconsumes: SmitePriestPresets.DefaultConsumes,\n\t\tdefaultName: 'Smite',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceDwarf,\n\t\t\t[Faction.Horde]: Race.RaceUndead,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: SmitePriestPresets.P1_PRESET.gear,\n\t\t\t\t2: ShadowPriestPresets.P2_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: SmitePriestPresets.P1_PRESET.gear,\n\t\t\t\t2: ShadowPriestPresets.P2_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: specNames[Spec.SpecSmitePriest],\n\t\ticonUrl: getSpecIcon(Class.ClassPriest, 3),\n\t},\n\t{\n\t\tspec: Spec.SpecWarrior,\n\t\trotation: WarriorPresets.ArmsRotation,\n\t\ttalents: WarriorPresets.ArmsTalents.data,\n\t\tspecOptions: WarriorPresets.DefaultOptions,\n\t\tconsumes: WarriorPresets.DefaultConsumes,\n\t\tdefaultName: 'Arms',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: WarriorPresets.P1_ARMS_PRESET.gear,\n\t\t\t\t2: WarriorPresets.P2_ARMS_PRESET.gear,\n\t\t\t\t3: WarriorPresets.P3_ARMS_4P_PRESET_ALLIANCE.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: WarriorPresets.P1_ARMS_PRESET.gear,\n\t\t\t\t2: WarriorPresets.P2_ARMS_PRESET.gear,\n\t\t\t\t3: WarriorPresets.P3_ARMS_4P_PRESET_HORDE.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Arms Warrior',\n\t\ticonUrl: getSpecIcon(Class.ClassWarrior, 0),\n\t},\n\t{\n\t\tspec: Spec.SpecWarrior,\n\t\trotation: WarriorPresets.DefaultRotation,\n\t\ttalents: WarriorPresets.FuryTalents.data,\n\t\tspecOptions: WarriorPresets.DefaultOptions,\n\t\tconsumes: WarriorPresets.DefaultConsumes,\n\t\tdefaultName: 'Fury',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: WarriorPresets.P1_FURY_PRESET.gear,\n\t\t\t\t2: WarriorPresets.P2_FURY_PRESET.gear,\n\t\t\t\t3: WarriorPresets.P3_FURY_PRESET_ALLIANCE.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: WarriorPresets.P1_FURY_PRESET.gear,\n\t\t\t\t2: WarriorPresets.P2_FURY_PRESET.gear,\n\t\t\t\t3: WarriorPresets.P3_FURY_PRESET_HORDE.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Fury Warrior',\n\t\ticonUrl: getSpecIcon(Class.ClassWarrior, 1),\n\t},\n\t{\n\t\tspec: Spec.SpecProtectionWarrior,\n\t\trotation: ProtectionWarriorPresets.DefaultRotation,\n\t\ttalents: ProtectionWarriorPresets.StandardTalents.data,\n\t\tspecOptions: ProtectionWarriorPresets.DefaultOptions,\n\t\tconsumes: ProtectionWarriorPresets.DefaultConsumes,\n\t\tdefaultName: 'Protection',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: ProtectionWarriorPresets.P1_BALANCED_PRESET.gear,\n\t\t\t\t2: ProtectionWarriorPresets.P2_SURVIVAL_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: ProtectionWarriorPresets.P1_BALANCED_PRESET.gear,\n\t\t\t\t2: ProtectionWarriorPresets.P2_SURVIVAL_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Protection Warrior',\n\t\ticonUrl: getSpecIcon(Class.ClassWarrior, 2),\n\t},\n\t{\n\t\tspec: Spec.SpecHolyPaladin,\n\t\trotation: HolyPaladinPresets.DefaultRotation,\n\t\ttalents: HolyPaladinPresets.StandardTalents.data,\n\t\tspecOptions: HolyPaladinPresets.DefaultOptions,\n\t\tconsumes: HolyPaladinPresets.DefaultConsumes,\n\t\tdefaultName: 'Holy',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceBloodElf,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: HolyPaladinPresets.P1_PRESET.gear,\n\t\t\t\t2: HolyPaladinPresets.P2_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: HolyPaladinPresets.P1_PRESET.gear,\n\t\t\t\t2: HolyPaladinPresets.P2_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Holy Paladin',\n\t\ticonUrl: getSpecIcon(Class.ClassPaladin, 0),\n\t},\n\t{\n\t\tspec: Spec.SpecProtectionPaladin,\n\t\trotation: ProtectionPaladinPresets.DefaultRotation,\n\t\ttalents: ProtectionPaladinPresets.GenericAoeTalents.data,\n\t\tspecOptions: ProtectionPaladinPresets.DefaultOptions,\n\t\tconsumes: ProtectionPaladinPresets.DefaultConsumes,\n\t\tdefaultName: 'Protection',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceBloodElf,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: ProtectionPaladinPresets.P1_PRESET.gear,\n\t\t\t\t2: ProtectionPaladinPresets.P2_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: ProtectionPaladinPresets.P1_PRESET.gear,\n\t\t\t\t2: ProtectionPaladinPresets.P2_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Protection Paladin',\n\t\ticonUrl: getSpecIcon(Class.ClassPaladin, 1),\n\t},\n\t{\n\t\tspec: Spec.SpecRetributionPaladin,\n\t\trotation: RetributionPaladinPresets.DefaultRotation,\n\t\ttalents: RetributionPaladinPresets.AuraMasteryTalents.data,\n\t\tspecOptions: RetributionPaladinPresets.DefaultOptions,\n\t\tconsumes: RetributionPaladinPresets.DefaultConsumes,\n\t\tdefaultName: 'Retribution',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceBloodElf,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: RetributionPaladinPresets.P1_PRESET.gear,\n\t\t\t\t2: RetributionPaladinPresets.P2_PRESET.gear,\n\t\t\t\t3: RetributionPaladinPresets.P3_PRESET.gear,\n\t\t\t\t4: RetributionPaladinPresets.P4_PRESET.gear,\n\t\t\t\t5: RetributionPaladinPresets.P5_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: RetributionPaladinPresets.P1_PRESET.gear,\n\t\t\t\t2: RetributionPaladinPresets.P2_PRESET.gear,\n\t\t\t\t3: RetributionPaladinPresets.P3_PRESET.gear,\n\t\t\t\t4: RetributionPaladinPresets.P4_PRESET.gear,\n\t\t\t\t5: RetributionPaladinPresets.P5_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\ttooltip: 'Retribution Paladin',\n\t\ticonUrl: getSpecIcon(Class.ClassPaladin, 2),\n\t},\n\t{\n\t\tspec: Spec.SpecWarlock,\n\t\trotation: WarlockPresets.AfflictionRotation,\n\t\ttalents: WarlockPresets.AfflictionTalents.data,\n\t\tspecOptions: WarlockPresets.AfflictionOptions,\n\t\tconsumes: WarlockPresets.DefaultConsumes,\n\t\tdefaultName: 'Affliction',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: WarlockPresets.P1_AFFLICTION_PRESET.gear,\n\t\t\t\t2: WarlockPresets.P2_AFFLICTION_PRESET.gear,\n\t\t\t\t3: WarlockPresets.P3_AFFLICTION_ALLIANCE_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: WarlockPresets.P1_AFFLICTION_PRESET.gear,\n\t\t\t\t2: WarlockPresets.P2_AFFLICTION_PRESET.gear,\n\t\t\t\t3: WarlockPresets.P3_AFFLICTION_HORDE_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\totherDefaults: WarlockPresets.OtherDefaults,\n\t\ttooltip: 'Affliction Warlock',\n\t\ticonUrl: getSpecIcon(Class.ClassWarlock, 0),\n\t},\n\t{\n\t\tspec: Spec.SpecWarlock,\n\t\trotation: WarlockPresets.DemonologyRotation,\n\t\ttalents: WarlockPresets.DemonologyTalents.data,\n\t\tspecOptions: WarlockPresets.DemonologyOptions,\n\t\tconsumes: WarlockPresets.DefaultConsumes,\n\t\tdefaultName: 'Demonology',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: WarlockPresets.P1_DEMODESTRO_PRESET.gear,\n\t\t\t\t2: WarlockPresets.P2_DEMODESTRO_PRESET.gear,\n\t\t\t\t3: WarlockPresets.P3_DEMO_ALLIANCE_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: WarlockPresets.P1_DEMODESTRO_PRESET.gear,\n\t\t\t\t2: WarlockPresets.P2_DEMODESTRO_PRESET.gear,\n\t\t\t\t3: WarlockPresets.P3_DEMO_HORDE_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\totherDefaults: WarlockPresets.OtherDefaults,\n\t\ttooltip: 'Demonology Warlock',\n\t\ticonUrl: getSpecIcon(Class.ClassWarlock, 1),\n\t},\n\t{\n\t\tspec: Spec.SpecWarlock,\n\t\trotation: WarlockPresets.DestructionRotation,\n\t\ttalents: WarlockPresets.DestructionTalents.data,\n\t\tspecOptions: WarlockPresets.DestructionOptions,\n\t\tconsumes: WarlockPresets.DefaultConsumes,\n\t\tdefaultName: 'Destruction',\n\t\tdefaultFactionRaces: {\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t},\n\t\tdefaultGear: {\n\t\t\t[Faction.Unknown]: {},\n\t\t\t[Faction.Alliance]: {\n\t\t\t\t1: WarlockPresets.P1_DEMODESTRO_PRESET.gear,\n\t\t\t\t2: WarlockPresets.P2_DEMODESTRO_PRESET.gear,\n\t\t\t\t3: WarlockPresets.P3_DESTRO_ALLIANCE_PRESET.gear,\n\t\t\t},\n\t\t\t[Faction.Horde]: {\n\t\t\t\t1: WarlockPresets.P1_DEMODESTRO_PRESET.gear,\n\t\t\t\t2: WarlockPresets.P2_DEMODESTRO_PRESET.gear,\n\t\t\t\t3: WarlockPresets.P3_DESTRO_HORDE_PRESET.gear,\n\t\t\t},\n\t\t},\n\t\totherDefaults: WarlockPresets.OtherDefaults,\n\t\ttooltip: 'Destruction Warlock',\n\t\ticonUrl: getSpecIcon(Class.ClassWarlock, 2),\n\t},\n];\n\nexport const implementedSpecs: Array<Spec> = [...new Set(playerPresets.map(preset => preset.spec))];\n","import { Component } from '../core/components/component.js';\nimport { EnumPicker } from '../core/components/enum_picker.js';\nimport { Raid } from '../core/raid.js';\nimport { MAX_PARTY_SIZE } from '../core/party.js';\nimport { Party } from '../core/party.js';\nimport { Player } from '../core/player.js';\nimport { Player as PlayerProto } from '../core/proto/api.js';\nimport { Class } from '../core/proto/common.js';\nimport { Profession } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Faction } from '../core/proto/common.js';\nimport { Glyphs } from '../core/proto/common.js';\nimport { cssClassForClass, playerToSpec } from '../core/proto_utils/utils.js';\nimport { isTankSpec } from '../core/proto_utils/utils.js';\nimport { specToClass } from '../core/proto_utils/utils.js';\nimport { newUnitReference } from '../core/proto_utils/utils.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\nimport { formatDeltaTextElem } from '../core/utils.js';\nimport { getEnumValues } from '../core/utils.js';\n\nimport { RaidSimUI } from './raid_sim_ui.js';\nimport { playerPresets, specSimFactories } from './presets.js';\n\nimport { BalanceDruid_Options as BalanceDruidOptions } from '../core/proto/druid.js';\nimport { Mage_Options as MageOptions } from '../core/proto/mage.js';\nimport { SmitePriest_Options as SmitePriestOptions } from '../core/proto/priest.js';\nimport { BaseModal } from '../core/components/base_modal.js';\nimport { Tooltip } from 'bootstrap';\n\nconst NEW_PLAYER: number = -1;\n\nenum DragType {\n\tNone,\n\tNew,\n\tMove,\n\tSwap,\n\tCopy,\n}\n\nexport class RaidPicker extends Component {\n\treadonly raidSimUI: RaidSimUI;\n\treadonly raid: Raid;\n\treadonly partyPickers: Array<PartyPicker>;\n\treadonly newPlayerPicker: NewPlayerPicker;\n\n\t// Hold data about the player being dragged while the drag is happening.\n\tcurrentDragPlayer: Player<any> | null = null;\n\tcurrentDragPlayerFromIndex: number = NEW_PLAYER;\n\tcurrentDragType: DragType = DragType.New;\n\n\t// Hold data about the party being dragged while the drag is happening.\n\tcurrentDragParty: PartyPicker | null = null;\n\n\tconstructor(parent: HTMLElement, raidSimUI: RaidSimUI) {\n\t\tsuper(parent, 'raid-picker-root');\n\t\tthis.raidSimUI = raidSimUI;\n\t\tthis.raid = raidSimUI.sim.raid;\n\n\t\tconst raidControls = document.createElement('div');\n\t\traidControls.classList.add('raid-controls');\n\t\tthis.rootElem.appendChild(raidControls);\n\n\t\tthis.newPlayerPicker = new NewPlayerPicker(this.rootElem, this);\n\n\t\tconst activePartiesSelector = new EnumPicker<Raid>(raidControls, this.raidSimUI.sim.raid, {\n\t\t\tlabel: 'Raid Size',\n\t\t\tlabelTooltip: 'Number of players participating in the sim.',\n\t\t\tvalues: [\n\t\t\t\t{ name: '5', value: 1 },\n\t\t\t\t{ name: '10', value: 2 },\n\t\t\t\t{ name: '25', value: 5 },\n\t\t\t\t{ name: '40', value: 8 },\n\t\t\t],\n\t\t\tchangedEvent: (raid: Raid) => raid.numActivePartiesChangeEmitter,\n\t\t\tgetValue: (raid: Raid) => raid.getNumActiveParties(),\n\t\t\tsetValue: (eventID: EventID, raid: Raid, newValue: number) => {\n\t\t\t\traid.setNumActiveParties(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tconst factionSelector = new EnumPicker<NewPlayerPicker>(raidControls, this.newPlayerPicker, {\n\t\t\tlabel: 'Default Faction',\n\t\t\tlabelTooltip: 'Default faction for newly-created players.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Alliance', value: Faction.Alliance },\n\t\t\t\t{ name: 'Horde', value: Faction.Horde },\n\t\t\t],\n\t\t\tchangedEvent: (picker: NewPlayerPicker) => this.raid.sim.factionChangeEmitter,\n\t\t\tgetValue: (picker: NewPlayerPicker) => this.raid.sim.getFaction(),\n\t\t\tsetValue: (eventID: EventID, picker: NewPlayerPicker, newValue: Faction) => {\n\t\t\t\tthis.raid.sim.setFaction(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tconst latestPhaseWithAllPresets = Math.min(...playerPresets.map(preset => Math.max(...Object.keys(preset.defaultGear[Faction.Alliance]).map(k => parseInt(k)))));\n\t\tconst phaseSelector = new EnumPicker<NewPlayerPicker>(raidControls, this.newPlayerPicker, {\n\t\t\tlabel: 'Default Gear',\n\t\t\tlabelTooltip: 'Newly-created players will start with approximate BIS gear from this phase.',\n\t\t\tvalues: [...Array(latestPhaseWithAllPresets).keys()].map(val => {\n\t\t\t\tconst phase = val + 1;\n\t\t\t\treturn { name: 'Phase ' + phase, value: phase };\n\t\t\t}),\n\t\t\tchangedEvent: (picker: NewPlayerPicker) => this.raid.sim.phaseChangeEmitter,\n\t\t\tgetValue: (picker: NewPlayerPicker) => this.raid.sim.getPhase(),\n\t\t\tsetValue: (eventID: EventID, picker: NewPlayerPicker, newValue: number) => {\n\t\t\t\tthis.raid.sim.setPhase(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tconst partiesContainer = document.createElement('div');\n\t\tpartiesContainer.classList.add('parties-container');\n\t\tthis.rootElem.appendChild(partiesContainer);\n\n\t\tthis.partyPickers = this.raid.getParties().map((party, i) => new PartyPicker(partiesContainer, party, i, this));\n\n\t\tconst updateActiveParties = () => {\n\t\t\tthis.partyPickers.forEach(partyPicker => {\n\t\t\t\tif (partyPicker.index < this.raidSimUI.sim.raid.getNumActiveParties()) {\n\t\t\t\t\tpartyPicker.rootElem.classList.add('active');\n\t\t\t\t} else {\n\t\t\t\t\tpartyPicker.rootElem.classList.remove('active');\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tthis.raidSimUI.sim.raid.numActivePartiesChangeEmitter.on(updateActiveParties);\n\t\tupdateActiveParties();\n\n\t\tthis.rootElem.ondragend = event => {\n\t\t\t// Uncomment to remove player when dropped 'off' the raid.\n\t\t\t//if (this.currentDragPlayerFromIndex != NEW_PLAYER) {\n\t\t\t//\tconst playerPicker = this.getPlayerPicker(this.currentDragPlayerFromIndex);\n\t\t\t//\tplayerPicker.setPlayer(null, null, DragType.None);\n\t\t\t//}\n\n\t\t\tthis.clearDragPlayer();\n\t\t\tthis.clearDragParty();\n\t\t};\n\t}\n\n\tgetCurrentFaction(): Faction {\n\t\treturn this.raid.sim.getFaction();\n\t}\n\n\tgetCurrentPhase(): number {\n\t\treturn this.raid.sim.getPhase();\n\t}\n\n\tgetPlayerPicker(raidIndex: number): PlayerPicker {\n\t\treturn this.partyPickers[Math.floor(raidIndex / MAX_PARTY_SIZE)].playerPickers[raidIndex % MAX_PARTY_SIZE];\n\t}\n\n\tgetPlayerPickers(): Array<PlayerPicker> {\n\t\treturn [...new Array(25).keys()].map(i => this.getPlayerPicker(i));\n\t}\n\n\tsetDragPlayer(player: Player<any>, fromIndex: number, type: DragType) {\n\t\tthis.clearDragPlayer();\n\n\t\tthis.currentDragPlayer = player;\n\t\tthis.currentDragPlayerFromIndex = fromIndex;\n\t\tthis.currentDragType = type;\n\n\t\tif (fromIndex != NEW_PLAYER) {\n\t\t\tconst playerPicker = this.getPlayerPicker(fromIndex);\n\t\t\tplayerPicker.rootElem.classList.add('dragfrom');\n\t\t}\n\t}\n\n\tclearDragPlayer() {\n\t\tif (this.currentDragPlayerFromIndex != NEW_PLAYER) {\n\t\t\tconst playerPicker = this.getPlayerPicker(this.currentDragPlayerFromIndex);\n\t\t\tplayerPicker.rootElem.classList.remove('dragfrom');\n\t\t}\n\n\t\tthis.currentDragPlayer = null;\n\t\tthis.currentDragPlayerFromIndex = NEW_PLAYER;\n\t\tthis.currentDragType = DragType.New;\n\t}\n\n\tsetDragParty(party: PartyPicker) {\n\t\tthis.currentDragParty = party;\n\t\tparty.rootElem.classList.add('dragfrom');\n\t}\n\tclearDragParty() {\n\t\tif (this.currentDragParty) {\n\t\t\tthis.currentDragParty.rootElem.classList.remove('dragfrom');\n\t\t\tthis.currentDragParty = null;\n\t\t}\n\t}\n}\n\nexport class PartyPicker extends Component {\n\treadonly party: Party;\n\treadonly index: number;\n\treadonly raidPicker: RaidPicker;\n\treadonly playerPickers: Array<PlayerPicker>;\n\n\tconstructor(parent: HTMLElement, party: Party, index: number, raidPicker: RaidPicker) {\n\t\tsuper(parent, 'party-picker-root');\n\t\tthis.party = party;\n\t\tthis.index = index;\n\t\tthis.raidPicker = raidPicker;\n\n\t\tthis.rootElem.setAttribute('draggable', 'true');\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"party-header\">\n\t\t\t\t<label class=\"party-label form-label\">Group ${index + 1}</label>\n\t\t\t\t<div class=\"party-results\">\n\t\t\t\t\t<span class=\"party-results-dps\"></span>\n\t\t\t\t\t<span class=\"party-results-reference-delta\"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"players-container\">\n\t\t\t</div>\n\t\t`;\n\n\t\tconst playersContainer = this.rootElem.getElementsByClassName('players-container')[0] as HTMLDivElement;\n\t\tthis.playerPickers = [...Array(MAX_PARTY_SIZE).keys()].map(i => new PlayerPicker(playersContainer, this, i));\n\n\t\tconst dpsResultElem = this.rootElem.getElementsByClassName('party-results-dps')[0] as HTMLElement;\n\t\tconst referenceDeltaElem = this.rootElem.getElementsByClassName('party-results-reference-delta')[0] as HTMLElement;\n\n\t\tthis.raidPicker.raidSimUI.referenceChangeEmitter.on(() => {\n\t\t\tconst currentData = this.raidPicker.raidSimUI.getCurrentData();\n\t\t\tconst referenceData = this.raidPicker.raidSimUI.getReferenceData();\n\n\t\t\tconst partyDps = currentData?.simResult.raidMetrics.parties[this.index]?.dps.avg || 0;\n\t\t\tconst referenceDps = referenceData?.simResult.raidMetrics.parties[this.index]?.dps.avg || 0;\n\n\t\t\tif (partyDps == 0 && referenceDps == 0) {\n\t\t\t\tdpsResultElem.textContent = '';\n\t\t\t\treferenceDeltaElem.textContent = '';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdpsResultElem.textContent = `${partyDps.toFixed(1)} DPS`;\n\n\t\t\tif (!referenceData) {\n\t\t\t\treferenceDeltaElem.textContent = '';\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tformatDeltaTextElem(referenceDeltaElem, referenceDps, partyDps, 1);\n\t\t});\n\n\t\tthis.rootElem.ondragstart = event => {\n\t\t\tif (event.target == this.rootElem) {\n\t\t\t\tevent.dataTransfer!.dropEffect = 'move';\n\t\t\t\tevent.dataTransfer!.effectAllowed = 'all';\n\t\t\t\tthis.raidPicker.setDragParty(this);\n\t\t\t}\n\t\t};\n\n\t\tlet dragEnterCounter = 0;\n\t\tthis.rootElem.ondragenter = event => {\n\t\t\tevent.preventDefault();\n\t\t\tif (!this.raidPicker.currentDragParty) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdragEnterCounter++;\n\t\t\tthis.rootElem.classList.add('dragto');\n\t\t};\n\t\tthis.rootElem.ondragleave = event => {\n\t\t\tevent.preventDefault();\n\t\t\tif (!this.raidPicker.currentDragParty) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdragEnterCounter--;\n\t\t\tif (dragEnterCounter <= 0) {\n\t\t\t\tthis.rootElem.classList.remove('dragto');\n\t\t\t}\n\t\t};\n\t\tthis.rootElem.ondragover = event => {\n\t\t\tevent.preventDefault();\n\t\t};\n\t\tthis.rootElem.ondrop = event => {\n\t\t\tif (!this.raidPicker.currentDragParty) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\t\t\tdragEnterCounter = 0;\n\t\t\tthis.rootElem.classList.remove('dragto');\n\n\t\t\tconst eventID = TypedEvent.nextEventID();\n\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\tconst srcPartyPicker = this.raidPicker.currentDragParty!;\n\n\t\t\t\tfor (let i = 0; i < MAX_PARTY_SIZE; i++) {\n\t\t\t\t\tconst srcPlayerPicker = srcPartyPicker.playerPickers[i]!;\n\t\t\t\t\tconst dstPlayerPicker = this.playerPickers[i]!;\n\n\t\t\t\t\tconst srcPlayer = srcPlayerPicker.player;\n\t\t\t\t\tconst dstPlayer = dstPlayerPicker.player;\n\n\t\t\t\t\tsrcPlayerPicker.setPlayer(eventID, dstPlayer, DragType.Swap);\n\t\t\t\t\tdstPlayerPicker.setPlayer(eventID, srcPlayer, DragType.Swap);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.raidPicker.clearDragParty();\n\t\t};\n\t}\n}\n\nexport class PlayerPicker extends Component {\n\t// Index of this player within its party (0-4).\n\treadonly index: number;\n\n\t// Index of this player within the whole raid (0-24).\n\treadonly raidIndex: number;\n\n\tplayer: Player<any> | null;\n\n\treadonly partyPicker: PartyPicker;\n\treadonly raidPicker: RaidPicker;\n\n\tprivate labelElem: HTMLElement | null;\n\tprivate iconElem: HTMLImageElement | null;\n\tprivate nameElem: HTMLInputElement | null;\n\tprivate resultsElem: HTMLElement | null;\n\tprivate dpsResultElem: HTMLElement | null;\n\tprivate referenceDeltaElem: HTMLElement | null;\n\n\tconstructor(parent: HTMLElement, partyPicker: PartyPicker, index: number) {\n\t\tsuper(parent, 'player-picker-root');\n\t\tthis.index = index;\n\t\tthis.raidIndex = partyPicker.index * MAX_PARTY_SIZE + index;\n\t\tthis.player = null;\n\t\tthis.partyPicker = partyPicker;\n\t\tthis.raidPicker = partyPicker.raidPicker;\n\n\t\tthis.labelElem = null;\n\t\tthis.iconElem = null;\n\t\tthis.nameElem = null;\n\t\tthis.resultsElem = null;\n\t\tthis.dpsResultElem = null;\n\t\tthis.referenceDeltaElem = null;\n\n\t\tthis.rootElem.classList.add('player');\n\n\t\tthis.partyPicker.party.compChangeEmitter.on(eventID => {\n\t\t\tconst newPlayer = this.partyPicker.party.getPlayer(this.index);\n\t\t\tif (newPlayer != this.player)\n\t\t\t\tthis.setPlayer(eventID, newPlayer, DragType.None);\n\t\t});\n\n\t\tthis.raidPicker.raidSimUI.referenceChangeEmitter.on(() => {\n\t\t\tconst currentData = this.raidPicker.raidSimUI.getCurrentData();\n\t\t\tconst referenceData = this.raidPicker.raidSimUI.getReferenceData();\n\n\t\t\tconst playerDps = currentData?.simResult.getPlayerWithRaidIndex(this.raidIndex)?.dps.avg || 0;\n\t\t\tconst referenceDps = referenceData?.simResult.getPlayerWithRaidIndex(this.raidIndex)?.dps.avg || 0;\n\n\t\t\tif (this.player) {\n\t\t\t\tthis.resultsElem?.classList.remove('hide');\n\t\t\t\t(this.dpsResultElem as HTMLElement).textContent = `${playerDps.toFixed(1)} DPS`;\n\n\t\t\t\tif (referenceData)\n\t\t\t\t\tformatDeltaTextElem(this.referenceDeltaElem as HTMLElement, referenceDps, playerDps, 1);\n\t\t\t}\n\t\t});\n\n\t\tlet dragEnterCounter = 0;\n\t\tthis.rootElem.ondragenter = event => {\n\t\t\tevent.preventDefault();\n\t\t\tif (this.raidPicker.currentDragParty) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdragEnterCounter++;\n\t\t\tthis.rootElem.classList.add('dragto');\n\t\t};\n\t\tthis.rootElem.ondragleave = event => {\n\t\t\tevent.preventDefault();\n\t\t\tif (this.raidPicker.currentDragParty) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdragEnterCounter--;\n\t\t\tif (dragEnterCounter <= 0) {\n\t\t\t\tthis.rootElem.classList.remove('dragto');\n\t\t\t}\n\t\t};\n\t\tthis.rootElem.ondragover = event => event.preventDefault();\n\t\tthis.rootElem.ondrop = event => {\n\t\t\tif (this.raidPicker.currentDragParty) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar dropData = event.dataTransfer!.getData(\"text/plain\");\n\n\t\t\tevent.preventDefault();\n\t\t\tdragEnterCounter = 0;\n\t\t\tthis.rootElem.classList.remove('dragto');\n\n\t\t\tconst eventID = TypedEvent.nextEventID();\n\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\tif (this.raidPicker.currentDragPlayer == null && dropData.length == 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.raidPicker.currentDragPlayerFromIndex == this.raidIndex) {\n\t\t\t\t\tthis.raidPicker.clearDragPlayer();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst dragType = this.raidPicker.currentDragType;\n\n\t\t\t\tif (this.raidPicker.currentDragPlayerFromIndex != NEW_PLAYER) {\n\t\t\t\t\tconst fromPlayerPicker = this.raidPicker.getPlayerPicker(this.raidPicker.currentDragPlayerFromIndex);\n\t\t\t\t\tif (dragType == DragType.Swap) {\n\t\t\t\t\t\tfromPlayerPicker.setPlayer(eventID, this.player, dragType);\n\t\t\t\t\t} else if (dragType == DragType.Move) {\n\t\t\t\t\t\tfromPlayerPicker.setPlayer(eventID, null, dragType);\n\t\t\t\t\t}\n\t\t\t\t} else if (this.raidPicker.currentDragPlayer == null) {\n\t\t\t\t\t// This would be a copy from another window.\n\t\t\t\t\tconst binary = atob(dropData);\n\t\t\t\t\tconst bytes = new Uint8Array(binary.length);\n\t\t\t\t\tfor (let i = 0; i < bytes.length; i++) {\n\t\t\t\t\t\tbytes[i] = binary.charCodeAt(i);\n\t\t\t\t\t}\n\t\t\t\t\tconst playerProto = PlayerProto.fromBinary(bytes);\n\n\t\t\t\t\tvar localPlayer = new Player(playerToSpec(playerProto), this.raidPicker.raidSimUI.sim);\n\t\t\t\t\tlocalPlayer.fromProto(eventID, playerProto);\n\t\t\t\t\tthis.raidPicker.currentDragPlayer = localPlayer;\n\t\t\t\t}\n\n\t\t\t\tif (dragType == DragType.Copy) {\n\t\t\t\t\tthis.setPlayer(eventID, this.raidPicker.currentDragPlayer!.clone(eventID), dragType);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setPlayer(eventID, this.raidPicker.currentDragPlayer, dragType);\n\t\t\t\t}\n\n\t\t\t\tthis.raidPicker.clearDragPlayer();\n\t\t\t});\n\t\t};\n\n\t\tthis.update();\n\t}\n\n\tsetPlayer(eventID: EventID, newPlayer: Player<any> | null, dragType: DragType) {\n\t\tif (newPlayer == this.player) {\n\t\t\treturn;\n\t\t}\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.player = newPlayer;\n\t\t\tif (newPlayer) {\n\t\t\t\tthis.partyPicker.party.setPlayer(eventID, this.index, newPlayer);\n\n\t\t\t\tif (dragType == DragType.New) {\n\t\t\t\t\tapplyNewPlayerAssignments(eventID, newPlayer, this.raidPicker.raid);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.partyPicker.party.setPlayer(eventID, this.index, newPlayer);\n\t\t\t\tthis.partyPicker.party.compChangeEmitter.emit(eventID);\n\t\t\t}\n\t\t});\n\n\t\tthis.update();\n\t}\n\n\tprivate update() {\n\t\tif (this.player == null) {\n\t\t\tthis.rootElem.className = 'player-picker-root player';\n\t\t\tthis.rootElem.innerHTML = '';\n\n\t\t\tthis.labelElem = null;\n\t\t\tthis.iconElem = null;\n\t\t\tthis.nameElem = null;\n\t\t\tthis.resultsElem = null;\n\t\t\tthis.dpsResultElem = null;\n\t\t\tthis.referenceDeltaElem = null;\n\t\t} else {\n\t\t\tconst classCssClass = cssClassForClass(this.player.getClass());\n\n\t\t\tthis.rootElem.className = `player-picker-root player bg-${classCssClass}-dampened`;\n\t\t\tthis.rootElem.innerHTML = `\n\t\t\t\t<div class=\"player-label\">\n\t\t\t\t\t<img class=\"player-icon\" src=\"${this.player.getSpecIcon()}\" draggable=\"true\" />\n\t\t\t\t\t<div class=\"player-details\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclass=\"player-name text-${classCssClass}\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue=\"${this.player.getName()}\"\n\t\t\t\t\t\t\tspellcheck=\"false\"\n\t\t\t\t\t\t\tmaxlength=\"15\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div class=\"player-results hide\">\n\t\t\t\t\t\t\t<span class=\"player-results-dps\"></span>\n\t\t\t\t\t\t\t<span class=\"player-results-reference-delta\"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"player-options\">\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\t\tclass=\"player-edit\"\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\t\t\tdata-bs-title=\"Click to Edit\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<i class=\"fa fa-edit fa-lg\"></i>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\t\tclass=\"player-copy link-warning\"\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\tdraggable=\"true\"\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\t\t\tdata-bs-title=\"Drag to Copy\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<i class=\"fa fa-copy fa-lg\"></i>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\t\tclass=\"player-delete link-danger\"\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\t\t\tdata-bs-title=\"Click to Delete\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<i class=\"fa fa-times fa-lg\"></i>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tthis.labelElem = this.rootElem.querySelector('.player-label') as HTMLElement;\n\t\t\tthis.iconElem = this.rootElem.querySelector('.player-icon') as HTMLImageElement;\n\t\t\tthis.nameElem = this.rootElem.querySelector('.player-name') as HTMLInputElement;\n\t\t\tthis.resultsElem = this.rootElem.querySelector('.player-results') as HTMLElement;\n\t\t\tthis.dpsResultElem = this.rootElem.querySelector('.player-results-dps') as HTMLElement;\n\t\t\tthis.referenceDeltaElem = this.rootElem.querySelector('.player-results-reference-delta') as HTMLElement;\n\n\t\t\tthis.bindPlayerEvents();\n\t\t}\n\t}\n\n\tprivate bindPlayerEvents() {\n\t\tthis.nameElem?.addEventListener('input', event => {\n\t\t\tthis.player?.setName(TypedEvent.nextEventID(), this.nameElem?.value || '');\n\t\t});\n\n\t\tthis.nameElem?.addEventListener('mousedown', event => {\n\t\t\tthis.partyPicker.rootElem.setAttribute('draggable', 'false')\n\t\t})\n\n\t\tthis.nameElem?.addEventListener('mouseup', event => {\n\t\t\tthis.partyPicker.rootElem.setAttribute('draggable', 'true')\n\t\t})\n\n\t\tconst emptyName = 'Unnamed';\n\t\tthis.nameElem?.addEventListener('focusout', event => {\n\t\t\tif (this.nameElem && !this.nameElem.value) {\n\t\t\t\tthis.nameElem.value = emptyName;\n\t\t\t\tthis.player?.setName(TypedEvent.nextEventID(), emptyName);\n\t\t\t}\n\t\t});\n\n\t\tconst dragStart = (event: DragEvent, type: DragType) => {\n\t\t\tif (this.player == null) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.dataTransfer!.dropEffect = 'move';\n\t\t\tevent.dataTransfer!.effectAllowed = 'all';\n\n\t\t\tif (this.player) {\n\t\t\t\tvar playerDataProto = this.player.toProto(true);\n\t\t\t\tevent.dataTransfer!.setData(\"text/plain\", btoa(String.fromCharCode(...PlayerProto.toBinary(playerDataProto))));\n\t\t\t}\n\n\t\t\tthis.raidPicker.setDragPlayer(this.player, this.raidIndex, type);\n\t\t};\n\n\t\tconst editElem = this.rootElem.querySelector('.player-edit') as HTMLElement;\n\t\tconst copyElem = this.rootElem.querySelector('.player-copy') as HTMLElement;\n\t\tconst deleteElem = this.rootElem.querySelector('.player-delete') as HTMLElement;\n\n\t\tconst editTooltip = Tooltip.getOrCreateInstance(editElem);\n\t\tconst copyTooltip = Tooltip.getOrCreateInstance(copyElem);\n\t\tconst deleteTooltip = Tooltip.getOrCreateInstance(deleteElem);\n\n\t\t(this.iconElem as HTMLElement).ondragstart = event => {\n\t\t\tevent.dataTransfer!.setDragImage(this.rootElem, 20, 20);\n\t\t\tdragStart(event, DragType.Swap)\n\t\t}\n\t\teditElem.onclick = event => {\n\t\t\tnew PlayerEditorModal(this.player as Player<any>);\n\t\t};\n\t\tcopyElem.ondragstart = event => {\n\t\t\tevent.dataTransfer!.setDragImage(this.rootElem, 20, 20);\n\t\t\tdragStart(event, DragType.Copy);\n\t\t}\n\t\tdeleteElem.onclick = event => {\n\t\t\tdeleteTooltip.hide();\n\t\t\tthis.setPlayer(TypedEvent.nextEventID(), null, DragType.None);\n\t\t}\n\t}\n}\n\nclass PlayerEditorModal extends BaseModal {\n\tconstructor(player: Player<any>) {\n\t\tsuper(document.body, 'player-editor-modal', {\n\t\t\tcloseButton: { fixed: true },\n\t\t\theader: false\n\t\t});\n\n\t\tthis.rootElem.id = 'playerEditorModal';\n\t\tthis.body.insertAdjacentHTML('beforeend', `\n\t\t\t<div class=\"player-editor within-raid-sim\"></div>\n\t\t`);\n\n\t\tconst editorRoot = this.rootElem.getElementsByClassName('player-editor')[0] as HTMLElement;\n\t\tconst individualSim = specSimFactories[player.spec]!(editorRoot, player);\n\t}\n}\n\nclass NewPlayerPicker extends Component {\n\treadonly raidPicker: RaidPicker;\n\n\tconstructor(parent: HTMLElement, raidPicker: RaidPicker) {\n\t\tsuper(parent, 'new-player-picker-root');\n\t\tthis.raidPicker = raidPicker;\n\n\t\tgetEnumValues(Class).forEach(wowClass => {\n\t\t\tif (wowClass == Class.ClassUnknown) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst matchingPresets = playerPresets.filter(preset => specToClass[preset.spec] == wowClass);\n\t\t\tif (matchingPresets.length == 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst classPresetsContainer = document.createElement('div');\n\t\t\tclassPresetsContainer.classList.add('class-presets-container', `bg-${cssClassForClass(wowClass as Class)}-dampened`);\n\t\t\tthis.rootElem.appendChild(classPresetsContainer);\n\n\t\t\tmatchingPresets.forEach(matchingPreset => {\n\t\t\t\tconst presetElemFragment = document.createElement('fragment');\n\t\t\t\tpresetElemFragment.innerHTML = `\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\tdraggable=\"true\"\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\"\n\t\t\t\t\t\tdata-bs-title=\"${matchingPreset.tooltip}\"\n\t\t\t\t\t\tdata-bs-html=\"true\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<img class=\"preset-picker-icon player-icon\" src=\"${matchingPreset.iconUrl}\"/>\n\t\t\t\t\t</a>\n\t\t\t\t`\n\t\t\t\tconst presetElem = presetElemFragment.children[0] as HTMLElement;\n\t\t\t\tclassPresetsContainer.appendChild(presetElem);\n\n\t\t\t\tTooltip.getOrCreateInstance(presetElem);\n\n\t\t\t\tpresetElem.ondragstart = event => {\n\t\t\t\t\tconst eventID = TypedEvent.nextEventID();\n\t\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\t\tconst dragImage = new Image();\n\t\t\t\t\t\tdragImage.src = matchingPreset.iconUrl;\n\t\t\t\t\t\tevent.dataTransfer!.setDragImage(dragImage, 30, 30);\n\t\t\t\t\t\tevent.dataTransfer!.setData(\"text/plain\", \"\");\n\t\t\t\t\t\tevent.dataTransfer!.dropEffect = 'copy';\n\n\t\t\t\t\t\tconst newPlayer = new Player(matchingPreset.spec, this.raidPicker.raid.sim);\n\t\t\t\t\t\tnewPlayer.applySharedDefaults(eventID);\n\t\t\t\t\t\tnewPlayer.setRace(eventID, matchingPreset.defaultFactionRaces[this.raidPicker.getCurrentFaction()]);\n\t\t\t\t\t\tnewPlayer.setRotation(eventID, matchingPreset.rotation);\n\t\t\t\t\t\tnewPlayer.setTalentsString(eventID, matchingPreset.talents.talentsString);\n\t\t\t\t\t\tnewPlayer.setGlyphs(eventID, matchingPreset.talents.glyphs || Glyphs.create());\n\t\t\t\t\t\tnewPlayer.setSpecOptions(eventID, matchingPreset.specOptions);\n\t\t\t\t\t\tnewPlayer.setConsumes(eventID, matchingPreset.consumes);\n\t\t\t\t\t\tnewPlayer.setName(eventID, matchingPreset.defaultName);\n\t\t\t\t\t\tnewPlayer.setProfession1(eventID, matchingPreset.otherDefaults?.profession1 || Profession.Engineering);\n\t\t\t\t\t\tnewPlayer.setProfession2(eventID, matchingPreset.otherDefaults?.profession2 || Profession.Jewelcrafting);\n\t\t\t\t\t\tnewPlayer.setDistanceFromTarget(eventID, matchingPreset.otherDefaults?.distanceFromTarget || 0);\n\n\t\t\t\t\t\t// Need to wait because the gear might not be loaded yet.\n\t\t\t\t\t\tthis.raidPicker.raid.sim.waitForInit().then(() => {\n\t\t\t\t\t\t\tnewPlayer.setGear(\n\t\t\t\t\t\t\t\teventID,\n\t\t\t\t\t\t\t\tthis.raidPicker.raid.sim.db.lookupEquipmentSpec(\n\t\t\t\t\t\t\t\t\tmatchingPreset.defaultGear[this.raidPicker.getCurrentFaction()][this.raidPicker.getCurrentPhase()]));\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.raidPicker.setDragPlayer(newPlayer, NEW_PLAYER, DragType.New);\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n}\n\nfunction applyNewPlayerAssignments(eventID: EventID, newPlayer: Player<any>, raid: Raid) {\n\tif (isTankSpec(newPlayer.spec)) {\n\t\tconst tanks = raid.getTanks();\n\t\tconst emptyIdx = tanks.findIndex(tank => raid.getPlayerFromUnitReference(tank) == null);\n\t\tif (emptyIdx == -1) {\n\t\t\tif (tanks.length < 3) {\n\t\t\t\traid.setTanks(eventID, tanks.concat([newPlayer.makeUnitReference()]));\n\t\t\t}\n\t\t} else {\n\t\t\ttanks[emptyIdx] = newPlayer.makeUnitReference();\n\t\t\traid.setTanks(eventID, tanks);\n\t\t}\n\t}\n\n\t// Spec-specific assignments. For most cases, default to buffing self.\n\tif (newPlayer.spec == Spec.SpecBalanceDruid) {\n\t\tconst newOptions = newPlayer.getSpecOptions() as BalanceDruidOptions;\n\t\tnewOptions.innervateTarget = newUnitReference(newPlayer.getRaidIndex());\n\t\tnewPlayer.setSpecOptions(eventID, newOptions);\n\t} else if (newPlayer.spec == Spec.SpecSmitePriest) {\n\t\tconst newOptions = newPlayer.getSpecOptions() as SmitePriestOptions;\n\t\tnewOptions.powerInfusionTarget = newUnitReference(newPlayer.getRaidIndex());\n\t\tnewPlayer.setSpecOptions(eventID, newOptions);\n\t} else if (newPlayer.spec == Spec.SpecMage) {\n\t\tconst newOptions = newPlayer.getSpecOptions() as MageOptions;\n\t\tnewOptions.focusMagicTarget = newUnitReference(newPlayer.getRaidIndex());\n\t\tnewPlayer.setSpecOptions(eventID, newOptions);\n\t}\n}\n","import {\n\tClass,\n\tRaidBuffs,\n\tSpec,\n} from '../core/proto/common.js';\nimport { Component } from '../core/components/component.js';\nimport { Player } from \"../core/player.js\";\nimport { Raid } from \"../core/raid.js\";\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport {\n\tClassSpecs,\n\tSpecTalents,\n\tspecToClass,\n\tisTankSpec,\n\tisHealingSpec,\n\tisMeleeDpsSpec,\n\tisRangedDpsSpec,\n\ttextCssClassForClass,\n} from '../core/proto_utils/utils.js';\nimport { sum } from '../core/utils.js';\n\nimport { Hunter_Rotation_StingType as HunterStingType, Hunter_Options_PetType as HunterPetType } from '../core/proto/hunter.js';\nimport { PaladinAura } from '../core/proto/paladin.js';\nimport { Rogue_Rotation_Frequency as ExposeFrequency } from '../core/proto/rogue.js';\nimport { AirTotem, EarthTotem, FireTotem, WaterTotem } from '../core/proto/shaman.js';\nimport { Warlock_Rotation_Curse as WarlockCurse, Warlock_Options_Summon as WarlockSummon } from '../core/proto/warlock.js';\nimport { WarriorShout, Warrior_Rotation_SunderArmor as SunderArmor } from '../core/proto/warrior.js';\n\nimport { RaidSimUI } from './raid_sim_ui.js';\nimport { Tooltip } from 'bootstrap';\n\ninterface RaidStatsOptions {\n\tsections: Array<RaidStatsSectionOptions>,\n}\n\ninterface RaidStatsSectionOptions {\n\tlabel: string,\n\tcategories: Array<RaidStatsCategoryOptions>,\n}\n\ninterface RaidStatsCategoryOptions {\n\tlabel: string,\n\teffects: Array<RaidStatsEffectOptions>,\n}\n\ntype PlayerProvider = { class?: Class, condition: (player: Player<any>) => boolean };\ntype RaidProvider = (raid: Raid) => boolean;\n\ninterface RaidStatsEffectOptions {\n\tlabel: string,\n\tactionId?: ActionId,\n\tplayerData?: PlayerProvider,\n\traidData?: RaidProvider,\n}\n\nexport class RaidStats extends Component {\n\tprivate readonly categories: Array<RaidStatsCategory>;\n\n\tconstructor(parent: HTMLElement, raidSimUI: RaidSimUI) {\n\t\tsuper(parent, 'raid-stats');\n\n\t\tlet categories: Array<RaidStatsCategory> = [];\n\t\tRAID_STATS_OPTIONS.sections.forEach(section => {\n\t\t\tconst sectionElem = document.createElement('div');\n\t\t\tsectionElem.classList.add('raid-stats-section');\n\t\t\tthis.rootElem.appendChild(sectionElem);\n\t\t\tsectionElem.innerHTML = `\n\t\t\t\t<div class=\"raid-stats-section-header\">\n\t\t\t\t\t<label class=\"raid-stats-section-label form-label\">${section.label}</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"raid-stats-section-content\"></div>\n\t\t\t`;\n\t\t\tconst contentElem = sectionElem.getElementsByClassName('raid-stats-section-content')[0] as HTMLDivElement;\n\n\t\t\tsection.categories.forEach(categoryOptions => {\n\t\t\t\tcategories.push(new RaidStatsCategory(contentElem, raidSimUI, categoryOptions));\n\t\t\t});\n\t\t});\n\t\tthis.categories = categories;\n\n\t\traidSimUI.changeEmitter.on(eventID => this.categories.forEach(c => c.update()));\n\t}\n}\n\nclass RaidStatsCategory extends Component {\n\treadonly raidSimUI: RaidSimUI;\n\tprivate readonly options: RaidStatsCategoryOptions;\n\tprivate readonly effects: Array<RaidStatsEffect>;\n\tprivate readonly counterElem: HTMLElement;\n\tprivate readonly tooltipElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, raidSimUI: RaidSimUI, options: RaidStatsCategoryOptions) {\n\t\tsuper(parent, 'raid-stats-category-root');\n\t\tthis.raidSimUI = raidSimUI;\n\t\tthis.options = options;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"raid-stats-category\">\n\t\t\t\t<span class=\"raid-stats-category-counter\"></span>\n\t\t\t\t<span class=\"raid-stats-category-label\">${options.label}</span>\n\t\t\t</a>\n\t\t`;\n\n\t\tthis.counterElem = this.rootElem.querySelector('.raid-stats-category-counter') as HTMLElement;\n\t\tthis.tooltipElem = document.createElement('div');\n\t\tthis.tooltipElem.innerHTML = `\n\t\t\t<label class=\"raid-stats-category-label\">${options.label}</label>\n\t\t`\n\n\t\tthis.effects = options.effects.map(opt => new RaidStatsEffect(this.tooltipElem, raidSimUI, opt));\n\n\t\tif (options.effects.length != 1 || options.effects[0].playerData?.class) {\n\t\t\tconst statsLink = this.rootElem.querySelector('.raid-stats-category') as HTMLElement;\n\n\t\t\t// Using the title option here because outerHTML sanitizes and filters out the img src options\n\t\t\tTooltip.getOrCreateInstance(statsLink, {\n\t\t\t\tcustomClass: 'raid-stats-category-tooltip',\n\t\t\t\thtml: true,\n\t\t\t\tplacement: 'right',\n\t\t\t\ttitle: this.tooltipElem,\n\t\t\t})\n\t\t}\n\t}\n\n\tupdate() {\n\t\tthis.effects.forEach(effect => effect.update());\n\n\t\tconst total = sum(this.effects.map(effect => effect.count));\n\t\tthis.counterElem.textContent = String(total);\n\n\t\tconst statsLink = this.rootElem.querySelector('.raid-stats-category') as HTMLElement;\n\n\t\tif (total == 0) {\n\t\t\tstatsLink?.classList.remove('active');\n\t\t} else {\n\t\t\tstatsLink?.classList.add('active');\n\t\t}\n\t}\n}\n\nclass RaidStatsEffect extends Component {\n\treadonly raidSimUI: RaidSimUI;\n\tprivate readonly options: RaidStatsEffectOptions;\n\tprivate readonly counterElem: HTMLElement;\n\n\tcurPlayers: Array<Player<any>>;\n\tcount: number;\n\n\tconstructor(parent: HTMLElement, raidSimUI: RaidSimUI, options: RaidStatsEffectOptions) {\n\t\tsuper(parent, 'raid-stats-effect');\n\t\tthis.raidSimUI = raidSimUI;\n\t\tthis.options = options;\n\n\t\tthis.curPlayers = [];\n\t\tthis.count = 0;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<span class=\"raid-stats-effect-counter\"></span>\n\t\t\t<img class=\"raid-stats-effect-icon\"></img>\n\t\t\t<span class=\"raid-stats-effect-label\">${options.label}</span>\n\t\t`;\n\t\tthis.counterElem = this.rootElem.querySelector('.raid-stats-effect-counter') as HTMLElement;\n\n\t\tif (this.options.playerData?.class) {\n\t\t\tconst labelElem = this.rootElem.querySelector('.raid-stats-effect-label') as HTMLElement;\n\t\t\tconst playerCssClass = textCssClassForClass(this.options.playerData.class);\n\t\t\tlabelElem.classList.add(playerCssClass);\n\t\t}\n\n\t\tconst iconElem = this.rootElem.querySelector('.raid-stats-effect-icon') as HTMLImageElement;\n\t\tif (options.actionId) {\n\t\t\toptions.actionId.fill().then(actionId => iconElem.src = actionId.iconUrl);\n\t\t} else {\n\t\t\ticonElem.remove();\n\t\t}\n\t}\n\n\tupdate() {\n\t\tif (this.options.playerData) {\n\t\t\tthis.curPlayers = this.raidSimUI.getActivePlayers().filter(p => this.options.playerData!.condition(p));\n\t\t}\n\n\t\tconst raidData = this.options.raidData && this.options.raidData(this.raidSimUI.sim.raid);\n\n\t\tthis.count = this.curPlayers.length + (raidData ? 1 : 0);\n\t\tthis.counterElem.textContent = String(this.count);\n\t\tif (this.count == 0) {\n\t\t\tthis.rootElem.classList.remove('active');\n\t\t} else {\n\t\t\tthis.rootElem.classList.add('active');\n\t\t}\n\t}\n}\n\nfunction negateIf(val: boolean, cond: boolean): boolean {\n\treturn cond ? !val : val;\n}\n\nfunction playerClass<T extends Class>(clazz: T, extraCondition?: (player: Player<ClassSpecs<T>>) => boolean): PlayerProvider {\n\treturn {\n\t\tclass: clazz,\n\t\tcondition: (player: Player<any>): boolean => {\n\t\t\treturn player.isClass(clazz)\n\t\t\t\t&& (!extraCondition || extraCondition(player));\n\t\t},\n\t};\n}\nfunction playerClassAndTalentInternal<T extends Class>(clazz: T, talentName: keyof SpecTalents<ClassSpecs<T>>, negateTalent: boolean, extraCondition?: (player: Player<ClassSpecs<T>>) => boolean): PlayerProvider {\n\treturn {\n\t\tclass: clazz,\n\t\tcondition: (player: Player<any>): boolean => {\n\t\t\treturn player.isClass(clazz)\n\t\t\t\t&& negateIf(Boolean((player.getTalents() as any)[talentName]), negateTalent)\n\t\t\t\t&& (!extraCondition || extraCondition(player));\n\t\t},\n\t};\n}\nfunction playerClassAndTalent<T extends Class>(clazz: T, talentName: keyof SpecTalents<ClassSpecs<T>>, extraCondition?: (player: Player<ClassSpecs<T>>) => boolean): PlayerProvider {\n\treturn playerClassAndTalentInternal(clazz, talentName, false, extraCondition);\n}\nfunction playerClassAndMissingTalent<T extends Class>(clazz: T, talentName: keyof SpecTalents<ClassSpecs<T>>, extraCondition?: (player: Player<ClassSpecs<T>>) => boolean): PlayerProvider {\n\treturn playerClassAndTalentInternal(clazz, talentName, true, extraCondition);\n}\nfunction playerSpecAndTalentInternal<T extends Spec>(spec: T, talentName: keyof SpecTalents<T>, negateTalent: boolean, extraCondition?: (player: Player<T>) => boolean): PlayerProvider {\n\treturn {\n\t\tclass: specToClass[spec],\n\t\tcondition: (player: Player<any>): boolean => {\n\t\t\treturn player.isSpec(spec)\n\t\t\t\t&& negateIf(Boolean((player.getTalents() as any)[talentName]), negateTalent)\n\t\t\t\t&& (!extraCondition || extraCondition(player));\n\t\t},\n\t};\n}\nfunction playerSpecAndTalent<T extends Spec>(spec: T, talentName: keyof SpecTalents<T>, extraCondition?: (player: Player<T>) => boolean): PlayerProvider {\n\treturn playerSpecAndTalentInternal(spec, talentName, false, extraCondition);\n}\nfunction playerSpecAndMissingTalent<T extends Spec>(spec: T, talentName: keyof SpecTalents<T>, extraCondition?: (player: Player<T>) => boolean): PlayerProvider {\n\treturn playerSpecAndTalentInternal(spec, talentName, true, extraCondition);\n}\n\nfunction raidBuff(buffName: keyof RaidBuffs): RaidProvider {\n\treturn (raid: Raid): boolean => {\n\t\treturn Boolean(raid.getBuffs()[buffName]);\n\t};\n}\n\nconst RAID_STATS_OPTIONS: RaidStatsOptions = {\n\tsections: [\n\t\t{\n\t\t\tlabel: 'Roles',\n\t\t\tcategories: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Tanks',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Tanks',\n\t\t\t\t\t\t\tplayerData: { condition: player => isTankSpec(player.spec) },\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Healers',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Healers',\n\t\t\t\t\t\t\tplayerData: { condition: player => isHealingSpec(player.spec) },\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Melee',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Melee',\n\t\t\t\t\t\t\tplayerData: { condition: player => isMeleeDpsSpec(player.spec) },\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Ranged',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Ranged',\n\t\t\t\t\t\t\tplayerData: { condition: player => isRangedDpsSpec(player.spec) },\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tlabel: 'Buffs',\n\t\t\tcategories: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Bloodlust',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Bloodlust',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(2825),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassShaman, player => player.getSpecOptions().bloodlust),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Stats',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Gift of the Wild',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(17051),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDruid, 'improvedMarkOfTheWild'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Gift of the Wild',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48470),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassDruid, 'improvedMarkOfTheWild'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Drums of the Wild',\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(49634),\n\t\t\t\t\t\t\traidData: raidBuff('drumsOfTheWild'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Stats %',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Blessing of Kings',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(25898),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassPaladin),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Drums of Forgotten Kings',\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(49633),\n\t\t\t\t\t\t\traidData: raidBuff('drumsOfForgottenKings'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Blessing of Sanctuary',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(25899),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassPaladin),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Armor',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Devotion Aura',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(20140),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'improvedDevotionAura', player => player.getSpecOptions().aura == PaladinAura.DevotionAura),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Devotion Aura',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48942),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassPaladin, 'improvedDevotionAura', player => player.getSpecOptions().aura == PaladinAura.DevotionAura),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Stoneskin Totem',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(16293),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'guardianTotems', player => player.getSpecOptions().totems?.earth == EarthTotem.StoneskinTotem),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Stoneskin Totem',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(58753),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassShaman, 'guardianTotems', player => player.getSpecOptions().totems?.earth == EarthTotem.StoneskinTotem),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Scroll of Protection',\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(43468),\n\t\t\t\t\t\t\traidData: raidBuff('scrollOfProtection'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Stamina',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Power Word Fortitude',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(14767),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPriest, 'improvedPowerWordFortitude'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Power Word Fortitude',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48161),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassPriest, 'improvedPowerWordFortitude'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Scroll of Stamina',\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(37094),\n\t\t\t\t\t\t\traidData: raidBuff('scrollOfStamina'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Str + Agi',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Strength of Earth Totem',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(52456),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'enhancingTotems', player => player.getSpecOptions().totems?.earth == EarthTotem.StrengthOfEarthTotem),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Strength of Earth Totem',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(58643),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassShaman, 'enhancingTotems', player => player.getSpecOptions().totems?.earth == EarthTotem.StrengthOfEarthTotem),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Horn of Winter',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57623),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassDeathknight),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Scroll of Strength',\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(43466),\n\t\t\t\t\t\t\traidData: raidBuff('scrollOfStrength'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Scroll of Agility',\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(43464),\n\t\t\t\t\t\t\traidData: raidBuff('scrollOfAgility'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Intellect',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Arcane Brilliance',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(43002),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassMage),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Fel Intelligence',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(54038),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'improvedFelhunter', player => player.getSpecOptions().summon == WarlockSummon.Felhunter),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Fel Intelligence',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57567),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarlock, 'improvedFelhunter', player => player.getSpecOptions().summon == WarlockSummon.Felhunter),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Scroll of Intellect',\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(37092),\n\t\t\t\t\t\t\traidData: raidBuff('scrollOfIntellect'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Spirit',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Divine Spirit',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48073),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassPriest),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Fel Intelligence',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(54038),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'improvedFelhunter', player => player.getSpecOptions().summon == WarlockSummon.Felhunter),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Fel Intelligence',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57567),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarlock, 'improvedFelhunter', player => player.getSpecOptions().summon == WarlockSummon.Felhunter),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Scroll of Spirit',\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(37098),\n\t\t\t\t\t\t\traidData: raidBuff('scrollOfSpirit'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Atk Pwr',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Blessing of Might',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(20045),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassPaladin),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Blessing of Might',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48934),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassPaladin),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Battle Shout',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(12861),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'commandingPresence', player => player.getSpecOptions().shout == WarriorShout.WarriorShoutBattle),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Battle Shout',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47436),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarrior, 'commandingPresence', player => player.getSpecOptions().shout == WarriorShout.WarriorShoutBattle),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Atk Pwr %',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Abomination\\'s Might',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(53138),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDeathknight, 'abominationsMight'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Unleashed Rage',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(30809),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'unleashedRage'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Trueshot Aura',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(19506),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassHunter, 'trueshotAura'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Damage %',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Sanctified Retribution',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(31869),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'sanctifiedRetribution'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Arcane Empowerment',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(31583),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassMage, 'arcaneEmpowerment'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Ferocious Inspiration',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(34460),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassHunter, 'ferociousInspiration'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Mit %',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Renewed Hope',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57472),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPriest, 'renewedHope'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Blessing Of Sanctuary',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(25899),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassPaladin),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Vigilance',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(50720),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'vigilance'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Haste %',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Swift Retribution',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(53648),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'swiftRetribution'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Moonkin Form',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48396),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDruid, 'improvedMoonkinForm'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'MP5',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Blessing of Wisdom',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(20245),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'improvedBlessingOfWisdom'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Blessing of Wisdom',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48938),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassPaladin, 'improvedBlessingOfWisdom'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Mana Spring Totem',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(16206),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'restorativeTotems', player => player.getSpecOptions().totems?.water == WaterTotem.ManaSpringTotem),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Mana Spring Totem',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(58774),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassShaman, 'restorativeTotems', player => player.getSpecOptions().totems?.water == WaterTotem.ManaSpringTotem),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Melee Crit',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Leader of the Pack',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(17007),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDruid, 'leaderOfThePack'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Rampage',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(29801),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'rampage'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Melee Haste',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Icy Talons',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(55610),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDeathknight, 'improvedIcyTalons'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Windfury Totem',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(29193),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'improvedWindfuryTotem', player => player.getSpecOptions().totems?.air == AirTotem.WindfuryTotem),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Windfury Totem',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(65990),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassShaman, 'improvedWindfuryTotem', player => player.getSpecOptions().totems?.air == AirTotem.WindfuryTotem),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Spell Power',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Demonic Pact',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47240),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'demonicPact'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Totem of Wrath',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57722),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'totemOfWrath', player => player.getSpecOptions().totems?.fire == FireTotem.TotemOfWrath),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Flametongue Totem',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(58656),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassShaman, player => player.getSpecOptions().totems?.fire == FireTotem.FlametongueTotem),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Spell Crit',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Moonkin Form',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(24907),\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecBalanceDruid, 'moonkinForm'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Elemental Oath',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(51470),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'elementalOath'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Spell Haste',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Wrath of Air Totem',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(3738),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassShaman, player => player.getSpecOptions().totems?.air == AirTotem.WrathOfAirTotem),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Health',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Commanding Shout',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(12861),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'commandingPresence', player => player.getSpecOptions().shout == WarriorShout.WarriorShoutCommanding),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Commanding Shout',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47440),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarrior, 'commandingPresence', player => player.getSpecOptions().shout == WarriorShout.WarriorShoutCommanding),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Imp',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(18696),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'improvedImp', player => player.getSpecOptions().summon == WarlockSummon.Imp),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Blood Pact',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47982),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarlock, 'improvedImp', player => player.getSpecOptions().summon == WarlockSummon.Imp),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Replenishment',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Vampiric Touch',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48160),\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecShadowPriest, 'vampiricTouch'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Judgements of the Wise',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(31878),\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecRetributionPaladin, 'judgementsOfTheWise'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Hunting Party',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(53292),\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecHunter, 'huntingParty'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Soul Leech',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(54118),\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecWarlock, 'improvedSoulLeech'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Enduring Winter',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(44561),\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecMage, 'enduringWinter'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tlabel: 'External Buffs',\n\t\t\tcategories: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Innervate',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Innervate',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(29166),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassDruid),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Power Infusion',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Power Infusion',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(10060),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPriest, 'powerInfusion'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Focus Magic',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Focus Magic',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(54648),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassMage, 'focusMagic'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Tricks of the Trade',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Tricks of the Trade',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57933),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassRogue),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Unholy Frenzy',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Unholy Frenzy',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(49016),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDeathknight, 'hysteria'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Pain Suppression',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Pain Suppression',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(33206),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPriest, 'painSuppression'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Divine Guardian',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Divine Guardian',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(53530),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'divineGuardian'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tlabel: 'DPS Debuffs',\n\t\t\tcategories: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Major ArP',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Sunder Armor',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47467),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassWarrior, player => player.isSpec(Spec.SpecProtectionWarrior) || (player as Player<Spec.SpecWarrior>).getRotation().sunderArmor == SunderArmor.SunderArmorMaintain),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Expose Armor',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(8647),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassRogue, player => player.getRotation().exposeArmorFrequency == ExposeFrequency.Maintain),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Acid Spit',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(55754),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassHunter, player => player.getSpecOptions().petType == HunterPetType.Worm),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Minor ArP',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Faerie Fire',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(770),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassDruid, player => player.spec == Spec.SpecFeralTankDruid ||\n\t\t\t\t\t\t\t\t(player.spec != Spec.SpecRestorationDruid && (player as Player<Spec.SpecBalanceDruid | Spec.SpecFeralDruid>).getRotation().maintainFaerieFire)),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Curse of Weakness',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(50511),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassWarlock, player => player.getRotation().curse == WarlockCurse.Weakness),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Sting',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(56631),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassHunter, player => player.getSpecOptions().petType == HunterPetType.Wasp),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Spore Cloud',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(53598),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassHunter, player => player.getSpecOptions().petType == HunterPetType.Bat),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Phys Vuln',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Blood Frenzy',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(29859),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'bloodFrenzy'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Savage Combat',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(58413),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassRogue, 'savageCombat'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Bleed',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Mangle',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(16862),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassDruid, player => [Spec.SpecFeralDruid, Spec.SpecFeralTankDruid].includes(player.spec)),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Trauma',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(46855),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'trauma'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Stampede',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57393),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassHunter, player => player.getSpecOptions().petType == HunterPetType.Rhino),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Crit',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Totem of Wrath',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(30706),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'totemOfWrath', player => player.getSpecOptions().totems?.fire == FireTotem.TotemOfWrath),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Heart of the Crusader',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(20337),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'heartOfTheCrusader', player => [Spec.SpecRetributionPaladin, Spec.SpecProtectionPaladin].includes(player.spec)),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Master Poisoner',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(58410),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassRogue, 'masterPoisoner'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Spell Crit',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Shadow Bolt',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(17803),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'improvedShadowBolt'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Scorch',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(12873),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassMage, 'improvedScorch', player => {\n\t\t\t\t\t\t\t\treturn player.getTalentTree() == 1 && player.getRotation().maintainImprovedScorch;\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Winter\\'s Chill',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(28593),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassMage, 'wintersChill', player => player.getTalentTree() == 2),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Spell Hit',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Misery',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(33198),\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecShadowPriest, 'misery'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Faerie Fire',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(33602),\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecBalanceDruid, 'improvedFaerieFire'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Spell Dmg',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Ebon Plaguebringer',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(51161),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDeathknight, 'ebonPlaguebringer'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Earth and Moon',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48511),\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecBalanceDruid, 'earthAndMoon'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Curse of Elements',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47865),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassWarlock, player => player.getRotation().curse == WarlockCurse.Elements),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tlabel: 'Mitigation Debuffs',\n\t\t\tcategories: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Atk Pwr',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Vindication',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(26016),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'vindication', player => [Spec.SpecRetributionPaladin, Spec.SpecProtectionPaladin].includes(player.spec)),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Demoralizing Shout',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(12879),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'improvedDemoralizingShout', player => (player.spec == Spec.SpecWarrior && (player as Player<Spec.SpecWarrior>).getRotation().maintainDemoShout) || (player.spec == Spec.SpecProtectionWarrior && (player as Player<Spec.SpecProtectionWarrior>).getRotation().demoShoutChoice != 0)),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Demoralizing Shout',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47437),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarrior, 'improvedDemoralizingShout', player => (player.spec == Spec.SpecWarrior && (player as Player<Spec.SpecWarrior>).getRotation().maintainDemoShout) || (player.spec == Spec.SpecProtectionWarrior && (player as Player<Spec.SpecProtectionWarrior>).getRotation().demoShoutChoice != 0)),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Demoralizing Roar',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(16862),\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecFeralTankDruid, 'feralAggression', player => player.getRotation().maintainDemoralizingRoar),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Demoralizing Roar',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48560),\n\t\t\t\t\t\t\tplayerData: playerSpecAndMissingTalent(Spec.SpecFeralTankDruid, 'feralAggression', player => player.getRotation().maintainDemoralizingRoar),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Curse of Weakness',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(18180),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'improvedCurseOfWeakness', player => player.getRotation().curse == WarlockCurse.Weakness),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Curse of Weakness',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(50511),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'improvedCurseOfWeakness', player => player.getRotation().curse == WarlockCurse.Weakness),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Demoralizing Screech',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(55487),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassHunter, player => player.getSpecOptions().petType == HunterPetType.CarrionBird),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Atk Speed',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Thunder Clap',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(12666),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'improvedThunderClap', player => (player.spec == Spec.SpecWarrior && (player as Player<Spec.SpecWarrior>).getRotation().maintainThunderClap) || (player.spec == Spec.SpecProtectionWarrior && (player as Player<Spec.SpecProtectionWarrior>).getRotation().thunderClapChoice != 0)),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Thunder Clap',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47502),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarrior, 'improvedThunderClap', player => (player.spec == Spec.SpecWarrior && (player as Player<Spec.SpecWarrior>).getRotation().maintainThunderClap) || (player.spec == Spec.SpecProtectionWarrior && (player as Player<Spec.SpecProtectionWarrior>).getRotation().thunderClapChoice != 0)),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Improved Frost Fever',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(51456),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDeathknight, 'improvedIcyTouch'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Frost Fever',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(51456),\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassDeathknight, 'improvedIcyTouch'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Judgements of the Just',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(53696),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'judgementsOfTheJust'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Infected Wounds',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48485),\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDruid, 'infectedWounds', player => [Spec.SpecFeralDruid, Spec.SpecFeralTankDruid].includes(player.spec)),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Miss',\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Insect Swarm',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(65855),\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecBalanceDruid, 'insectSwarm'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Scorpid Sting',\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(3043),\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassHunter, player => player.getRotation().sting == HunterStingType.ScorpidSting),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t]\n};\n","import { RaidPicker } from \"./raid_picker\";\nimport { RaidSimUI } from \"./raid_sim_ui\";\nimport { RaidStats } from \"./raid_stats\";\nimport { SavedDataManager } from \"../core/components/saved_data_manager\";\nimport { SimTab } from \"../core/components/sim_tab\";\nimport { BlessingsAssignments, SavedRaid } from \"../core/proto/ui\";\nimport { EventID, TypedEvent } from \"../core/typed_event\";\nimport { Raid as RaidProto } from \"../core/proto/api\";\n\nexport class RaidTab extends SimTab {\n\tprotected simUI: RaidSimUI;\n\n\treadonly leftPanel: HTMLElement;\n\treadonly rightPanel: HTMLElement;\n\n\tconstructor(parentElem: HTMLElement, simUI: RaidSimUI) {\n\t\tsuper(parentElem, simUI, { identifier: 'raid-tab', title: 'Raid' });\n\t\tthis.simUI = simUI;\n\n\t\tthis.rootElem.classList.add('active', 'show')\n\n\t\tthis.leftPanel = document.createElement('div');\n\t\tthis.leftPanel.classList.add('raid-tab-left', 'tab-panel-left');\n\n\t\tthis.rightPanel = document.createElement('div');\n\t\tthis.rightPanel.classList.add('raid-tab-right', 'tab-panel-right');\n\n\t\tthis.contentContainer.appendChild(this.leftPanel);\n\t\tthis.contentContainer.appendChild(this.rightPanel);\n\n\t\tthis.buildTabContent();\n\t}\n\n\tprotected buildTabContent() {\n\t\tthis.simUI.raidPicker = new RaidPicker(this.leftPanel, this.simUI);\n\t\tnew RaidStats(this.leftPanel, this.simUI);\n\n\t\tconst savedRaidManager = new SavedDataManager<RaidSimUI, SavedRaid>(this.rightPanel, this.simUI, {\n\t\t\tlabel: 'Raid',\n\t\t\theader: { title: 'Saved Raid Groups' },\n\t\t\tstorageKey: this.simUI.getSavedRaidStorageKey(),\n\t\t\tgetData: (raidSimUI: RaidSimUI) => SavedRaid.create({\n\t\t\t\traid: this.simUI.sim.raid.toProto(),\n\t\t\t\tblessings: this.simUI.blessingsPicker!.getAssignments(),\n\t\t\t\tfaction: this.simUI.sim.getFaction(),\n\t\t\t\tphase: this.simUI.sim.getPhase(),\n\t\t\t}),\n\t\t\tsetData: (eventID: EventID, raidSimUI: RaidSimUI, newRaid: SavedRaid) => {\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tthis.simUI.sim.raid.fromProto(eventID, newRaid.raid || RaidProto.create());\n\t\t\t\t\tthis.simUI.blessingsPicker!.setAssignments(eventID, newRaid.blessings || BlessingsAssignments.create());\n\t\t\t\t\tif (newRaid.faction) this.simUI.sim.setFaction(eventID, newRaid.faction);\n\t\t\t\t\tif (newRaid.phase) this.simUI.sim.setPhase(eventID, newRaid.phase);\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeEmitters: [this.simUI.changeEmitter, this.simUI.sim.changeEmitter],\n\t\t\tequals: (a: SavedRaid, b: SavedRaid) => {\n\t\t\t\treturn SavedRaid.equals(a, b);\n\t\t\t},\n\t\t\ttoJson: (a: SavedRaid) => SavedRaid.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedRaid.fromJson(obj),\n\t\t}\n\t\t);\n\t\tthis.simUI.sim.waitForInit().then(() => {\n\t\t\tsavedRaidManager.loadUserData();\n\t\t});\n\t}\n}\n","import { Input, InputConfig } from '../components/input.js';\nimport { Player } from '../player.js';\nimport { Raid } from '../raid.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { UnitReference } from '../proto/common.js';\nimport { emptyUnitReference, cssClassForClass } from '../proto_utils/utils.js';\n\nexport interface UnitReferencePickerConfig<ModObject> extends InputConfig<ModObject, UnitReference> {\n\tnoTargetLabel: string,\n\tcompChangeEmitter: TypedEvent<void>,\n}\n\ninterface OptionElemOptions {\n\tisDropdown?: boolean,\n\tplayer: Player<any> | null,\n}\n\n// Dropdown menu for selecting a player.\nexport class UnitReferencePicker<ModObject> extends Input<ModObject, UnitReference> {\n\tprivate readonly config: UnitReferencePickerConfig<ModObject>;\n\tprivate readonly raid: Raid;\n\n\tprivate curPlayer: Player<any> | null;\n\tprivate curUnitReference: UnitReference;\n\n\tprivate currentOptions: Array<OptionElemOptions>;\n\n\tprivate readonly buttonElem: HTMLElement;\n\tprivate readonly dropdownElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, raid: Raid, modObj: ModObject, config: UnitReferencePickerConfig<ModObject>) {\n\t\tsuper(parent, 'raid-target-picker-root', modObj, config);\n\t\tthis.rootElem.classList.add('dropdown');\n\t\tthis.config = config;\n\t\tthis.raid = raid;\n\t\tthis.curPlayer = this.raid.getPlayerFromUnitReference(config.getValue(modObj));\n\t\tthis.curUnitReference = this.getInputValue();\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<a\n\t\t\t\tclass=\"raid-target-picker-button\"\n\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\trole=\"button\"\n\t\t\t\tdata-bs-toggle=\"dropdown\"\n\t\t\t></a>\n\t\t\t<div class=\"dropdown-menu\"></div>\n    `;\n\n\t\tthis.buttonElem = this.rootElem.querySelector('.raid-target-picker-button') as HTMLElement;\n\t\tthis.dropdownElem = this.rootElem.querySelector('.dropdown-menu') as HTMLElement;\n\n\t\tthis.buttonElem.addEventListener('click', event => event.preventDefault());\n\n\t\tthis.currentOptions = [];\n\t\tthis.updateOptions(TypedEvent.nextEventID());\n\t\tconfig.compChangeEmitter.on(eventID => this.updateOptions(eventID));\n\n\t\tthis.init();\n\t}\n\n\tprivate makeTargetOptions(): Array<OptionElemOptions> {\n\t\tconst unassignedOption = { player: null, isDropdown: true }\n\t\tconst playerOptions = this.raid.getPlayers().filter(player => player != null).map(player => {\n\t\t\treturn { player: player, isDropdown: true }\n\t\t});\n\n\t\treturn [unassignedOption, ...playerOptions]\n\t}\n\n\tprivate updateOptions(eventID: EventID) {\n\t\tthis.currentOptions = this.makeTargetOptions();\n\n\t\tthis.dropdownElem.innerHTML = '';\n\t\tthis.currentOptions.forEach(option => this.dropdownElem.appendChild(this.makeOption(option)));\n\n\t\tconst prevUnitReference = this.curUnitReference;\n\t\tthis.curUnitReference = this.getInputValue();\n\t\tif (!UnitReference.equals(prevUnitReference, this.curUnitReference)) {\n\t\t\tthis.inputChanged(eventID);\n\t\t} else {\n\t\t\tthis.setInputValue(this.curUnitReference);\n\t\t}\n\t}\n\n\tprivate makeOption(data: OptionElemOptions): HTMLElement {\n\t\tconst option = UnitReferencePicker.makeOptionElem(data);\n\n\t\toption.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t\tthis.curPlayer = data.player;\n\t\t\tthis.curUnitReference = this.getInputValue();\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\n\t\treturn option;\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.buttonElem;\n\t}\n\n\tgetInputValue(): UnitReference {\n\t\tif (this.curPlayer) {\n\t\t\treturn this.curPlayer.makeUnitReference();\n\t\t} else {\n\t\t\treturn emptyUnitReference();\n\t\t}\n\t}\n\n\tsetInputValue(newValue: UnitReference) {\n\t\tthis.curUnitReference = UnitReference.clone(newValue);\n\t\tthis.curPlayer = this.raid.getPlayerFromUnitReference(this.curUnitReference);\n\n\t\tconst optionData = this.currentOptions.find(optionData => optionData.player == this.curPlayer);\n\n\t\tif (optionData)\n\t\t\tthis.buttonElem.innerHTML = UnitReferencePicker.makeOptionElem({ player: optionData.player }).outerHTML;\n\t}\n\n\tstatic makeOptionElem(data: OptionElemOptions): HTMLElement {\n\t\tconst classCssClass = data.player ? cssClassForClass(data.player.getClass()) : '';\n\t\tlet playerFragment = document.createElement('fragment');\n\n\t\tplayerFragment.innerHTML = `\n\t\t\t<div class=\"player ${classCssClass ? `bg-${classCssClass}-dampened` : ''}\">\n\t\t\t\t<div class=\"player-label\">\n\t\t\t\t\t${data.player ? `<img class=\"player-icon\" src=\"${data.player.getSpecIcon()}\" draggable=\"false\"/>` : ''}\n\t\t\t\t\t<div class=\"player-details\">\n\t\t\t\t\t\t<span class=\"player-name ${classCssClass ? `text-${classCssClass}` : ''}\">\n\t\t\t\t\t\t\t${data.player ? data.player.getName() : 'Unassigned'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`\n\n\t\tif (data.isDropdown) {\n\t\t\tplayerFragment.innerHTML = `\n\t\t\t\t<a class=\"dropdown-option\" href=\"javascript:void(0) role=\"button\">${playerFragment.innerHTML}</a>\n\t\t\t`\n\t\t}\n\n\t\treturn playerFragment.children[0] as HTMLElement;\n\t}\n}\n","import { Component } from '../core/components/component.js';\nimport { UnitReferencePicker } from '../core/components/raid_target_picker.js';\n\nimport { Player } from '../core/player.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\n\nimport { Class, UnitReference, Spec } from '../core/proto/common.js';\nimport { emptyUnitReference } from '../core/proto_utils/utils.js';\n\nimport { RaidSimUI } from './raid_sim_ui.js';\nimport { PriestTalents } from 'ui/core/proto/priest.js';\nimport { DeathknightTalents } from 'ui/core/proto/deathknight.js';\n\nexport class AssignmentsPicker extends Component {\n\treadonly raidSimUI: RaidSimUI;\n\treadonly changeEmitter: TypedEvent<void> = new TypedEvent<void>();\n\n\tprivate readonly innervatesPicker: InnervatesPicker;\n\tprivate readonly powerInfusionsPicker: PowerInfusionsPicker;\n\tprivate readonly tricksOfTheTradesPicker: TricksOfTheTradesPicker;\n\tprivate readonly unholyFrenzyPicker: UnholyFrenzyPicker;\n\tprivate readonly focusMagicsPicker: FocusMagicsPicker;\n\n\tconstructor(parentElem: HTMLElement, raidSimUI: RaidSimUI) {\n\t\tsuper(parentElem, 'assignments-picker-root');\n\t\tthis.raidSimUI = raidSimUI;\n\n\t\tthis.innervatesPicker = new InnervatesPicker(this.rootElem, raidSimUI);\n\t\tthis.powerInfusionsPicker = new PowerInfusionsPicker(this.rootElem, raidSimUI);\n\t\tthis.tricksOfTheTradesPicker = new TricksOfTheTradesPicker(this.rootElem, raidSimUI);\n\t\tthis.unholyFrenzyPicker = new UnholyFrenzyPicker(this.rootElem, raidSimUI);\n\t\tthis.focusMagicsPicker = new FocusMagicsPicker(this.rootElem, raidSimUI);\n\t}\n}\n\ninterface AssignmentTargetPicker {\n\tplayer: Player<any>,\n\ttargetPicker: UnitReferencePicker<Player<any>>,\n\ttargetPlayer: Player<any> | null;\n};\n\nabstract class AssignedBuffPicker extends Component {\n\treadonly raidSimUI: RaidSimUI;\n\treadonly changeEmitter: TypedEvent<void> = new TypedEvent<void>();\n\n\tprivate readonly playersContainer: HTMLElement;\n\n\tprivate targetPickers: Array<AssignmentTargetPicker>;\n\n\tconstructor(parentElem: HTMLElement, raidSimUI: RaidSimUI) {\n\t\tsuper(parentElem, 'assigned-buff-picker-root');\n\t\tthis.raidSimUI = raidSimUI;\n\t\tthis.targetPickers = [];\n\n\t\tthis.playersContainer = document.createElement('div');\n\t\tthis.playersContainer.classList.add('assigned-buff-container');\n\t\tthis.rootElem.appendChild(this.playersContainer);\n\n\t\tthis.raidSimUI.changeEmitter.on(eventID => this.update());\n\t\tthis.update();\n\t}\n\n\tprivate update() {\n\t\tthis.playersContainer.innerHTML = `\n\t\t\t<label class=\"assignmented-buff-label form-label\">${this.getTitle()}</label>\n\t\t`\n\n\t\tconst sourcePlayers = this.getSourcePlayers();\n\t\tif (sourcePlayers.length == 0)\n\t\t\tthis.rootElem.classList.add('hide');\n\t\telse\n\t\t\tthis.rootElem.classList.remove('hide');\n\n\t\tthis.targetPickers = sourcePlayers.map((sourcePlayer, sourcePlayerIndex) => {\n\t\t\tconst row = document.createElement('div');\n\t\t\trow.classList.add('assigned-buff-player', 'input-inline');\n\t\t\tthis.playersContainer.appendChild(row);\n\n\t\t\tlet sourceElem = document.createElement('div');\n\t\t\tsourceElem.classList.add('raid-target-picker-root');\n\t\t\tsourceElem.appendChild(\n\t\t\t\tUnitReferencePicker.makeOptionElem({ player: sourcePlayer, isDropdown: false })\n\t\t\t);\n\t\t\trow.appendChild(sourceElem);\n\n\t\t\tconst arrow = document.createElement('i');\n\t\t\tarrow.classList.add('assigned-buff-arrow', 'fa', 'fa-arrow-right');\n\t\t\trow.appendChild(arrow);\n\n\t\t\tconst raidTargetPicker: UnitReferencePicker<Player<any>> | null = new UnitReferencePicker<Player<any>>(row, this.raidSimUI.sim.raid, sourcePlayer, {\n\t\t\t\textraCssClasses: ['assigned-buff-target-picker'],\n\t\t\t\tnoTargetLabel: 'Unassigned',\n\t\t\t\tcompChangeEmitter: this.raidSimUI.sim.raid.compChangeEmitter,\n\n\t\t\t\tchangedEvent: (player: Player<any>) => player.specOptionsChangeEmitter,\n\t\t\t\tgetValue: (player: Player<any>) => this.getPlayerValue(player),\n\t\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: UnitReference) => this.setPlayerValue(eventID, player, newValue),\n\t\t\t});\n\n\t\t\tconst targetPickerData = {\n\t\t\t\tplayer: sourcePlayer,\n\t\t\t\ttargetPicker: raidTargetPicker!,\n\t\t\t\ttargetPlayer: this.raidSimUI.sim.raid.getPlayerFromUnitReference(raidTargetPicker!.getInputValue()),\n\t\t\t};\n\n\t\t\traidTargetPicker!.changeEmitter.on(eventID => {\n\t\t\t\ttargetPickerData.targetPlayer = this.raidSimUI.sim.raid.getPlayerFromUnitReference(raidTargetPicker!.getInputValue());\n\t\t\t});\n\n\t\t\treturn targetPickerData;\n\t\t});\n\t}\n\n\tabstract getTitle(): string;\n\tabstract getSourcePlayers(): Array<Player<any>>;\n\n\tabstract getPlayerValue(player: Player<any>): UnitReference;\n\tabstract setPlayerValue(eventID: EventID, player: Player<any>, newValue: UnitReference): void;\n}\n\nclass InnervatesPicker extends AssignedBuffPicker {\n\tgetTitle(): string {\n\t\treturn 'Innervate';\n\t}\n\n\tgetSourcePlayers(): Array<Player<any>> {\n\t\treturn this.raidSimUI.getActivePlayers().filter(player => player.isClass(Class.ClassDruid));\n\t}\n\n\tgetPlayerValue(player: Player<any>): UnitReference {\n\t\treturn (player as Player<Spec.SpecBalanceDruid>).getSpecOptions().innervateTarget || emptyUnitReference();\n\t}\n\n\tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: UnitReference) {\n\t\tconst newOptions = (player as Player<Spec.SpecBalanceDruid>).getSpecOptions();\n\t\tnewOptions.innervateTarget = newValue;\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t}\n}\n\nclass PowerInfusionsPicker extends AssignedBuffPicker {\n\tgetTitle(): string {\n\t\treturn 'Power Infusion';\n\t}\n\n\tgetSourcePlayers(): Array<Player<any>> {\n\t\treturn this.raidSimUI.getActivePlayers().filter(player => player.isClass(Class.ClassPriest) && (player.getTalents() as PriestTalents).powerInfusion);\n\t}\n\n\tgetPlayerValue(player: Player<any>): UnitReference {\n\t\treturn (player as Player<Spec.SpecSmitePriest>).getSpecOptions().powerInfusionTarget || emptyUnitReference();\n\t}\n\n\tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: UnitReference) {\n\t\tconst newOptions = (player as Player<Spec.SpecSmitePriest>).getSpecOptions();\n\t\tnewOptions.powerInfusionTarget = newValue;\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t}\n}\n\nclass TricksOfTheTradesPicker extends AssignedBuffPicker {\n\tgetTitle(): string {\n\t\treturn 'Tricks of the Trade';\n\t}\n\n\tgetSourcePlayers(): Array<Player<any>> {\n\t\treturn this.raidSimUI.getActivePlayers().filter(player => player.isClass(Class.ClassRogue));\n\t}\n\n\tgetPlayerValue(player: Player<any>): UnitReference {\n\t\treturn (player as Player<Spec.SpecRogue>).getSpecOptions().tricksOfTheTradeTarget || emptyUnitReference();\n\t}\n\n\tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: UnitReference) {\n\t\tconst newOptions = (player as Player<Spec.SpecRogue>).getSpecOptions();\n\t\tnewOptions.tricksOfTheTradeTarget = newValue;\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t}\n}\n\nclass UnholyFrenzyPicker extends AssignedBuffPicker {\n\tgetTitle(): string {\n\t\treturn 'Unholy Frenzy';\n\t}\n\n\tgetSourcePlayers(): Array<Player<any>> {\n\t\treturn this.raidSimUI.getActivePlayers().filter(player => player.isClass(Class.ClassDeathknight) && (player.getTalents() as DeathknightTalents).hysteria);\n\t}\n\n\tgetPlayerValue(player: Player<any>): UnitReference {\n\t\treturn (player as Player<Spec.SpecDeathknight>).getSpecOptions().unholyFrenzyTarget || emptyUnitReference();\n\t}\n\n\tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: UnitReference) {\n\t\tconst newOptions = (player as Player<Spec.SpecDeathknight>).getSpecOptions();\n\t\tnewOptions.unholyFrenzyTarget = newValue;\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t}\n}\n\nclass FocusMagicsPicker extends AssignedBuffPicker {\n\tgetTitle(): string {\n\t\treturn 'Focus Magic';\n\t}\n\n\tgetSourcePlayers(): Array<Player<any>> {\n\t\treturn this.raidSimUI.getActivePlayers().filter(player => player.isClass(Class.ClassMage));\n\t}\n\n\tgetPlayerValue(player: Player<any>): UnitReference {\n\t\treturn (player as Player<Spec.SpecMage>).getSpecOptions().focusMagicTarget || emptyUnitReference();\n\t}\n\n\tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: UnitReference) {\n\t\tconst newOptions = (player as Player<Spec.SpecMage>).getSpecOptions();\n\t\tnewOptions.focusMagicTarget = newValue;\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t}\n}\n","import { Component } from '../core/components/component';\nimport { IconEnumPicker } from '../core/components/icon_enum_picker';\n\nimport { memeSpecs } from '../core/launched_sims';\nimport { EventID, TypedEvent } from '../core/typed_event';\n\nimport { Class, Spec } from '../core/proto/common';\nimport { Blessings } from '../core/proto/paladin';\nimport { BlessingsAssignments } from '../core/proto/ui';\nimport { ActionId } from '../core/proto_utils/action_id';\nimport {\n\tmakeDefaultBlessings,\n\tclassColors,\n\tnaturalSpecOrder,\n\tspecNames,\n\ttitleIcons,\n} from '../core/proto_utils/utils';\n\nimport { RaidSimUI } from './raid_sim_ui';\nimport { implementedSpecs } from './presets';\nimport { Tooltip } from 'bootstrap';\n\nconst MAX_PALADINS = 4;\n\nexport class BlessingsPicker extends Component {\n\treadonly simUI: RaidSimUI;\n\treadonly changeEmitter: TypedEvent<void> = new TypedEvent<void>();\n\n\tprivate readonly pickers: Array<Array<IconEnumPicker<this, Blessings>>> = [];\n\n\tprivate assignments: BlessingsAssignments;\n\n\tconstructor(parentElem: HTMLElement, raidSimUI: RaidSimUI) {\n\t\tsuper(parentElem, 'blessings-picker-root');\n\t\tthis.simUI = raidSimUI;\n\t\tthis.assignments = BlessingsAssignments.clone(makeDefaultBlessings(4));\n\n\t\tconst specs = naturalSpecOrder\n\t\t\t.filter(spec => implementedSpecs.includes(spec))\n\t\t\t.filter(spec => !memeSpecs.includes(spec));\n\t\tconst paladinIndexes = [...Array(MAX_PALADINS).keys()];\n\n\t\tspecs.map(spec => {\n\t\t\tconst row = document.createElement('div');\n\t\t\trow.classList.add('blessings-picker-row');\n\t\t\tthis.rootElem.appendChild(row);\n\n\t\t\trow.append(this.buildSpecIcon(spec));\n\n\t\t\tconst container = document.createElement('div');\n\t\t\tcontainer.classList.add('blessings-picker-container');\n\t\t\trow.appendChild(container);\n\n\t\t\tpaladinIndexes.forEach(paladinIdx => {\n\t\t\t\tif (!this.pickers[paladinIdx])\n\t\t\t\t\tthis.pickers.push([]);\n\n\t\t\t\tconst blessingPicker = new IconEnumPicker(container, this, {\n\t\t\t\t\textraCssClasses: ['blessing-picker'],\n\t\t\t\t\tnumColumns: 1,\n\t\t\t\t\tvalues: [\n\t\t\t\t\t\t{ color: classColors[Class.ClassPaladin], value: Blessings.BlessingUnknown },\n\t\t\t\t\t\t{ actionId: ActionId.fromSpellId(25898), value: Blessings.BlessingOfKings },\n\t\t\t\t\t\t{ actionId: ActionId.fromSpellId(48934), value: Blessings.BlessingOfMight },\n\t\t\t\t\t\t{ actionId: ActionId.fromSpellId(48938), value: Blessings.BlessingOfWisdom },\n\t\t\t\t\t\t{ actionId: ActionId.fromSpellId(25899), value: Blessings.BlessingOfSanctuary },\n\t\t\t\t\t],\n\t\t\t\t\tequals: (a: Blessings, b: Blessings) => a == b,\n\t\t\t\t\tzeroValue: Blessings.BlessingUnknown,\n\t\t\t\t\tenableWhen: (_picker: BlessingsPicker) => {\n\t\t\t\t\t\tconst numPaladins = Math.min(this.simUI.getClassCount(Class.ClassPaladin), MAX_PALADINS);\n\t\t\t\t\t\treturn paladinIdx < numPaladins;\n\t\t\t\t\t},\n\t\t\t\t\tchangedEvent: (picker: BlessingsPicker) => picker.changeEmitter,\n\t\t\t\t\tgetValue: (picker: BlessingsPicker) => picker.assignments.paladins[paladinIdx]?.blessings[spec] || Blessings.BlessingUnknown,\n\t\t\t\t\tsetValue: (eventID: EventID, picker: BlessingsPicker, newValue: number) => {\n\t\t\t\t\t\tconst currentValue = picker.assignments.paladins[paladinIdx].blessings[spec];\n\t\t\t\t\t\tif (currentValue != newValue) {\n\t\t\t\t\t\t\tpicker.assignments.paladins[paladinIdx].blessings[spec] = newValue;\n\t\t\t\t\t\t\tthis.changeEmitter.emit(eventID);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tthis.pickers[paladinIdx].push(blessingPicker);\n\t\t\t});\n\n\t\t\treturn row;\n\t\t});\n\n\t\tthis.updatePickers()\n\t\tthis.simUI.compChangeEmitter.on(_eventID => this.updatePickers());\n\t}\n\n\tprivate updatePickers() {\n\t\tfor (let i = 0; i < MAX_PALADINS; i++) {\n\t\t\tthis.pickers[i].forEach(picker => picker.update());\n\t\t}\n\t}\n\n\tprivate buildSpecIcon(spec: Spec): HTMLElement {\n\t\tlet fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"blessings-picker-spec\">\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"${titleIcons[spec]}\"\n\t\t\t\t\tclass=\"blessings-spec-icon\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t`;\n\n\t\tconst icon = fragment.querySelector('.blessings-spec-icon') as HTMLElement;\n\t\tTooltip.getOrCreateInstance(icon, { title: specNames[spec]});\n\n\t\treturn fragment.children[0] as HTMLElement;\n\t}\n\n\tgetAssignments(): BlessingsAssignments {\n\t\t// Defensive copy.\n\t\treturn BlessingsAssignments.clone(this.assignments);\n\t}\n\n\tsetAssignments(eventID: EventID, newAssignments: BlessingsAssignments) {\n\t\tthis.assignments = BlessingsAssignments.clone(newAssignments);\n\t\tthis.changeEmitter.emit(eventID);\n\t}\n}\n","import { Component } from '../core/components/component';\nimport { UnitReferencePicker } from '../core/components/raid_target_picker';\n\nimport { Raid } from '../core/raid';\nimport { EventID } from '../core/typed_event';\n\nimport { UnitReference } from '../core/proto/common';\nimport { emptyUnitReference } from '../core/proto_utils/utils';\n\nimport { RaidSimUI } from './raid_sim_ui';\n\nconst MAX_TANKS = 4;\n\nexport class TanksPicker extends Component {\n\treadonly raidSimUI: RaidSimUI;\n\n\tconstructor(parentElem: HTMLElement, raidSimUI: RaidSimUI) {\n\t\tsuper(parentElem, 'tanks-picker-root');\n\t\tthis.raidSimUI = raidSimUI;\n\n\t\tconst raid = this.raidSimUI.sim.raid;\n\n\t\tfor (let i = 0; i < MAX_TANKS; i++) {\n\t\t\tconst row = document.createElement('div');\n\t\t\trow.classList.add('tank-picker-row', 'input-inline');\n\t\t\tthis.rootElem.appendChild(row);\n\n\t\t\tconst labelElem = document.createElement('label');\n\t\t\tlabelElem.textContent = i == 0 ? 'Main Tank' : `Tank ${i + 1}`;\n\t\t\tlabelElem.classList.add('tank-picker-label', 'form-label');\n\t\t\trow.appendChild(labelElem);\n\n\t\t\tnew UnitReferencePicker<Raid>(row, raid, raid, {\n\t\t\t\textraCssClasses: ['tank-picker'],\n\t\t\t\tnoTargetLabel: 'Unassigned',\n\t\t\t\tcompChangeEmitter: raid.compChangeEmitter,\n\n\t\t\t\tchangedEvent: (raid: Raid) => raid.tanksChangeEmitter,\n\t\t\t\tgetValue: (raid: Raid) => raid.getTanks()[i] || emptyUnitReference(),\n\t\t\t\tsetValue: (eventID: EventID, raid: Raid, newValue: UnitReference) => {\n\t\t\t\t\tconst tanks = raid.getTanks();\n\t\t\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\t\t\tif (!tanks[j]) {\n\t\t\t\t\t\t\ttanks.push(emptyUnitReference());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttanks[i] = newValue;\n\t\t\t\t\traid.setTanks(eventID, tanks);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n}\n","import { ContentBlock } from \"../core/components/content_block\";\nimport { EncounterPicker } from \"../core/components/encounter_picker\";\nimport { IconPicker } from \"../core/components/icon_picker\";\nimport { SavedDataManager } from \"../core/components/saved_data_manager\";\nimport { SimTab } from \"../core/components/sim_tab\";\n\nimport { Encounter } from \"../core/encounter\";\nimport { Raid } from \"../core/raid\";\nimport { EventID } from \"../core/typed_event\";\n\nimport { RaidBuffs } from \"../core/proto/common\";\nimport { SavedEncounter } from \"../core/proto/ui\";\nimport { ActionId } from \"../core/proto_utils/action_id\";\n\nimport { AssignmentsPicker } from \"./assignments_picker\";\nimport { BlessingsPicker } from \"./blessings_picker\";\nimport { RaidSimUI } from \"./raid_sim_ui\";\nimport { TanksPicker } from \"./tanks_picker\";\n\nimport * as Tooltips from \"../core/constants/tooltips.js\";\n\nexport class SettingsTab extends SimTab {\n\tprotected simUI: RaidSimUI;\n\n\treadonly leftPanel: HTMLElement;\n\treadonly rightPanel: HTMLElement;\n\n\treadonly column1: HTMLElement = this.buildColumn(1, 'raid-settings-col');\n\treadonly column2: HTMLElement = this.buildColumn(2, 'raid-settings-col');\n\treadonly column3: HTMLElement = this.buildColumn(3, 'raid-settings-col');\n\n\tconstructor(parentElem: HTMLElement, simUI: RaidSimUI) {\n\t\tsuper(parentElem, simUI, { identifier: 'raid-settings-tab', title: 'Settings' });\n\t\tthis.simUI = simUI;\n\n\t\tthis.leftPanel = document.createElement('div');\n\t\tthis.leftPanel.classList.add('raid-settings-tab-left', 'tab-panel-left');\n\n\t\tthis.leftPanel.appendChild(this.column1);\n\t\tthis.leftPanel.appendChild(this.column2);\n\t\tthis.leftPanel.appendChild(this.column3);\n\n\t\tthis.rightPanel = document.createElement('div');\n\t\tthis.rightPanel.classList.add('raid-settings-tab-right', 'tab-panel-right', 'within-raid-sim-hide');\n\n\t\tthis.contentContainer.appendChild(this.leftPanel);\n\t\tthis.contentContainer.appendChild(this.rightPanel);\n\n\t\tthis.buildTabContent();\n\t}\n\n\tprotected buildTabContent() {\n\t\tthis.buildEncounterSettings();\n\t\tthis.buildConsumesSettings();\n\t\tthis.buildOtherSettings();\n\n\t\tthis.buildTankSettings();\n\t\tthis.buildAssignmentSettings();\n\n\t\tthis.buildBlessingsPicker();\n\t\tthis.buildSavedDataPickers();\n\t}\n\n\tprivate buildEncounterSettings() {\n\t\tconst contentBlock = new ContentBlock(this.column1, 'encounter-settings', {\n\t\t\theader: { title: 'Encounter' }\n\t\t});\n\n\t\tnew EncounterPicker(contentBlock.bodyElement, this.simUI.sim.encounter, { showExecuteProportion: true }, this.simUI);\n\t}\n\n\tprivate buildConsumesSettings() {\n\t\tconst contentBlock = new ContentBlock(this.column1, 'consumes-settings', {\n\t\t\theader: { title: 'Consumables' }\n\t\t});\n\n\t\tlet container = document.createElement('div');\n\t\tcontainer.classList.add('consumes-container');\n\n\t\tcontentBlock.bodyElement.appendChild(container);\n\n\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(37094), 'scrollOfStamina'),\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(43466), 'scrollOfStrength'),\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(43464), 'scrollOfAgility'),\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(37092), 'scrollOfIntellect'),\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(37098), 'scrollOfSpirit'),\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(43468), 'scrollOfProtection'),\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(49633), 'drumsOfForgottenKings'),\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(49634), 'drumsOfTheWild');\n\t}\n\n\tprivate buildOtherSettings() {\n\t\t// const raid = this.simUI.sim.raid;\n\t\t// const contentBlock = new ContentBlock(this.column1, 'other-settings', {\n\t\t//   header: {title: 'Other'}\n\t\t// });\n\n\t\t// new BooleanPicker(contentBlock.bodyElement, this.simUI.sim.raid, {\n\t\t// \tlabel: 'Stagger Stormstrikes',\n\t\t// \tlabelTooltip: 'When there are multiple Enhancement Shaman in the raid, causes them to coordinate their Stormstrike casts for optimal SS charge usage.',\n\t\t// \tchangedEvent: (raid: Raid) => raid.staggerStormstrikesChangeEmitter,\n\t\t// \tgetValue: (raid: Raid) => raid.getStaggerStormstrikes(),\n\t\t// \tsetValue: (eventID: EventID, raid: Raid, newValue: boolean) => {\n\t\t// \t\traid.setStaggerStormstrikes(eventID, newValue);\n\t\t// \t},\n\t\t// });\n\t}\n\n\tprivate buildTankSettings() {\n\t\tconst contentBlock = new ContentBlock(this.column2, 'tanks-settings', {\n\t\t\theader: { title: 'Tanks' }\n\t\t});\n\n\t\tnew TanksPicker(contentBlock.bodyElement, this.simUI);\n\t}\n\n\tprivate buildAssignmentSettings() {\n\t\tconst contentBlock = new ContentBlock(this.column2, 'assignments-settings', {\n\t\t\theader: { title: 'External Buffs' }\n\t\t});\n\n\t\tnew AssignmentsPicker(contentBlock.bodyElement, this.simUI);\n\t}\n\n\tprivate buildBlessingsPicker() {\n\t\tconst contentBlock = new ContentBlock(this.column3, 'blessings-settings', {\n\t\t\theader: { title: 'Blessings', tooltip: Tooltips.BLESSINGS_SECTION }\n\t\t});\n\n\t\tthis.simUI.blessingsPicker = new BlessingsPicker(contentBlock.bodyElement, this.simUI);\n\t\tthis.simUI.blessingsPicker.changeEmitter.on(eventID => this.simUI.changeEmitter.emit(eventID));\n\t}\n\n\tprivate buildSavedDataPickers() {\n\t\tconst savedEncounterManager = new SavedDataManager<Encounter, SavedEncounter>(this.rightPanel, this.simUI.sim.encounter, {\n\t\t\tlabel: 'Encounter',\n\t\t\theader: { title: 'Saved Encounters' },\n\t\t\tstorageKey: this.simUI.getSavedEncounterStorageKey(),\n\t\t\tgetData: (encounter: Encounter) => SavedEncounter.create({ encounter: encounter.toProto() }),\n\t\t\tsetData: (eventID: EventID, encounter: Encounter, newEncounter: SavedEncounter) => encounter.fromProto(eventID, newEncounter.encounter!),\n\t\t\tchangeEmitters: [this.simUI.sim.encounter.changeEmitter],\n\t\t\tequals: (a: SavedEncounter, b: SavedEncounter) => SavedEncounter.equals(a, b),\n\t\t\ttoJson: (a: SavedEncounter) => SavedEncounter.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedEncounter.fromJson(obj),\n\t\t});\n\n\t\tthis.simUI.sim.waitForInit().then(() => {\n\t\t\tsavedEncounterManager.loadUserData();\n\t\t});\n\t}\n\n\tprivate makeBooleanRaidIconBuffInput(parent: HTMLElement, id: ActionId, field: keyof RaidBuffs): IconPicker<Raid, boolean> {\n\t\tconst raid = this.simUI.sim.raid;\n\n\t\treturn new IconPicker<Raid, boolean>(parent, raid, {\n\t\t\tid: id,\n\t\t\tstates: 2,\n\t\t\tchangedEvent: (raid: Raid) => raid.buffsChangeEmitter,\n\t\t\tgetValue: (raid: Raid) => raid.getBuffs()[field] as unknown as boolean,\n\t\t\tsetValue: (eventID: EventID, raid: Raid, newValue: boolean) => {\n\t\t\t\tconst newBuffs = raid.getBuffs();\n\t\t\t\t(newBuffs[field] as unknown as boolean) = newValue;\n\t\t\t\traid.setBuffs(eventID, newBuffs);\n\t\t\t},\n\t\t});\n\t}\n}\n","import { Exporter } from '../core/components/exporters';\nimport { Importer } from '../core/components/importers';\nimport { RaidSimSettings } from '../core/proto/ui';\nimport { EventID, TypedEvent } from '../core/typed_event';\nimport { Party as PartyProto, Player as PlayerProto, Raid as RaidProto } from '../core/proto/api';\nimport {\n\tClass,\n\tEncounter as EncounterProto,\n\tEquipmentSpec,\n\tFaction,\n\tItemSpec,\n\tProfession,\n\tRace,\n\tUnitReference,\n\tSpec,\n\tTarget as TargetProto,\n\tUnitReference_Type,\n} from '../core/proto/common';\nimport { professionNames, raceNames } from '../core/proto_utils/names';\nimport {\n\tDruidSpecs,\n\tDeathknightSpecs,\n\tMageSpecs,\n\tPriestSpecs,\n\tRogueSpecs,\n\tSpecOptions,\n\tgetTalentTreePoints,\n\tmakeDefaultBlessings,\n\traceToFaction,\n\tisTankSpec,\n\tplayerToSpec,\n} from '../core/proto_utils/utils';\nimport { MAX_NUM_PARTIES } from '../core/raid';\nimport { Player } from '../core/player';\nimport { Encounter } from '../core/encounter';\nimport { bucket, distinct, sortByProperty } from '../core/utils';\n\nimport { playerPresets, PresetSpecSettings } from './presets';\nimport { RaidSimUI } from './raid_sim_ui';\n\nexport class RaidJsonImporter extends Importer {\n\tprivate readonly simUI: RaidSimUI;\n\tconstructor(parent: HTMLElement, simUI: RaidSimUI) {\n\t\tsuper(parent, simUI, 'JSON Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from a JSON text file, which can be created using the JSON Export feature of this site.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the JSON text below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tonImport(data: string) {\n\t\tconst settings = RaidSimSettings.fromJsonString(data, { ignoreUnknownFields: true });\n\t\tthis.simUI.fromProto(TypedEvent.nextEventID(), settings);\n\t\tthis.close();\n\t}\n}\n\nexport class RaidJsonExporter extends Exporter {\n\tprivate readonly simUI: RaidSimUI;\n\n\tconstructor(parent: HTMLElement, simUI: RaidSimUI) {\n\t\tsuper(parent, simUI, 'JSON Export', true);\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\treturn JSON.stringify(RaidSimSettings.toJson(this.simUI.toProto()), null, 2);\n\t}\n}\n\nexport class RaidWCLImporter extends Importer {\n\n\tprivate queryCounter: number = 0;\n\n\tprivate readonly simUI: RaidSimUI;\n\tconstructor(parent: HTMLElement, simUI: RaidSimUI) {\n\t\tsuper(parent, simUI, 'WCL Import', false);\n\t\tthis.simUI = simUI;\n\t\tthis.textElem.classList.add('small-textarea');\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImports the entire raid from a WCL report.<br>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the WCL report and fight link (https://classic.warcraftlogs.com/reports/REPORTID#fight=FIGHTID).<br>\n\t\t\t\tInclude the fight ID or else the first fight in the report will be used.<br>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe following are imported directly from the report:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Player Name</li>\n\t\t\t\t\t<li>Equipment (items, enchants, and gems)</li>\n\t\t\t\t\t<li>Faction (Alliance / Horde)</li>\n\t\t\t\t\t<li>Encounter: If the import link has a fight ID we try to match with a preset Encounter. Note that many Encounters are still unimplemented.</li>\n\t\t\t\t</ul>\n\n\t\t\t\tThe following are not available directly from the report data, but we try to infer them:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Talents: Log data only gives us the tree summary (e.g. '51/20/0') so we match this with the closest preset talent build.</li>\n\t\t\t\t\t<li>Glyphs: Glyphs are absent from log data, but we pair them with the inferred Talents.</li>\n\t\t\t\t\t<li>Race: Inferred from Race-specific abilties used in any fight if possible, or defaults to Spec-specific Race.</li>\n\t\t\t\t\t<li>Professions: Inferred from profession-locked items/enchants/gems.</li>\n\t\t\t\t\t<li>Buff assignments (Innervate, Unholy Frenzy, etc): Inferred from casts.</li>\n\t\t\t\t\t<li>Party Composition: Inferred from party-only effects, such as Heroic Presence, Prayer of Healing, or Vampiric Touch.</li>\n\t\t\t\t</ul>\n\n\t\t\t\tThe following are not imported, and instead use spec-specific defaults:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Rotation / Spec-specific options</li>\n\t\t\t\t\t<li>Consumes</li>\n\t\t\t\t\t<li>Paladin Blessings</li>\n\t\t\t\t</ul>\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tprivate token: string = '';\n\tprivate async getWCLBearerToken(): Promise<string> {\n\t\tif (this.token == '') {\n\t\t\tconst response = await fetch('https://classic.warcraftlogs.com/oauth/token', {\n\t\t\t\t'method': 'POST',\n\t\t\t\t'headers': {\n\t\t\t\t\t'Authorization': 'Basic ' + btoa('963d31c8-7efa-4dde-87cf-1b254a8a2f8c:lRJVhujEEnF96xfUoxVHSpnqKN9v8bTqGEjutsO3'),\n\t\t\t\t},\n\t\t\t\tbody: new URLSearchParams({\n\t\t\t\t\t'grant_type': 'client_credentials',\n\t\t\t\t}),\n\t\t\t})\n\t\t\tconst json = await response.json();\n\t\t\tthis.token = json.access_token;\n\t\t}\n\t\treturn this.token;\n\t}\n\n\tprivate async queryWCL(query: string): Promise<any> {\n\t\tconst token = await this.getWCLBearerToken();\n\t\tconst headers = {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Authorization': `Bearer ${token}`,\n\t\t\t'Accept': 'application/json',\n\t\t};\n\n\t\tconst queryURL = `https://classic.warcraftlogs.com/api/v2/client?query=${query}`;\n\t\tthis.queryCounter++;\n\n\t\t// Query WCL\n\t\tconst res = await fetch(encodeURI(queryURL), {\n\t\t\t'method': 'GET',\n\t\t\t'headers': headers,\n\t\t});\n\n\t\tconst result = await res.json();\n\t\tif (result?.errors?.length) {\n\t\t\tconst errorStr = result.errors.map((e: any) => e.message).join('\\n');\n\t\t\tthrow new Error(`GraphQL error: ${errorStr}\\n\\nQuery: ${query}`);\n\t\t} else {\n\t\t\tconsole.debug(`WCL query: ${query}\\n\\nResult: ${JSON.stringify(result)}`);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async parseURL(url: string): Promise<wclUrlData> {\n\t\tconst match = url.match(/classic\\.warcraftlogs\\.com\\/reports\\/([a-zA-Z0-9:]+)\\/?(#.*fight=((\\d+)|(last)))?/);\n\t\tif (!match) {\n\t\t\tthrow new Error(`Invalid WCL URL ${url}, must look like \"classic.warcraftlogs.com/reports/XXXX\"`);\n\t\t}\n\n\t\tconst urlData = {\n\t\t\treportID: match[1],\n\t\t\tfightID: '',\n\t\t}\n\n\t\t// If the URL has a Fight ID in it, use it\n\t\tif (match[2] && match[3] && match[3] != 'last') {\n\t\t\turlData.fightID = match[3];\n\t\t} else {\n\t\t\t// Make a separate query to get the corresponding ReportFights\n\t\t\tconst fightDataQuery = `{\n\t\t\t\treportData {\n\t\t\t\t\treport(code: \"${urlData.reportID}\") {\n\t\t\t\t\t\tfights(killType: Kills, translate: true) {\n\t\t\t\t\t\t\tid, name\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}`;\n\n\t\t\tconst fightData = await this.queryWCL(fightDataQuery);\n\t\t\tconst fights = fightData.data.reportData.report.fights;\n\n\t\t\tif (match[3] == 'last') {\n\t\t\t\turlData.fightID = String(fights[fights.length - 1].id)\n\t\t\t} else {\n\t\t\t\t// Default to using the first Fight\n\t\t\t\turlData.fightID = String(fights[0].id);\n\t\t\t}\n\t\t}\n\n\t\tconsole.debug(`Importing WCL report: ${JSON.stringify(urlData)}`);\n\t\treturn urlData;\n\t}\n\n\tprivate async getRateLimit(): Promise<wclRateLimitData> {\n\t\tconst query = `{\n\t    rateLimitData {\n\t      limitPerHour, pointsSpentThisHour, pointsResetIn\n\t    }\n\t  }`;\n\t\tconst result = await this.queryWCL(query);\n\t\tconst data = result['data']['rateLimitData'] as wclRateLimitData;\n\t\treturn data;\n\t}\n\n\tasync onImport(importLink: string) {\n\t\tthis.importButton.disabled = true;\n\t\tthis.rootElem.style.cursor = 'wait';\n\t\ttry {\n\t\t\tawait this.doImport(importLink);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\talert('Failed import from WCL: ' + error);\n\t\t}\n\t\tthis.importButton.disabled = false\n\t\tthis.rootElem.style.removeProperty('cursor');\n\t}\n\n\tasync doImport(importLink: string) {\n\t\tif (!importLink.length) {\n\t\t\tthrow new Error('No import link provided!');\n\t\t}\n\n\t\tconst urlData = await this.parseURL(importLink);\n\t\tconst rateLimit = await this.getRateLimit();\n\n\t\t// Schema for WCL API here: https://www.warcraftlogs.com/v2-api-docs/warcraft/\n\t\t// WCL charges us 1 'point' for each subquery we issue within the request. So\n\t\t// by using filter expressions we can combine our queries together, to spend\n\t\t// fewer points.\n\t\tconst reportDataQuery = `{\n\t\t\treportData {\n\t\t\t\treport(code: \"${urlData.reportID}\") {\n\t\t\t\t\tguild {\n\t\t\t\t\t\tname faction {id}\n\t\t\t\t\t}\n\t\t\t\t\tplayerDetails: table(fightIDs: [${urlData.fightID}], dataType: Casts, killType: All, viewBy: Default)\n\t\t\t\t\tcombatantInfoEvents: events(fightIDs: [${urlData.fightID}], dataType:CombatantInfo, limit: 50) { data }\n\t\t\t\t\tfights(fightIDs: [${urlData.fightID}]) {\n\t\t\t\t\t\tstartTime, endTime, id, name\n\t\t\t\t\t}\n\n\t\t\t\t\treportCastEvents: events(dataType:Casts, endTime: 99999999, filterExpression: \"${[racialSpells, professionSpells].flat().map(spell => spell.id).map(id => `ability.id = ${id}`).join(' OR ')\n\t\t\t}\", limit: 10000) { data }\n\n\t\t\t\t\tfightCastEvents: events(fightIDs: [${urlData.fightID}], dataType:Casts, filterExpression: \"${[externalCDSpells].flat().map(spell => spell.id).map(id => `ability.id = ${id}`).join(' OR ')\n\t\t\t}\", limit: 10000) { data }\n\n\t\t\t\t\tfightHealEvents: events(fightIDs: [${urlData.fightID}], dataType:Healing, filterExpression: \"${[samePartyHealingSpells, otherPartyHealingSpells].flat().map(spell => spell.id).map(id => `ability.id = ${id}`).join(' OR ')\n\t\t\t}\", limit: 10000) { data }\n\n\t\t\t\t\tmanaTideTotem: events(fightIDs: [${urlData.fightID}], dataType:Resources, filterExpression: \"ability.id = 39609\", limit: 100) { data }\n\t\t\t\t}\n\t\t\t}\n\t\t}`;\n\t\tconst reportData = await this.queryWCL(reportDataQuery);\n\n\t\t// Process the report data.\n\t\tconst wclData = reportData.data.reportData.report; // TODO: Typings?\n\t\tconst playerData: wclPlayer[] = wclData.playerDetails.data.entries;\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tconst eventID = TypedEvent.nextEventID();\n\t\t\tconst wclPlayers = playerData.map(wclPlayer => new WCLSimPlayer(wclPlayer, this.simUI, eventID));\n\t\t\tthis.inferRace(eventID, wclData, wclPlayers);\n\t\t\tthis.inferProfessions(eventID, wclData, wclPlayers);\n\t\t\tthis.inferAssignments(eventID, wclData, wclPlayers);\n\t\t\tthis.inferPartyComposition(eventID, wclData, wclPlayers);\n\t\t\tconst numPaladins = wclPlayers.filter(player => player.player.getClass() == Class.ClassPaladin).length;\n\t\t\tconst settings = RaidSimSettings.create({\n\t\t\t\tencounter: this.getEncounterProto(wclData),\n\t\t\t\traid: this.getRaidProto(wclPlayers),\n\t\t\t\tblessings: makeDefaultBlessings(numPaladins),\n\t\t\t});\n\n\t\t\t// Clear the raid out to avoid any taint issues.\n\t\t\tthis.simUI.clearRaid(eventID);\n\t\t\tthis.simUI.fromProto(eventID, settings);\n\t\t});\n\n\t\tthis.close();\n\t}\n\n\tprivate inferRace(eventID: EventID, wclData: any, wclPlayers: WCLSimPlayer[]) {\n\t\twclPlayers.forEach(p => p.player.setRace(eventID, Race.RaceUnknown));\n\n\t\t// If defined in log, use that faction. Otherwise default to UI setting.\n\t\tlet faction = (wclData.guild?.faction?.id || this.simUI.raidPicker?.getCurrentFaction() || Faction.Horde) as Faction;\n\n\t\twclData.combatantInfoEvents.data.forEach((combatantInfo: wclCombatantInfoEvent) => {\n\t\t\tcombatantInfo.auras\n\t\t\t\t.filter(aura => aura.ability == 28878)\n\t\t\t\t.forEach(aura => {\n\t\t\t\t\tconst sourcePlayer = wclPlayers.find(player => player.id == aura.source);\n\t\t\t\t\tif (sourcePlayer && sourcePlayer.player.getRace() != Race.RaceDraenei) {\n\t\t\t\t\t\tconsole.log(`Inferring player ${sourcePlayer.name} has race ${raceNames.get(Race.RaceDraenei)} from Heroic Presence aura event`);\n\t\t\t\t\t\tsourcePlayer.player.setRace(eventID, Race.RaceDraenei);\n\t\t\t\t\t\tfaction = Faction.Alliance;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t});\n\n\t\tconst castEventsBySpellId = bucket(wclData.reportCastEvents.data as Array<wclCastEvent>, event => String(event.abilityGameID));\n\t\tracialSpells.forEach(spell => {\n\t\t\tconst spellEvents: Array<wclCastEvent> = castEventsBySpellId[spell.id] || [];\n\t\t\tspellEvents.forEach(event => {\n\t\t\t\tconst sourcePlayer = wclPlayers.find(player => player.id == event.sourceID);\n\t\t\t\tif (sourcePlayer) {\n\t\t\t\t\tconsole.log(`Inferring player ${sourcePlayer.name} has race ${raceNames.get(spell.race)} from ${spell.name} event`);\n\t\t\t\t\tsourcePlayer.player.setRace(eventID, spell.race);\n\t\t\t\t\tfaction = raceToFaction[spell.race];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\twclPlayers.forEach(p => {\n\t\t\tif (p.player.getRace() == Race.RaceUnknown) {\n\t\t\t\tp.player.setRace(eventID, p.preset.defaultFactionRaces[faction]);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate inferProfessions(eventID: EventID, wclData: any, wclPlayers: WCLSimPlayer[]) {\n\t\tconst castEventsBySpellId = bucket(wclData.reportCastEvents.data as Array<wclCastEvent>, event => String(event.abilityGameID));\n\t\tprofessionSpells.forEach(spell => {\n\t\t\tconst spellEvents: Array<wclCastEvent> = castEventsBySpellId[spell.id] || [];\n\t\t\tspellEvents.forEach(event => {\n\t\t\t\tconst sourcePlayer = wclPlayers.find(player => player.id == event.sourceID);\n\t\t\t\tif (sourcePlayer && !sourcePlayer.inferredProfessions.includes(spell.profession)) {\n\t\t\t\t\tconsole.log(`Inferring player ${sourcePlayer.name} has profession ${professionNames.get(spell.profession)} from ${spell.name} event`);\n\t\t\t\t\tsourcePlayer.inferredProfessions.push(spell.profession);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\twclPlayers.forEach(player => {\n\t\t\tlet professions = distinct(player.inferredProfessions.concat(player.player.getGear().getProfessionRequirements()));\n\t\t\tif (professions.length == 0) {\n\t\t\t\tprofessions = [Profession.Engineering, Profession.Jewelcrafting];\n\t\t\t} else if (professions.length == 1) {\n\t\t\t\tif (professions[0] != Profession.Engineering) {\n\t\t\t\t\tprofessions.push(Profession.Engineering);\n\t\t\t\t} else {\n\t\t\t\t\tprofessions.push(Profession.Jewelcrafting);\n\t\t\t\t}\n\t\t\t}\n\t\t\tplayer.player.setProfessions(eventID, professions);\n\t\t});\n\t}\n\n\tprivate inferAssignments(eventID: EventID, wclData: any, wclPlayers: WCLSimPlayer[]) {\n\t\tconst castEventsBySpellId = bucket(wclData.fightCastEvents.data as Array<wclCastEvent>, event => String(event.abilityGameID));\n\t\texternalCDSpells.forEach(spell => {\n\t\t\tconst spellEvents: Array<wclCastEvent> = castEventsBySpellId[spell.id] || [];\n\t\t\tspellEvents.forEach(event => {\n\t\t\t\tconst sourcePlayer = wclPlayers.find(player => player.id == event.sourceID);\n\t\t\t\tconst targetPlayer = wclPlayers.find(player => player.id == event.targetID);\n\t\t\t\tif (sourcePlayer && targetPlayer && sourcePlayer.player.getClass() == spell.class) {\n\t\t\t\t\tconst specOptions = spell.applyFunc(sourcePlayer.player, targetPlayer.toUnitReference());\n\t\t\t\t\tsourcePlayer.player.setSpecOptions(eventID, specOptions);\n\t\t\t\t\tconsole.log(`Inferring player ${sourcePlayer.name} is targeting ${targetPlayer.name} with ${spell.name} from cast event`);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// Assigns the raidIndex field for all players.\n\tprivate inferPartyComposition(eventID: EventID, wclData: any, wclPlayers: WCLSimPlayer[]) {\n\t\tconst setPlayersInParty = (player1: WCLSimPlayer, player2: WCLSimPlayer, reason: string) => {\n\t\t\tif (player1.addPlayerInParty(player2) || player2.addPlayerInParty(player1)) {\n\t\t\t\tconsole.log(`Inferring players ${player1.name} and ${player2.name} in same party from ${reason} event`);\n\t\t\t}\n\t\t};\n\n\t\tconst healEventsBySpellId = bucket(wclData.fightHealEvents.data as Array<wclHealEvent>, event => String(event.abilityGameID));\n\n\t\t// These spells only affect players in the same party as the caster.\n\t\tsamePartyHealingSpells.forEach(spell => {\n\t\t\tconst spellEvents: Array<wclHealEvent> = healEventsBySpellId[spell.id] || [];\n\t\t\tspellEvents.forEach(event => {\n\t\t\t\tconst sourcePlayer = wclPlayers.find(player => player.id == event.sourceID);\n\t\t\t\tconst targetPlayer = wclPlayers.find(player => player.id == event.targetID);\n\t\t\t\tif (sourcePlayer && targetPlayer) {\n\t\t\t\t\tsetPlayersInParty(sourcePlayer, targetPlayer, spell.name);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Prayer of Healing is a bit different, we can infer that players who are targeted at the same time are in a group.\n\t\totherPartyHealingSpells.forEach(spell => {\n\t\t\tconst spellEvents: Array<wclHealEvent> = healEventsBySpellId[spell.id] || [];\n\t\t\tconst spellEventsByTimestamp = bucket(spellEvents, event => String(event.timestamp) + String(event.sourceID));\n\t\t\tfor (const [timestamp, eventsAtTime] of Object.entries(spellEventsByTimestamp)) {\n\t\t\t\tconst spellTargets = eventsAtTime.map(event => wclPlayers.find(player => player.id == event.targetID));\n\t\t\t\tfor (let i = 0; i < spellTargets.length; i++) {\n\t\t\t\t\tfor (let j = 0; j < spellTargets.length; j++) {\n\t\t\t\t\t\tif (i != j && spellTargets[i] && spellTargets[j]) {\n\t\t\t\t\t\t\tsetPlayersInParty(spellTargets[i]!, spellTargets[j]!, spell.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\twclData.combatantInfoEvents.data.forEach((combatantInfo: wclCombatantInfoEvent) => {\n\t\t\tconst targetPlayer = wclPlayers.find(player => player.id == combatantInfo.sourceID);\n\t\t\tcombatantInfo.auras\n\t\t\t\t.filter(aura => aura.ability == 28878)\n\t\t\t\t.forEach(aura => {\n\t\t\t\t\tconst sourcePlayer = wclPlayers.find(player => player.id == aura.source);\n\t\t\t\t\tif (sourcePlayer && targetPlayer) {\n\t\t\t\t\t\tsetPlayersInParty(sourcePlayer, targetPlayer, 'Heroic Presence');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t});\n\n\t\t// Assign players with same-group inferences.\n\t\tlet inferredPlayers = wclPlayers.filter(player => player.playersInParty.length > 0);\n\t\tlet nextEmptyPartyIdx = 0;\n\t\twhile (inferredPlayers.length > 0) {\n\t\t\t// Find all the players in the same party as the first player.\n\t\t\tlet partyMembers = [inferredPlayers[0]].concat(inferredPlayers[0].playersInParty);\n\t\t\tlet numMembers = 0;\n\t\t\twhile (partyMembers.length != numMembers) {\n\t\t\t\tnumMembers = partyMembers.length;\n\t\t\t\tpartyMembers = distinct(partyMembers.map(member => [member].concat(member.playersInParty)).flat());\n\t\t\t}\n\n\t\t\t// Assign these members to an empty party.\n\t\t\tconst partyIdx = nextEmptyPartyIdx;\n\t\t\tnextEmptyPartyIdx++;\n\t\t\tpartyMembers.forEach((member, i) => {\n\t\t\t\tmember.raidIndex = partyIdx * 5 + i;\n\t\t\t});\n\n\t\t\tinferredPlayers = inferredPlayers.filter(player => !partyMembers.includes(player));\n\t\t}\n\n\t\t// Assign remaining players into open slots.\n\t\tconst allRaidIndexes = [...Array(40).keys()];\n\t\tconst nextFreeIndex = () => allRaidIndexes.find(idx => !wclPlayers.some(p => p.raidIndex == idx)) ?? -1;\n\t\twclPlayers\n\t\t\t.filter(player => player.raidIndex == -1)\n\t\t\t.forEach(player => {\n\t\t\t\tconst nextIdx = nextFreeIndex();\n\t\t\t\tif (nextIdx == -1) {\n\t\t\t\t\tthrow new Error('Invalid next idx');\n\t\t\t\t}\n\t\t\t\tplayer.raidIndex = nextIdx;\n\t\t\t});\n\t}\n\n\tprivate getEncounterProto(wclData: any): EncounterProto {\n\t\tconst fight: { startTime: number, endTime: number, id: number, name: string } = wclData.fights[0];\n\n\t\tconst encounter = EncounterProto.create({\n\t\t\tduration: (fight.endTime - fight.startTime) / 1000,\n\t\t\ttargets: [],\n\t\t});\n\n\t\t// Use the preset encounter if it exists.\n\t\tlet closestEncounterPreset = this.simUI.sim.db.getAllPresetEncounters().find(enc => enc.path.includes(fight.name));\n\t\tif (closestEncounterPreset && closestEncounterPreset.targets.length) {\n\t\t\tclosestEncounterPreset.targets\n\t\t\t\t.map(mob => mob.target as TargetProto)\n\t\t\t\t.filter(target => target !== undefined)\n\t\t\t\t.forEach(target => encounter.targets.push(target));\n\t\t}\n\n\t\t// Build a manual target list if no preset encounter exists.\n\t\tif (encounter.targets.length === 0) {\n\t\t\tencounter.targets.push(Encounter.defaultTargetProto());\n\t\t}\n\n\t\treturn encounter;\n\t}\n\n\tprivate getRaidProto(wclPlayers: WCLSimPlayer[]): RaidProto {\n\t\tconst raid = RaidProto.create({\n\t\t\tparties: [...new Array(MAX_NUM_PARTIES).keys()].map(p => PartyProto.create({\n\t\t\t\tplayers: [...new Array(5).keys()].map(p => PlayerProto.create()),\n\t\t\t})),\n\t\t});\n\n\t\twclPlayers\n\t\t\t.forEach(player => {\n\t\t\t\tconst positionInParty = player.raidIndex % 5;\n\t\t\t\tconst partyIdx = (player.raidIndex - positionInParty) / 5;\n\t\t\t\tconst playerProto = player.player.toProto();\n\t\t\t\traid.parties[partyIdx].players[positionInParty] = playerProto;\n\n\t\t\t\tif (isTankSpec(playerToSpec(playerProto))) {\n\t\t\t\t\traid.tanks.push(player.toUnitReference());\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn raid;\n\t}\n}\n\nclass WCLSimPlayer {\n\tpublic readonly data: wclPlayer;\n\tpublic readonly id: number;\n\tpublic readonly name: string;\n\tpublic readonly type: string;\n\tpublic raidIndex: number = -1;\n\n\tprivate readonly simUI: RaidSimUI;\n\tprivate readonly fullType: string;\n\tprivate readonly spec: Spec | null;\n\n\treadonly player: Player<any>;\n\treadonly preset: PresetSpecSettings<any>;\n\n\tinferredProfessions: Array<Profession> = [];\n\n\treadonly playersInParty: Array<WCLSimPlayer> = [];\n\n\tconstructor(data: wclPlayer, simUI: RaidSimUI, eventID: EventID) {\n\t\tthis.simUI = simUI;\n\t\tthis.data = data;\n\n\t\tthis.name = data.name;\n\t\tthis.id = data.id;\n\t\tthis.type = data.type;\n\n\t\tconst wclSpec = data.icon.split('-')[1];\n\t\tthis.fullType = this.type + wclSpec;\n\t\tconsole.log(`WCL spec: ${this.fullType}`);\n\n\t\tconst foundSpec = fullTypeToSpec[this.fullType] ?? null;\n\t\tif (foundSpec == null) {\n\t\t\tthrow new Error('Player type not implemented: ' + this.fullType);\n\t\t}\n\t\tthis.spec = foundSpec;\n\t\tthis.player = new Player(this.spec, simUI.sim);\n\n\t\tthis.preset = WCLSimPlayer.getMatchingPreset(foundSpec, data.talents);\n\t\tif (this.preset === undefined) {\n\t\t\tthrow new Error('Could not find matching preset: ' + JSON.stringify({\n\t\t\t\t'name': this.name,\n\t\t\t\t'type': this.fullType,\n\t\t\t\t'talents': data.talents,\n\t\t\t}).toString());\n\t\t}\n\n\t\t// Apply preset defaults.\n\t\tthis.player.applySharedDefaults(eventID);\n\t\tthis.player.setTalentsString(eventID, this.preset.talents.talentsString);\n\t\tthis.player.setGlyphs(eventID, this.preset.talents.glyphs!);\n\t\tthis.player.setConsumes(eventID, this.preset.consumes);\n\t\tthis.player.setRotation(eventID, this.preset.rotation);\n\t\tthis.player.setSpecOptions(eventID, this.preset.specOptions);\n\t\tthis.player.setProfessions(eventID, [Profession.Engineering, Profession.Jewelcrafting]);\n\n\t\t// Apply settings from report data.\n\t\tthis.player.setName(eventID, data.name);\n\t\tthis.player.setGear(eventID, simUI.sim.db.lookupEquipmentSpec(EquipmentSpec.create({\n\t\t\titems: data.gear.map(gear => ItemSpec.create({\n\t\t\t\tid: gear.id,\n\t\t\t\tenchant: gear.permanentEnchant,\n\t\t\t\tgems: gear.gems ? gear.gems.map(gemInfo => gemInfo.id) : [],\n\t\t\t})),\n\t\t})));\n\t}\n\n\tprivate static getMatchingPreset(spec: Spec, talents: wclTalents[]): PresetSpecSettings<Spec> {\n\t\tconst matchingPresets = playerPresets.filter((preset) => preset.spec == spec);\n\t\tlet presetIdx = 0;\n\n\t\tif (matchingPresets && matchingPresets.length > 1) {\n\t\t\tlet distance = 999;\n\t\t\t// Search talents and find the preset that the players talents most closely match.\n\t\t\tmatchingPresets.forEach((preset, i) => {\n\t\t\t\tconst presetTalents = getTalentTreePoints(preset.talents.talentsString);\n\t\t\t\t// Diff the distance to the preset.\n\t\t\t\tconst newDistance = presetTalents.reduce((acc, v, i) => acc += Math.abs(talents[i]?.guid - presetTalents[i]), 0);\n\n\t\t\t\t// If this is the best distance, assign this preset.\n\t\t\t\tif (newDistance < distance) {\n\t\t\t\t\tpresetIdx = i;\n\t\t\t\t\tdistance = newDistance;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn matchingPresets[presetIdx];\n\t}\n\n\tpublic toUnitReference(): UnitReference {\n\t\treturn UnitReference.create({\n\t\t\ttype: UnitReference_Type.Player,\n\t\t\tindex: this.raidIndex,\n\t\t});\n\t}\n\n\tpublic addPlayerInParty(other: WCLSimPlayer): boolean {\n\t\tif (other != this && !this.playersInParty.includes(other)) {\n\t\t\tthis.playersInParty.push(other);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nconst fullTypeToSpec: Record<string, Spec> = {\n\t'DeathKnightBlood': Spec.SpecTankDeathknight,\n\t'DeathKnightLichborne': Spec.SpecTankDeathknight,\n\t'DeathKnightRuneblade': Spec.SpecDeathknight,\n\t'DeathKnightBloodDPS': Spec.SpecDeathknight,\n\t'DeathKnightFrost': Spec.SpecDeathknight,\n\t'DeathKnightUnholy': Spec.SpecDeathknight,\n\t'DruidBalance': Spec.SpecBalanceDruid,\n\t'DruidFeral': Spec.SpecFeralDruid,\n\t'DruidWarden': Spec.SpecFeralTankDruid,\n\t'DruidGuardian': Spec.SpecFeralTankDruid,\n\t'DruidRestoration': Spec.SpecRestorationDruid,\n\t'HunterBeastMastery': Spec.SpecHunter,\n\t'HunterSurvival': Spec.SpecHunter,\n\t'HunterMarksmanship': Spec.SpecHunter,\n\t'MageArcane': Spec.SpecMage,\n\t'MageFire': Spec.SpecMage,\n\t'MageFrost': Spec.SpecMage,\n\t'PaladinHoly': Spec.SpecHolyPaladin,\n\t'PaladinJusticar': Spec.SpecProtectionPaladin,\n\t'PaladinProtection': Spec.SpecProtectionPaladin,\n\t'PaladinRetribution': Spec.SpecRetributionPaladin,\n\t'PriestHoly': Spec.SpecHealingPriest,\n\t'PriestDiscipline': Spec.SpecHealingPriest,\n\t'PriestShadow': Spec.SpecShadowPriest,\n\t'PriestSmite': Spec.SpecSmitePriest,\n\t'RogueAssassination': Spec.SpecRogue,\n\t'RogueCombat': Spec.SpecRogue,\n\t'RogueSubtlety': Spec.SpecRogue,\n\t'ShamanElemental': Spec.SpecElementalShaman,\n\t'ShamanEnhancement': Spec.SpecEnhancementShaman,\n\t'ShamanRestoration': Spec.SpecRestorationShaman,\n\t'WarlockDestruction': Spec.SpecWarlock,\n\t'WarlockAffliction': Spec.SpecWarlock,\n\t'WarlockDemonology': Spec.SpecWarlock,\n\t'WarriorArms': Spec.SpecWarrior,\n\t'WarriorFury': Spec.SpecWarrior,\n\t'WarriorChampion': Spec.SpecWarrior,\n\t'WarriorWarrior': Spec.SpecWarrior,\n\t'WarriorGladiator': Spec.SpecWarrior,\n\t'WarriorProtection': Spec.SpecProtectionWarrior,\n};\n\ninterface QuerySpell {\n\tid: number,\n\tname: string,\n}\n\n// Spells which imply a specific Race.\nconst racialSpells: Array<{ id: number, name: string, race: Race }> = [\n\t{ id: 25046, name: 'Arcane Torrent (Energy)', race: Race.RaceBloodElf },\n\t{ id: 28730, name: 'Arcane Torrent (Mana)', race: Race.RaceBloodElf },\n\t{ id: 50613, name: 'Arcane Torrent (Runic Power)', race: Race.RaceBloodElf },\n\t{ id: 26297, name: 'Berserking', race: Race.RaceTroll },\n\t{ id: 20572, name: 'Blood Fury (AP)', race: Race.RaceOrc },\n\t{ id: 33697, name: 'Blood Fury (AP+SP)', race: Race.RaceOrc },\n\t{ id: 33702, name: 'Blood Fury (SP)', race: Race.RaceOrc },\n\t{ id: 20589, name: 'Escape Artist', race: Race.RaceGnome },\n\t{ id: 20594, name: 'Stoneform', race: Race.RaceDwarf },\n\t{ id: 20549, name: 'War Stomp', race: Race.RaceTauren },\n\t{ id: 7744, name: 'Will of the Forsaken', race: Race.RaceUndead },\n\t{ id: 59752, name: 'Will to Survive', race: Race.RaceHuman },\n];\n\n// Spells which imply a specific Profession.\nconst professionSpells: Array<{ id: number, name: string, profession: Profession }> = [\n\t{ id: 55503, name: 'Lifeblood', profession: Profession.Herbalism },\n\t{ id: 50305, name: 'Skinning', profession: Profession.Skinning },\n];\n\nconst externalCDSpells: Array<{ id: number, name: string, class: Class, applyFunc: (player: Player<any>, raidTarget: UnitReference) => SpecOptions<any> }> = [\n\t{\n\t\tid: 29166, name: 'Innervate', class: Class.ClassDruid, applyFunc: (player: Player<any>, raidTarget: UnitReference) => {\n\t\t\tconst options = player.getSpecOptions() as SpecOptions<DruidSpecs>;\n\t\t\toptions.innervateTarget = raidTarget;\n\t\t\treturn options;\n\t\t}\n\t},\n\t{\n\t\tid: 10060, name: 'Power Infusion', class: Class.ClassPriest, applyFunc: (player: Player<any>, raidTarget: UnitReference) => {\n\t\t\tconst options = player.getSpecOptions() as SpecOptions<PriestSpecs>;\n\t\t\toptions.powerInfusionTarget = raidTarget;\n\t\t\treturn options;\n\t\t}\n\t},\n\t{\n\t\tid: 57933, name: 'Tricks of the Trade', class: Class.ClassRogue, applyFunc: (player: Player<any>, raidTarget: UnitReference) => {\n\t\t\tconst options = player.getSpecOptions() as SpecOptions<RogueSpecs>;\n\t\t\toptions.tricksOfTheTradeTarget = raidTarget;\n\t\t\treturn options;\n\t\t}\n\t},\n\t{\n\t\tid: 49016, name: 'Unholy Frenzy', class: Class.ClassDeathknight, applyFunc: (player: Player<any>, raidTarget: UnitReference) => {\n\t\t\tconst options = player.getSpecOptions() as SpecOptions<DeathknightSpecs>;\n\t\t\toptions.unholyFrenzyTarget = raidTarget;\n\t\t\treturn options;\n\t\t}\n\t},\n];\n\n// Healing spells which only affect the caster's party.\nconst samePartyHealingSpells: Array<{ id: number, name: string }> = [\n\t{ id: 52042, name: 'Healing Stream Totem' },\n\t{ id: 48076, name: 'Holy Nova' },\n\t{ id: 48445, name: 'Tranquility' },\n\t{ id: 15290, name: 'Vampiric Embrace' },\n];\n\n// Healing spells which only affect a single party, but not necessarily the caster's party.\nconst otherPartyHealingSpells: Array<{ id: number, name: string }> = [\n\t{ id: 48072, name: 'Prayer of Healing' },\n];\n\ninterface wclUrlData {\n\treportID: string,\n\tfightID: string,\n}\n\ninterface wclCastEvent {\n\ttype: 'cast',\n\ttimestamp: number;\n\tsourceID: number;\n\ttargetID: number;\n\tabilityGameID: number;\n\tfight: number;\n}\n\ninterface wclHealEvent {\n\ttype: 'heal',\n\ttimestamp: number;\n\tsourceID: number;\n\ttargetID: number;\n\tabilityGameID: number;\n\tfight: number;\n\tamount: number;\n}\n\ninterface wclCombatantInfoEvent {\n\ttype: 'combatantinfo';\n\tsourceID: number;\n\tauras: {\n\t\tsource: number;\n\t\tability: number;\n\t\tname: string;\n\t}[];\n}\n\ninterface wclRateLimitData {\n\tlimitPerHour: number,\n\tpointsSpentThisHour: number,\n\tpointsResetIn: number\n}\n\n// Typed interface for WCL talents\ninterface wclTalents {\n\tname: string;\n\tguid: number;\n\ttype: number;\n\tabilityIcon: string;\n}\n\n// Typed interface for WCL Gems\ninterface wclGems {\n\tid: number;\n\titemLevel: number;\n\ticon: string;\n}\n\n// Typed interface for WCL Gear\ninterface wclGear {\n\tid: number;\n\tslot: number;\n\tquality: number;\n\ticon: string;\n\tname: string;\n\titemLevel: number;\n\tpermanentEnchant: number;\n\tpermanentEnchantName: string;\n\ttemporaryEnchant: number;\n\tgems?: wclGems[];\n}\n\n// Typed interface for WCL Player Data\ninterface wclPlayer {\n\tname: string;\n\tid: number;\n\tguid?: number;\n\ttype: string; // Paladin, Mage, etc.\n\ticon: string; // Paladin-Justicar, Mage-Fire, etc.\n\titemLevel?: number;\n\ttotal?: number;\n\tactiveTime?: number;\n\tactiveTimeReduced?: number;\n\tabilities?: unknown[]; // Don't care about abilities.\n\tdamageAbilities?: unknown[];\n\ttargets?: unknown[];\n\ttalents: wclTalents[];\n\tgear: wclGear[];\n}\n\ninterface wclAura {\n\tname: string;\n\tid: number;\n\tguid: number;\n\ttype: string;\n\ticon: string;\n\ttotalUptime: number;\n\ttotalUses: number;\n\tbands: {\n\t\tstartTime: number,\n\t\tendTime: number,\n\t}[];\n}\n","import { EmbeddedDetailedResults } from \"../core/components/detailed_results.js\";\nimport { LogRunner } from \"../core/components/detailed_results/log_runner.js\";\nimport { addRaidSimAction, RaidSimResultsManager, ReferenceData } from \"../core/components/raid_sim_action.js\";\n\nimport { Player } from \"../core/player.js\";\nimport { Raid as RaidProto } from \"../core/proto/api.js\";\nimport { Class, Encounter as EncounterProto, RaidBuffs, TristateEffect } from \"../core/proto/common.js\";\nimport { Blessings } from \"../core/proto/paladin.js\";\nimport { BlessingsAssignments, RaidSimSettings, SavedEncounter } from \"../core/proto/ui.js\";\nimport { playerToSpec } from \"../core/proto_utils/utils.js\";\nimport { Sim } from \"../core/sim.js\";\nimport { SimUI } from \"../core/sim_ui.js\";\nimport { raidSimStatus } from '../core/launched_sims.js';\nimport { EventID, TypedEvent } from \"../core/typed_event.js\";\n\nimport { RaidTab } from \"./raid_tab.js\";\nimport { SettingsTab } from \"./settings_tab.js\";\n\nimport { BlessingsPicker } from \"./blessings_picker.js\";\nimport { implementedSpecs } from \"./presets.js\";\nimport { RaidPicker } from \"./raid_picker.js\";\n\nimport * as ImportExport from \"./import_export.js\";\n\ndeclare var pako: any;\n\nexport interface RaidSimConfig {\n\tknownIssues?: Array<string>,\n}\n\nconst extraKnownIssues: Array<string> = [\n\t//'We\\'re still missing implementations for many specs. If you\\'d like to help us out, check out our <a href=\"https://github.com/wowsims/wotlk\">Github project</a> or <a href=\"https://discord.gg/jJMPr9JWwx\">join our discord</a>!',\n];\n\nexport class RaidSimUI extends SimUI {\n\tprivate readonly config: RaidSimConfig;\n\tprivate raidSimResultsManager: RaidSimResultsManager | null = null;\n\tpublic raidPicker: RaidPicker | null = null;\n\tpublic blessingsPicker: BlessingsPicker | null = null;\n\n\t// Emits when the raid comp changes. Includes changes to buff bots.\n\treadonly compChangeEmitter = new TypedEvent<void>();\n\treadonly changeEmitter = new TypedEvent<void>();\n\n\treadonly referenceChangeEmitter = new TypedEvent<void>();\n\n\tconstructor(parentElem: HTMLElement, config: RaidSimConfig) {\n\t\tsuper(parentElem, new Sim(), {\n\t\t\tcssClass: 'raid-sim-ui',\n\t\t\tcssScheme: 'raid',\n\t\t\tspec: null,\n\t\t\tlaunchStatus: raidSimStatus,\n\t\t\tknownIssues: (config.knownIssues || []).concat(extraKnownIssues),\n\t\t});\n\n\t\tthis.config = config;\n\n\t\tthis.sim.raid.compChangeEmitter.on(eventID => this.compChangeEmitter.emit(eventID));\n\t\t[\n\t\t\tthis.compChangeEmitter,\n\t\t\tthis.sim.changeEmitter,\n\t\t].forEach(emitter => emitter.on(eventID => this.changeEmitter.emit(eventID)));\n\t\tthis.changeEmitter.on(() => this.recomputeSettingsLayout());\n\n\t\tthis.sim.setModifyRaidProto(raidProto => this.modifyRaidProto(raidProto));\n\t\tthis.sim.waitForInit().then(() => this.loadSettings());\n\n\t\tthis.addSidebarComponents();\n\t\tthis.addTopbarComponents();\n\t\tthis.addRaidTab();\n\t\tthis.addSettingsTab();\n\t\tthis.addDetailedResultsTab();\n\t}\n\n\tprivate loadSettings() {\n\t\tconst initEventID = TypedEvent.nextEventID();\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tlet loadedSettings = false;\n\n\t\t\tconst savedSettings = window.localStorage.getItem(this.getSettingsStorageKey());\n\t\t\tif (savedSettings != null) {\n\t\t\t\ttry {\n\t\t\t\t\tconst settings = RaidSimSettings.fromJsonString(savedSettings);\n\t\t\t\t\tthis.fromProto(initEventID, settings);\n\t\t\t\t\tloadedSettings = true;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Failed to parse saved settings: ' + e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!loadedSettings) {\n\t\t\t\tthis.applyDefaults(initEventID);\n\t\t\t}\n\n\t\t\t// This needs to go last so it doesn't re-store things as they are initialized.\n\t\t\tthis.changeEmitter.on(eventID => {\n\t\t\t\tconst jsonStr = RaidSimSettings.toJsonString(this.toProto());\n\t\t\t\twindow.localStorage.setItem(this.getSettingsStorageKey(), jsonStr);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate addSidebarComponents() {\n\t\tthis.raidSimResultsManager = addRaidSimAction(this);\n\t\tthis.raidSimResultsManager.changeEmitter.on(eventID => this.referenceChangeEmitter.emit(eventID));\n\t}\n\n\tprivate addTopbarComponents() {\n\t\tthis.simHeader.addImportLink('JSON', (parent) => new ImportExport.RaidJsonImporter(this.rootElem, this));\n\t\tthis.simHeader.addImportLink('WCL', (parent) => new ImportExport.RaidWCLImporter(this.rootElem, this));\n\n\t\tthis.simHeader.addExportLink('JSON', (parent) => new ImportExport.RaidJsonExporter(this.rootElem, this));\n\t}\n\n\tprivate addRaidTab() {\n\t\tnew RaidTab(this.simTabContentsContainer, this);\n\t}\n\n\tprivate addSettingsTab() {\n\t\tnew SettingsTab(this.simTabContentsContainer, this);\n\t}\n\n\tprivate addDetailedResultsTab() {\n\t\tthis.addTab('Results', 'detailed-results-tab', `\n\t\t\t<div class=\"detailed-results\">\n\t\t\t</div>\n\t\t`);\n\n\t\tconst detailedResults = new EmbeddedDetailedResults(this.rootElem.getElementsByClassName('detailed-results')[0] as HTMLElement, this, this.raidSimResultsManager!);\n\t}\n\n\tprivate recomputeSettingsLayout() {\n\t\twindow.dispatchEvent(new Event('resize'));\n\t}\n\n\tprivate modifyRaidProto(raidProto: RaidProto) {\n\t\t// Apply blessings.\n\t\tconst numPaladins = this.getClassCount(Class.ClassPaladin);\n\t\tconst blessingsAssignments = this.blessingsPicker!.getAssignments();\n\t\timplementedSpecs.forEach(spec => {\n\t\t\tconst playerProtos = raidProto.parties\n\t\t\t\t.map(party => party.players.filter(player => player.class != Class.ClassUnknown && playerToSpec(player) == spec))\n\t\t\t\t.flat();\n\n\t\t\tblessingsAssignments.paladins.forEach((paladin, i) => {\n\t\t\t\tif (i >= numPaladins) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (paladin.blessings[spec] == Blessings.BlessingOfKings) {\n\t\t\t\t\tplayerProtos.forEach(playerProto => playerProto.buffs!.blessingOfKings = true);\n\t\t\t\t} else if (paladin.blessings[spec] == Blessings.BlessingOfMight) {\n\t\t\t\t\tplayerProtos.forEach(playerProto => playerProto.buffs!.blessingOfMight = TristateEffect.TristateEffectImproved);\n\t\t\t\t} else if (paladin.blessings[spec] == Blessings.BlessingOfWisdom) {\n\t\t\t\t\tplayerProtos.forEach(playerProto => playerProto.buffs!.blessingOfWisdom = TristateEffect.TristateEffectImproved);\n\t\t\t\t} else if (paladin.blessings[spec] == Blessings.BlessingOfSanctuary) {\n\t\t\t\t\tplayerProtos.forEach(playerProto => playerProto.buffs!.blessingOfSanctuary = true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tgetCurrentData(): ReferenceData | null {\n\t\tif (this.raidSimResultsManager) {\n\t\t\treturn this.raidSimResultsManager.getCurrentData();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tgetReferenceData(): ReferenceData | null {\n\t\tif (this.raidSimResultsManager) {\n\t\t\treturn this.raidSimResultsManager.getReferenceData();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tgetActivePlayers(): Array<Player<any>> {\n\t\treturn this.sim.raid.getActivePlayers();\n\t}\n\n\tgetClassCount(playerClass: Class): number {\n\t\treturn this.getActivePlayers().filter(player => player.isClass(playerClass)).length;\n\t}\n\n\tapplyDefaults(eventID: EventID) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.sim.raid.fromProto(eventID, RaidProto.create({\n\t\t\t\tnumActiveParties: 5,\n\t\t\t}));\n\t\t\tthis.sim.setPhase(eventID, 1);\n\t\t\tthis.sim.encounter.applyDefaults(eventID);\n\t\t\tthis.sim.applyDefaults(eventID, true, true);\n\t\t\tthis.sim.setShowDamageMetrics(eventID, true);\n\t\t});\n\t}\n\n\ttoProto(): RaidSimSettings {\n\t\treturn RaidSimSettings.create({\n\t\t\tsettings: this.sim.toProto(),\n\t\t\traid: this.sim.raid.toProto(true),\n\t\t\tblessings: this.blessingsPicker!.getAssignments(),\n\t\t\tencounter: this.sim.encounter.toProto(),\n\t\t});\n\t}\n\n\ttoLink(): string {\n\t\tconst proto = this.toProto();\n\t\t// When sharing links, people generally don't intend to share settings.\n\t\tproto.settings = undefined;\n\n\t\tconst protoBytes = RaidSimSettings.toBinary(proto);\n\t\tconst deflated = pako.deflate(protoBytes, { to: 'string' });\n\t\tconst encoded = btoa(String.fromCharCode(...deflated));\n\n\t\tconst linkUrl = new URL(window.location.href);\n\t\tlinkUrl.hash = encoded;\n\t\treturn linkUrl.toString();\n\t}\n\n\tfromProto(eventID: EventID, settings: RaidSimSettings) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tif (settings.settings) {\n\t\t\t\tthis.sim.fromProto(eventID, settings.settings);\n\t\t\t}\n\t\t\tthis.sim.raid.fromProto(eventID, settings.raid || RaidProto.create());\n\t\t\tthis.sim.encounter.fromProto(eventID, settings.encounter || EncounterProto.create());\n\t\t\tthis.blessingsPicker!.setAssignments(eventID, settings.blessings || BlessingsAssignments.create());\n\t\t});\n\t}\n\n\tclearRaid(eventID: EventID) {\n\t\tthis.sim.raid.clear(eventID);\n\t}\n\n\t// Returns the actual key to use for local storage, based on the given key part and the site context.\n\tgetStorageKey(keyPart: string): string {\n\t\treturn '__wotlk_raid__' + keyPart;\n\t}\n\n\tgetSavedRaidStorageKey(): string {\n\t\treturn this.getStorageKey('__savedRaid__');\n\t}\n}\n","import { RaidSimUI } from './raid_sim_ui.js';\n\nconst ui = new RaidSimUI(document.body, {});\n"],"names":["specSimFactories","Spec","SpecTankDeathknight","parentElem","player","TankDeathknightSimUI","SpecDeathknight","DeathknightSimUI","SpecBalanceDruid","BalanceDruidSimUI","SpecFeralDruid","FeralDruidSimUI","SpecFeralTankDruid","FeralTankDruidSimUI","SpecRestorationDruid","RestorationDruidSimUI","SpecElementalShaman","ElementalShamanSimUI","SpecEnhancementShaman","EnhancementShamanSimUI","SpecRestorationShaman","RestorationShamanSimUI","SpecHunter","HunterSimUI","SpecMage","MageSimUI","SpecRogue","RogueSimUI","SpecHolyPaladin","HolyPaladinSimUI","SpecProtectionPaladin","ProtectionPaladinSimUI","SpecRetributionPaladin","RetributionPaladinSimUI","SpecHealingPriest","HealingPriestSimUI","SpecShadowPriest","ShadowPriestSimUI","SpecSmitePriest","SmitePriestSimUI","SpecWarrior","WarriorSimUI","SpecProtectionWarrior","ProtectionWarriorSimUI","SpecWarlock","WarlockSimUI","playerPresets","spec","rotation","TankDeathknightPresets.DefaultRotation","talents","TankDeathknightPresets.BloodTalents","data","specOptions","TankDeathknightPresets.DefaultOptions","consumes","TankDeathknightPresets.DefaultConsumes","defaultName","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceTroll","defaultGear","TankDeathknightPresets.P1_BLOOD_PRESET","gear","TankDeathknightPresets.P2_BLOOD_PRESET","tooltip","iconUrl","getSpecIcon","Class","ClassDeathknight","DeathknightPresets.DefaultBloodRotation","DeathknightPresets.BloodTalents","DeathknightPresets.DefaultBloodOptions","DeathknightPresets.DefaultConsumes","RaceOrc","DeathknightPresets.P1_BLOOD_PRESET","DeathknightPresets.P2_BLOOD_PRESET","DeathknightPresets.P3_BLOOD_PRESET","DeathknightPresets.DefaultFrostRotation","DeathknightPresets.FrostTalents","DeathknightPresets.DefaultFrostOptions","DeathknightPresets.P1_FROST_PRESET","DeathknightPresets.P2_FROST_PRESET","DeathknightPresets.P3_FROST_PRESET","otherDefaults","DeathknightPresets.OtherDefaults","DeathknightPresets.DefaultUnholyRotation","DeathknightPresets.UnholyDualWieldTalents","DeathknightPresets.DefaultUnholyOptions","DeathknightPresets.P1_UNHOLY_DW_PRESET","DeathknightPresets.P2_UNHOLY_DW_PRESET","DeathknightPresets.P3_UNHOLY_DW_PRESET","BalanceDruidPresets.DefaultRotation","BalanceDruidPresets.Phase2Talents","BalanceDruidPresets.DefaultOptions","BalanceDruidPresets.DefaultConsumes","BalanceDruidPresets.OtherDefaults","RaceNightElf","RaceTauren","BalanceDruidPresets.P1_PRESET","BalanceDruidPresets.P2_PRESET","BalanceDruidPresets.P3_PRESET_ALLI","BalanceDruidPresets.P3_PRESET_HORDE","specNames","ClassDruid","FeralDruidPresets.DefaultRotation","FeralDruidPresets.StandardTalents","FeralDruidPresets.DefaultOptions","FeralDruidPresets.DefaultConsumes","FeralDruidPresets.P1_PRESET","FeralDruidPresets.P2_PRESET","FeralDruidPresets.P3_PRESET","FeralTankDruidPresets.DefaultRotation","FeralTankDruidPresets.StandardTalents","FeralTankDruidPresets.DefaultOptions","FeralTankDruidPresets.DefaultConsumes","FeralTankDruidPresets.P1_PRESET","FeralTankDruidPresets.P2_PRESET","RestorationDruidPresets.DefaultRotation","RestorationDruidPresets.CelestialFocusTalents","RestorationDruidPresets.DefaultOptions","RestorationDruidPresets.DefaultConsumes","RestorationDruidPresets.P1_PRESET","RestorationDruidPresets.P2_PRESET","HunterPresets.DefaultRotation","HunterPresets.BeastMasteryTalents","HunterPresets.BMDefaultOptions","HunterPresets.DefaultConsumes","HunterPresets.MM_P1_PRESET","HunterPresets.MM_P2_PRESET","HunterPresets.MM_P3_PRESET","HunterPresets.MM_P4_PRESET","ClassHunter","HunterPresets.MarksmanTalents","HunterPresets.DefaultOptions","HunterPresets.SurvivalTalents","HunterPresets.SV_P1_PRESET","HunterPresets.SV_P2_PRESET","HunterPresets.SV_P3_PRESET","HunterPresets.SV_P4_PRESET","MagePresets.DefaultSimpleRotation","MagePresets.ArcaneTalents","MagePresets.DefaultArcaneOptions","MagePresets.DefaultArcaneConsumes","MagePresets.OtherDefaults","RaceGnome","MagePresets.ARCANE_P1_PRESET","MagePresets.ARCANE_P2_PRESET","MagePresets.ARCANE_P3_PRESET_ALLIANCE","MagePresets.ARCANE_P3_PRESET_HORDE","ClassMage","MagePresets.FireTalents","MagePresets.DefaultFireOptions","MagePresets.DefaultFireConsumes","MagePresets.FIRE_P1_PRESET","MagePresets.FIRE_P2_PRESET","MagePresets.FIRE_P3_PRESET_ALLIANCE","MagePresets.FIRE_P3_PRESET_HORDE","MagePresets.FrostfireTalents","MagePresets.DefaultFFBOptions","MagePresets.FFB_P2_PRESET","MagePresets.FFB_P3_PRESET_ALLIANCE","MagePresets.FFB_P3_PRESET_HORDE","RoguePresets.DefaultRotation","RoguePresets.AssassinationTalents137","RoguePresets.DefaultOptions","RoguePresets.DefaultConsumes","RoguePresets.P1_PRESET_ASSASSINATION","RoguePresets.P2_PRESET_ASSASSINATION","RoguePresets.P3_PRESET_ASSASSINATION","ClassRogue","RoguePresets.CombatCQCTalents","RoguePresets.P1_PRESET_COMBAT","RoguePresets.P2_PRESET_COMBAT","RoguePresets.P3_PRESET_COMBAT","ElementalShamanPresets.DefaultRotation","ElementalShamanPresets.StandardTalents","ElementalShamanPresets.DefaultOptions","ElementalShamanPresets.DefaultConsumes","RaceDraenei","ElementalShamanPresets.P1_PRESET","ElementalShamanPresets.P2_PRESET","ElementalShamanPresets.P3_PRESET_ALLI","ElementalShamanPresets.P4_PRESET","ElementalShamanPresets.P3_PRESET_HORDE","ClassShaman","EnhancementShamanPresets.DefaultRotation","EnhancementShamanPresets.StandardTalents","EnhancementShamanPresets.DefaultOptions","EnhancementShamanPresets.DefaultConsumes","EnhancementShamanPresets.P1_PRESET","EnhancementShamanPresets.P2_PRESET_FT","EnhancementShamanPresets.P3_PRESET_ALLIANCE","EnhancementShamanPresets.P3_PRESET_HORDE","RestorationShamanPresets.DefaultRotation","RestorationShamanPresets.RaidHealingTalents","RestorationShamanPresets.DefaultOptions","RestorationShamanPresets.DefaultConsumes","RestorationShamanPresets.P1_PRESET","RestorationShamanPresets.P2_PRESET","HealingPriestPresets.DiscDefaultRotation","HealingPriestPresets.DiscTalents","HealingPriestPresets.DefaultOptions","HealingPriestPresets.DefaultConsumes","RaceDwarf","RaceUndead","HealingPriestPresets.DISC_P1_PRESET","HealingPriestPresets.DISC_P2_PRESET","ClassPriest","HealingPriestPresets.HolyDefaultRotation","HealingPriestPresets.HolyTalents","HealingPriestPresets.HOLY_P1_PRESET","HealingPriestPresets.HOLY_P2_PRESET","ShadowPriestPresets.DefaultRotation","ShadowPriestPresets.StandardTalents","ShadowPriestPresets.DefaultOptions","ShadowPriestPresets.DefaultConsumes","ShadowPriestPresets.P1_PRESET","ShadowPriestPresets.P2_PRESET","ShadowPriestPresets.P3_PRESET","SmitePriestPresets.DefaultRotation","SmitePriestPresets.StandardTalents","SmitePriestPresets.DefaultOptions","SmitePriestPresets.DefaultConsumes","SmitePriestPresets.P1_PRESET","WarriorPresets.ArmsRotation","WarriorPresets.ArmsTalents","WarriorPresets.DefaultOptions","WarriorPresets.DefaultConsumes","WarriorPresets.P1_ARMS_PRESET","WarriorPresets.P2_ARMS_PRESET","WarriorPresets.P3_ARMS_4P_PRESET_ALLIANCE","WarriorPresets.P3_ARMS_4P_PRESET_HORDE","ClassWarrior","WarriorPresets.DefaultRotation","WarriorPresets.FuryTalents","WarriorPresets.P1_FURY_PRESET","WarriorPresets.P2_FURY_PRESET","WarriorPresets.P3_FURY_PRESET_ALLIANCE","WarriorPresets.P3_FURY_PRESET_HORDE","ProtectionWarriorPresets.DefaultRotation","ProtectionWarriorPresets.StandardTalents","ProtectionWarriorPresets.DefaultOptions","ProtectionWarriorPresets.DefaultConsumes","ProtectionWarriorPresets.P1_BALANCED_PRESET","ProtectionWarriorPresets.P2_SURVIVAL_PRESET","HolyPaladinPresets.DefaultRotation","HolyPaladinPresets.StandardTalents","HolyPaladinPresets.DefaultOptions","HolyPaladinPresets.DefaultConsumes","RaceBloodElf","HolyPaladinPresets.P1_PRESET","HolyPaladinPresets.P2_PRESET","ClassPaladin","ProtectionPaladinPresets.DefaultRotation","ProtectionPaladinPresets.GenericAoeTalents","ProtectionPaladinPresets.DefaultOptions","ProtectionPaladinPresets.DefaultConsumes","ProtectionPaladinPresets.P1_PRESET","ProtectionPaladinPresets.P2_PRESET","RetributionPaladinPresets.DefaultRotation","RetributionPaladinPresets.AuraMasteryTalents","RetributionPaladinPresets.DefaultOptions","RetributionPaladinPresets.DefaultConsumes","RetributionPaladinPresets.P1_PRESET","RetributionPaladinPresets.P2_PRESET","RetributionPaladinPresets.P3_PRESET","RetributionPaladinPresets.P4_PRESET","RetributionPaladinPresets.P5_PRESET","WarlockPresets.AfflictionRotation","WarlockPresets.AfflictionTalents","WarlockPresets.AfflictionOptions","WarlockPresets.DefaultConsumes","WarlockPresets.P1_AFFLICTION_PRESET","WarlockPresets.P2_AFFLICTION_PRESET","WarlockPresets.P3_AFFLICTION_ALLIANCE_PRESET","WarlockPresets.P3_AFFLICTION_HORDE_PRESET","WarlockPresets.OtherDefaults","ClassWarlock","WarlockPresets.DemonologyRotation","WarlockPresets.DemonologyTalents","WarlockPresets.DemonologyOptions","WarlockPresets.P1_DEMODESTRO_PRESET","WarlockPresets.P2_DEMODESTRO_PRESET","WarlockPresets.P3_DEMO_ALLIANCE_PRESET","WarlockPresets.P3_DEMO_HORDE_PRESET","WarlockPresets.DestructionRotation","WarlockPresets.DestructionTalents","WarlockPresets.DestructionOptions","WarlockPresets.P3_DESTRO_ALLIANCE_PRESET","WarlockPresets.P3_DESTRO_HORDE_PRESET","implementedSpecs","Set","map","preset","NEW_PLAYER","RaidPicker","Component","constructor","parent","raidSimUI","super","__publicField","this","raid","sim","raidControls","document","createElement","classList","add","rootElem","appendChild","newPlayerPicker","NewPlayerPicker","EnumPicker","label","labelTooltip","values","name","value","changedEvent","numActivePartiesChangeEmitter","getValue","getNumActiveParties","setValue","eventID","newValue","setNumActiveParties","picker","factionChangeEmitter","getFaction","setFaction","latestPhaseWithAllPresets","Math","min","max","Object","keys","k","parseInt","Array","val","phase","phaseChangeEmitter","getPhase","setPhase","partiesContainer","partyPickers","getParties","party","i","PartyPicker","updateActiveParties","forEach","partyPicker","index","remove","on","ondragend","event","clearDragPlayer","clearDragParty","getCurrentFaction","getCurrentPhase","getPlayerPicker","raidIndex","floor","MAX_PARTY_SIZE","playerPickers","getPlayerPickers","setDragPlayer","fromIndex","type","currentDragPlayer","currentDragPlayerFromIndex","currentDragType","setDragParty","currentDragParty","raidPicker","setAttribute","innerHTML","playersContainer","getElementsByClassName","PlayerPicker","dpsResultElem","referenceDeltaElem","referenceChangeEmitter","currentData","getCurrentData","referenceData","getReferenceData","partyDps","simResult","raidMetrics","parties","dps","avg","referenceDps","textContent","toFixed","formatDeltaTextElem","ondragstart","target","dataTransfer","dropEffect","effectAllowed","dragEnterCounter","ondragenter","preventDefault","ondragleave","ondragover","ondrop","TypedEvent","nextEventID","freezeAllAndDo","srcPartyPicker","srcPlayerPicker","dstPlayerPicker","srcPlayer","dstPlayer","setPlayer","labelElem","iconElem","nameElem","resultsElem","compChangeEmitter","newPlayer","getPlayer","playerDps","getPlayerWithRaidIndex","dropData","getData","length","dragType","fromPlayerPicker","binary","atob","bytes","Uint8Array","charCodeAt","playerProto","PlayerProto","fromBinary","localPlayer","Player","playerToSpec","fromProto","clone","update","isTankSpec","tanks","getTanks","emptyIdx","findIndex","tank","getPlayerFromUnitReference","setTanks","concat","makeUnitReference","newOptions","getSpecOptions","innervateTarget","newUnitReference","getRaidIndex","setSpecOptions","powerInfusionTarget","focusMagicTarget","applyNewPlayerAssignments","emit","className","classCssClass","cssClassForClass","getClass","getName","querySelector","bindPlayerEvents","addEventListener","setName","emptyName","dragStart","playerDataProto","toProto","setData","btoa","String","fromCharCode","toBinary","editElem","copyElem","deleteElem","Tooltip","getOrCreateInstance","deleteTooltip","setDragImage","onclick","PlayerEditorModal","hide","BaseModal","body","closeButton","fixed","header","id","insertAdjacentHTML","editorRoot","getEnumValues","wowClass","ClassUnknown","matchingPresets","filter","specToClass","classPresetsContainer","matchingPreset","presetElemFragment","presetElem","children","dragImage","Image","src","applySharedDefaults","setRace","setRotation","setTalentsString","talentsString","setGlyphs","glyphs","Glyphs","create","setConsumes","setProfession1","profession1","Profession","Engineering","setProfession2","profession2","Jewelcrafting","setDistanceFromTarget","distanceFromTarget","waitForInit","then","setGear","db","lookupEquipmentSpec","RaidStats","categories","RAID_STATS_OPTIONS","sections","section","sectionElem","contentElem","categoryOptions","push","RaidStatsCategory","changeEmitter","c","options","counterElem","tooltipElem","effects","opt","RaidStatsEffect","playerData","class","statsLink","customClass","html","placement","title","effect","total","sum","count","curPlayers","playerCssClass","textCssClassForClass","actionId","fill","getActivePlayers","p","condition","raidData","negateIf","cond","playerClass","clazz","extraCondition","isClass","playerClassAndTalentInternal","talentName","negateTalent","Boolean","getTalents","playerClassAndTalent","playerClassAndMissingTalent","playerSpecAndTalentInternal","isSpec","playerSpecAndTalent","raidBuff","buffName","getBuffs","isHealingSpec","isMeleeDpsSpec","isRangedDpsSpec","ActionId","fromSpellId","bloodlust","fromItemId","aura","PaladinAura","DevotionAura","totems","earth","EarthTotem","StoneskinTotem","StrengthOfEarthTotem","summon","WarlockSummon","Felhunter","shout","WarriorShout","WarriorShoutBattle","water","WaterTotem","ManaSpringTotem","air","AirTotem","WindfuryTotem","fire","FireTotem","TotemOfWrath","FlametongueTotem","WrathOfAirTotem","WarriorShoutCommanding","Imp","getRotation","sunderArmor","SunderArmor","SunderArmorMaintain","exposeArmorFrequency","ExposeFrequency","Maintain","petType","HunterPetType","Worm","maintainFaerieFire","curse","WarlockCurse","Weakness","Wasp","Bat","includes","Rhino","getTalentTree","maintainImprovedScorch","Elements","maintainDemoShout","demoShoutChoice","maintainDemoralizingRoar","CarrionBird","maintainThunderClap","thunderClapChoice","sting","HunterStingType","ScorpidSting","RaidTab","SimTab","simUI","identifier","leftPanel","rightPanel","contentContainer","buildTabContent","savedRaidManager","SavedDataManager","storageKey","getSavedRaidStorageKey","SavedRaid","blessings","blessingsPicker","getAssignments","faction","newRaid","RaidProto","setAssignments","BlessingsAssignments","changeEmitters","equals","a","b","toJson","fromJson","obj","loadUserData","UnitReferencePicker","Input","modObj","config","curPlayer","curUnitReference","getInputValue","buttonElem","dropdownElem","currentOptions","updateOptions","init","makeTargetOptions","isDropdown","getPlayers","option","makeOption","prevUnitReference","UnitReference","setInputValue","inputChanged","makeOptionElem","getInputElem","emptyUnitReference","optionData","find","outerHTML","playerFragment","AssignmentsPicker","innervatesPicker","InnervatesPicker","powerInfusionsPicker","PowerInfusionsPicker","tricksOfTheTradesPicker","TricksOfTheTradesPicker","unholyFrenzyPicker","UnholyFrenzyPicker","focusMagicsPicker","FocusMagicsPicker","AssignedBuffPicker","targetPickers","getTitle","sourcePlayers","getSourcePlayers","sourcePlayer","sourcePlayerIndex","row","sourceElem","arrow","raidTargetPicker","extraCssClasses","noTargetLabel","specOptionsChangeEmitter","getPlayerValue","setPlayerValue","targetPickerData","targetPicker","targetPlayer","powerInfusion","tricksOfTheTradeTarget","hysteria","unholyFrenzyTarget","BlessingsPicker","assignments","makeDefaultBlessings","specs","naturalSpecOrder","memeSpecs","paladinIndexes","append","buildSpecIcon","container","paladinIdx","pickers","blessingPicker","IconEnumPicker","numColumns","color","classColors","Blessings","BlessingUnknown","BlessingOfKings","BlessingOfMight","BlessingOfWisdom","BlessingOfSanctuary","zeroValue","enableWhen","_picker","numPaladins","getClassCount","paladins","updatePickers","_eventID","fragment","titleIcons","icon","newAssignments","TanksPicker","tanksChangeEmitter","j","raid2","SettingsTab","buildColumn","column1","column2","column3","buildEncounterSettings","buildConsumesSettings","buildOtherSettings","buildTankSettings","buildAssignmentSettings","buildBlessingsPicker","buildSavedDataPickers","contentBlock","ContentBlock","EncounterPicker","bodyElement","encounter","showExecuteProportion","makeBooleanRaidIconBuffInput","Tooltips.BLESSINGS_SECTION","savedEncounterManager","getSavedEncounterStorageKey","SavedEncounter","newEncounter","field","IconPicker","states","buffsChangeEmitter","newBuffs","setBuffs","RaidJsonImporter","Importer","descriptionElem","onImport","settings","RaidSimSettings","fromJsonString","ignoreUnknownFields","close","RaidJsonExporter","Exporter","JSON","stringify","RaidWCLImporter","textElem","getWCLBearerToken","token","response","fetch","method","headers","Authorization","URLSearchParams","grant_type","json","access_token","queryWCL","query","Accept","queryURL","queryCounter","res","encodeURI","result","errors","errorStr","e","message","join","Error","console","debug","parseURL","url","match","urlData","reportID","fightID","fightDataQuery","fights","reportData","report","getRateLimit","importLink","importButton","disabled","style","cursor","doImport","error","alert","removeProperty","reportDataQuery","racialSpells","professionSpells","flat","spell","externalCDSpells","samePartyHealingSpells","otherPartyHealingSpells","wclData","playerDetails","entries","wclPlayers","wclPlayer","WCLSimPlayer","inferRace","inferProfessions","inferAssignments","inferPartyComposition","getEncounterProto","getRaidProto","clearRaid","guild","combatantInfoEvents","combatantInfo","auras","ability","source","getRace","log","raceNames","get","castEventsBySpellId","bucket","reportCastEvents","abilityGameID","sourceID","race","raceToFaction","inferredProfessions","profession","professionNames","professions","distinct","getGear","getProfessionRequirements","setProfessions","fightCastEvents","targetID","applyFunc","toUnitReference","setPlayersInParty","player1","player2","reason","addPlayerInParty","healEventsBySpellId","fightHealEvents","spellEvents","spellEventsByTimestamp","timestamp","eventsAtTime","spellTargets","inferredPlayers","playersInParty","nextEmptyPartyIdx","partyMembers","numMembers","member","partyIdx","allRaidIndexes","nextIdx","idx","some","fight","EncounterProto","duration","endTime","startTime","targets","closestEncounterPreset","getAllPresetEncounters","enc","path","mob","Encounter","defaultTargetProto","MAX_NUM_PARTIES","PartyProto","players","positionInParty","wclSpec","split","fullType","foundSpec","fullTypeToSpec","getMatchingPreset","toString","EquipmentSpec","items","ItemSpec","enchant","permanentEnchant","gems","gemInfo","presetIdx","distance","presetTalents","getTalentTreePoints","newDistance","reduce","acc","v","abs","guid","UnitReference_Type","other","DeathKnightBlood","DeathKnightLichborne","DeathKnightRuneblade","DeathKnightBloodDPS","DeathKnightFrost","DeathKnightUnholy","DruidBalance","DruidFeral","DruidWarden","DruidGuardian","DruidRestoration","HunterBeastMastery","HunterSurvival","HunterMarksmanship","MageArcane","MageFire","MageFrost","PaladinHoly","PaladinJusticar","PaladinProtection","PaladinRetribution","PriestHoly","PriestDiscipline","PriestShadow","PriestSmite","RogueAssassination","RogueCombat","RogueSubtlety","ShamanElemental","ShamanEnhancement","ShamanRestoration","WarlockDestruction","WarlockAffliction","WarlockDemonology","WarriorArms","WarriorFury","WarriorChampion","WarriorWarrior","WarriorGladiator","WarriorProtection","Herbalism","Skinning","raidTarget","extraKnownIssues","SimUI","Sim","cssClass","cssScheme","launchStatus","raidSimStatus","knownIssues","emitter","recomputeSettingsLayout","setModifyRaidProto","raidProto","modifyRaidProto","loadSettings","addSidebarComponents","addTopbarComponents","addRaidTab","addSettingsTab","addDetailedResultsTab","initEventID","loadedSettings","savedSettings","window","localStorage","getItem","getSettingsStorageKey","warn","applyDefaults","jsonStr","toJsonString","setItem","raidSimResultsManager","addRaidSimAction","simHeader","addImportLink","ImportExport.RaidJsonImporter","ImportExport.RaidWCLImporter","addExportLink","ImportExport.RaidJsonExporter","simTabContentsContainer","addTab","EmbeddedDetailedResults","dispatchEvent","Event","blessingsAssignments","playerProtos","paladin","buffs","blessingOfKings","blessingOfMight","TristateEffect","TristateEffectImproved","blessingOfWisdom","blessingOfSanctuary","numActiveParties","setShowDamageMetrics","toLink","proto","protoBytes","deflated","pako","deflate","to","encoded","linkUrl","URL","location","href","hash","clear","getStorageKey","keyPart"],"mappings":"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"}