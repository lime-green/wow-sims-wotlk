import{fE as e,ey as t,ez as a,eA as i,eB as s,eC as n,e1 as l,L as r,m as o,n as d,fF as h,ev as m,E as c,ct as p,co as g,cr as u,A as f,fG as S,T as y,at as b,a2 as E,F as v,bi as O,aG as P,br as T,w as H,B as W,aH as C,K as w}from"./detailed_results-2fca7066.chunk.js";import{e as I,y as G,b as R,c as B,a as j,I as M,T as A}from"./preset_utils-c298d622.chunk.js";import{T as k}from"./totem_inputs-5182b4d5.chunk.js";const F={items:[{id:40510,enchant:3820,gems:[41401,39998]},{id:44662,gems:[40051]},{id:40513,enchant:3810,gems:[39998]},{id:44005,enchant:3831,gems:[40027]},{id:40508,enchant:2381,gems:[39998,40051]},{id:40209,enchant:2332,gems:[0]},{id:40564,enchant:3246,gems:[0]},{id:40327,gems:[39998]},{id:40512,enchant:3721,gems:[39998,40027]},{id:39734,enchant:3244},{id:40399},{id:40375},{id:37111},{id:40685},{id:40395,enchant:3834},{id:40401,enchant:1128},{id:40709}]},N={items:[{id:46201,enchant:3820,gems:[41401,40027]},{id:45443,gems:[40027]},{id:46204,enchant:3810,gems:[45883]},{id:45486,enchant:3831,gems:[40051]},{id:45867,enchant:2381,gems:[40051,39998]},{id:45460,enchant:2332,gems:[40027,0]},{id:46199,enchant:3246,gems:[40051,0]},{id:45151,gems:[39998]},{id:46202,enchant:3721,gems:[39998,40027]},{id:45615,enchant:3232,gems:[39998,40027]},{id:45614,gems:[40051]},{id:46046,gems:[40051]},{id:45535},{id:45466},{id:46017,enchant:3834},{id:45470,enchant:1128,gems:[40027]},{id:45114}]},L=I("PreRaid",{items:[{id:42555,enchant:3820,gems:[41401,40017]},{id:40681},{id:37875,enchant:3838,gems:[40017]},{id:37291,enchant:3859},{id:44180,enchant:2381},{id:37788,enchant:3758,gems:[0]},{id:37623,enchant:3604,gems:[0]},{id:40693,gems:[40051,0]},{id:37791,enchant:3721},{id:44202,enchant:3606,gems:[40105]},{id:44283},{id:37694},{id:37111},{id:37657},{id:37169,enchant:3834},{id:40700,enchant:1128},{id:40709}]}),D=I("P1 Preset",F),U=I("P2 Preset",N),x=e.create({totems:t.create({earth:a.StrengthOfEarthTotem,air:i.WrathOfAirTotem,fire:s.FlametongueTotem,water:n.HealingStreamTotem}),useEarthShield:!0,useRiptide:!0}),_={name:"Tank Healing",data:l.create({talentsString:"-30205033-05005331335010501122331251",glyphs:r.create({major1:o.GlyphOfEarthlivingWeapon,major2:o.GlyphOfEarthShield,major3:o.GlyphOfLesserHealingWave,minor2:d.GlyphOfWaterShield,minor1:d.GlyphOfRenewedLife,minor3:d.GlyphOfGhostWolf})})},K={name:"Raid Healing",data:l.create({talentsString:"-3020503-50005331335310501122331251",glyphs:r.create({major1:o.GlyphOfChainHeal,major2:o.GlyphOfEarthShield,major3:o.GlyphOfEarthlivingWeapon,minor2:d.GlyphOfWaterShield,minor1:d.GlyphOfRenewedLife,minor3:d.GlyphOfGhostWolf})})},V=h.create({shield:m.WaterShield,bloodlust:!0,earthShieldPPM:0}),z=c.create({defaultPotion:p.RunicManaInjector,flask:g.FlaskOfTheFrostWyrm,food:u.FoodFishFeast}),q=G({fieldName:"shield",values:[{value:m.NoShield,tooltip:"No Shield"},{actionId:f.fromSpellId(57960),value:m.WaterShield},{actionId:f.fromSpellId(49281),value:m.LightningShield}]}),J={inputs:[R({fieldName:"primaryHeal",label:"Primary Heal",labelTooltip:"Set to 'AutoHeal', to automatically swap based on best heal.",values:[{name:"Auto Heal",value:S.AutoHeal},{name:"Lesser Healing Wave",value:S.LesserHealingWave},{name:"Healing Wave",value:S.HealingWave},{name:"Chain Heal",value:S.ChainHeal}]}),B({fieldName:"useRiptide",label:"Use Riptide",labelTooltip:"Causes riptide to be cast on primary target when CD is available and not already on.",showWhen:e=>e.getTalents().riptide,changeEmitter:e=>y.onAny([e.specOptionsChangeEmitter,e.rotationChangeEmitter,e.talentsChangeEmitter])}),B({fieldName:"useEarthShield",label:"Use Earth Shield",labelTooltip:"Causes earth shield to be cast on healing target.",showWhen:e=>e.getTalents().earthShield,changeEmitter:e=>y.onAny([e.specOptionsChangeEmitter,e.rotationChangeEmitter,e.talentsChangeEmitter])}),j({fieldName:"earthShieldPPM",label:"Earth Shield PPM",labelTooltip:"How many times Earth Shield should be triggered per minute.",showWhen:e=>e.getTalents().earthShield&&e.getRotation().useEarthShield,changeEmitter:e=>y.onAny([e.specOptionsChangeEmitter,e.rotationChangeEmitter,e.talentsChangeEmitter])}),B({fieldName:"bloodlust",label:"Use Bloodlust",labelTooltip:"Player will cast bloodlust",getValue:e=>e.getRotation().bloodlust==b.UseBloodlust,setValue:(e,t,a)=>{const i=t.getRotation();i.bloodlust=a?b.UseBloodlust:b.NoBloodlust,t.setRotation(e,i)}})]};class Q extends M{constructor(e,t){super(e,t,{cssClass:"restoration-shaman-sim-ui",cssScheme:"shaman",knownIssues:[],warnings:[],epStats:[E.StatIntellect,E.StatSpirit,E.StatSpellPower,E.StatSpellCrit,E.StatSpellHaste,E.StatMP5],epReferenceStat:E.StatSpellPower,displayStats:[E.StatHealth,E.StatMana,E.StatStamina,E.StatIntellect,E.StatSpirit,E.StatSpellPower,E.StatSpellCrit,E.StatSpellHaste,E.StatMP5],modifyDisplayStats:e=>{let t=new v;return t=t.addStat(E.StatSpellCrit,1*e.getTalents().tidalMastery*O),{talents:t}},defaults:{gear:D.gear,epWeights:v.fromMap({[E.StatIntellect]:.22,[E.StatSpirit]:.05,[E.StatSpellPower]:1,[E.StatSpellCrit]:.67,[E.StatSpellHaste]:1.29,[E.StatMP5]:.08}),consumes:z,rotation:x,talents:K.data,specOptions:V,raidBuffs:P.create({arcaneBrilliance:!0,divineSpirit:!0,giftOfTheWild:T.TristateEffectImproved,moonkinAura:T.TristateEffectImproved,sanctifiedRetribution:!0}),partyBuffs:H.create({}),individualBuffs:W.create({blessingOfKings:!0,blessingOfWisdom:2,vampiricTouch:!0}),debuffs:C.create({faerieFire:T.TristateEffectImproved,judgementOfWisdom:!0,misery:!0,curseOfElements:!0,shadowMastery:!0})},playerIconInputs:[q],rotationInputs:J,includeBuffDebuffInputs:[],excludeBuffDebuffInputs:[],otherInputs:{inputs:[A]},customSections:[k],encounterPicker:{showExecuteProportion:!1},presets:{talents:[K,_],gear:[L,D,U]},autoRotation:e=>w.create()})}}export{x as D,D as P,Q as R,K as a,V as b,z as c,U as d};
//# sourceMappingURL=sim-df3fa02e.chunk.js.map
