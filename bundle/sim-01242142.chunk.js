import{aU as e,f_ as t,f$ as a,fk as s,g0 as l,e1 as n,L as i,p as o,q as r,g1 as d,fb as c,E as p,co as h,cr as m,ct as u,A as g,T as I,g2 as S,a2 as v,ab as f,F as T,a5 as E,aG as b,br as A,w,B as C,aH as y,bt as O,$ as R}from"./detailed_results-2fca7066.chunk.js";import{e as G,f as x,m as k,a as P,l as M,y as N,c as W,b as B,d as D,o as H,I as U,T as q,x as F}from"./preset_utils-c298d622.chunk.js";const V={items:[{id:40528,enchant:3817,gems:[41398,42153]},{id:44664,gems:[39996]},{id:40530,enchant:3808,gems:[40038]},{id:40403,enchant:3605},{id:40539,enchant:3832,gems:[42153]},{id:40330,enchant:3845,gems:[40002,0]},{id:40541,enchant:3604,gems:[0]},{id:40205,gems:[42153]},{id:40318,enchant:3823,gems:[49110,40038]},{id:40591,enchant:3606},{id:43993,gems:[40002]},{id:40474},{id:42987},{id:40256},{id:40384,enchant:3789},{},{id:40385}]},L={items:[{id:46151,enchant:3817,gems:[41398,42142]},{id:45459,gems:[40002]},{id:46149,enchant:3808,gems:[42153]},{id:46032,enchant:3605,gems:[39996,40037]},{id:46146,enchant:3832,gems:[42153,39996]},{id:45663,enchant:3845,gems:[39996,0]},{id:46148,enchant:3604,gems:[40037,0]},{id:45241,gems:[49110,40037,39996]},{id:45536,enchant:3823,gems:[39996,39996,39996]},{id:45599,enchant:3606,gems:[40002,40002]},{id:45608,gems:[39996]},{id:46322,gems:[39996]},{id:46038},{id:45931},{id:45533,enchant:3789,gems:[39996,39996]},{},{id:45296,gems:[39996]}]},j={items:[{id:49478,enchant:3817,gems:[41398,40117]},{id:47915,gems:[40117]},{id:48381,enchant:3808,gems:[42142]},{id:47545,enchant:3605,gems:[40117]},{id:48385,enchant:3832,gems:[42142,42142]},{id:47074,enchant:3845,gems:[40143,0]},{id:47240,enchant:3604,gems:[49110,40117,0]},{id:47153,gems:[40143,40117,40117]},{id:47191,enchant:3823,gems:[40117,40117,40117]},{id:47077,enchant:3606,gems:[40143,40117]},{id:47934,gems:[40142]},{id:45608,gems:[40117]},{id:47131},{id:46038},{id:47078,enchant:3789,gems:[40117,40117]},{},{id:45296,gems:[40117]}]},z={items:[{id:48383,enchant:3817,gems:[41398,40117]},{id:47915,gems:[40117]},{id:48381,enchant:3808,gems:[42153]},{id:47545,enchant:3605,gems:[40117]},{id:48385,enchant:3832,gems:[42153,42153]},{id:47074,enchant:3845,gems:[40117,0]},{id:47240,enchant:3604,gems:[49110,40117,0]},{id:47153,gems:[40117,40117,40117]},{id:48382,enchant:3823,gems:[40142,40117]},{id:47077,enchant:3606,gems:[40117,40117]},{id:47934,gems:[40117]},{id:45608,gems:[40117]},{id:46038},{id:47131},{id:47078,enchant:3789,gems:[40117,40117]},{},{id:46995,gems:[40117]}]},J={items:[{id:49478,enchant:3817,gems:[41398,40111]},{id:45459,gems:[40111]},{id:48400,enchant:3808,gems:[42153]},{id:47546,enchant:3605,gems:[40111]},{id:48396,enchant:3832,gems:[42153,42153]},{id:47442,enchant:3845,gems:[40143,0]},{id:47492,enchant:3604,gems:[49110,40117,0]},{id:47472,gems:[40143,40117,40117]},{id:47480,enchant:3823,gems:[40117,40117,40117]},{id:47445,enchant:3606,gems:[40143,40117]},{id:48007,gems:[40143]},{id:45608,gems:[40117]},{id:47464},{id:46038},{id:47446,enchant:3789,gems:[40111,40111]},{},{id:47428,gems:[40111]}]},K={items:[{id:48398,enchant:3817,gems:[41398,40117]},{id:47988,gems:[40117]},{id:48400,enchant:3808,gems:[42153]},{id:47546,enchant:3605,gems:[40117]},{id:48396,enchant:3832,gems:[42153,42153]},{id:47442,enchant:3845,gems:[40117,0]},{id:47492,enchant:3604,gems:[49110,40117,0]},{id:47472,gems:[40117,40117,40117]},{id:48399,enchant:3823,gems:[40142,40117]},{id:47445,enchant:3606,gems:[40117,40117]},{id:48007,gems:[40117]},{id:45608,gems:[40117]},{id:46038},{id:47464},{id:47446,enchant:3789,gems:[40117,40117]},{},{id:47428,gems:[40117]}]},Y={items:[{id:41386,enchant:3817,gems:[41398,42702]},{id:42645,gems:[40003]},{id:44195,enchant:3808},{id:37647,enchant:3605},{id:39606,enchant:3832,gems:[40003,40003]},{id:44203,enchant:3845,gems:[0]},{id:39609,enchant:3604,gems:[40037,0]},{id:40694,gems:[42149,42149]},{id:44205,enchant:3823},{id:44306,enchant:3606,gems:[40037,40037]},{id:42642,gems:[42149]},{id:37642},{id:42987},{id:40684},{id:37852,enchant:3789},{id:37852,enchant:3789},{id:37191}]},_={items:[{id:44006,enchant:3817,gems:[41285,42702]},{id:44664,gems:[39996]},{id:40530,enchant:3808,gems:[40037]},{id:40403,enchant:3605},{id:40539,enchant:3832,gems:[42142]},{id:39765,enchant:3845,gems:[39996,0]},{id:40541,enchant:3604,gems:[0]},{id:40205,gems:[42142]},{id:40529,enchant:3823,gems:[39996,40022]},{id:40591,enchant:3606},{id:43993,gems:[42142]},{id:40717},{id:42987},{id:40256},{id:40384,enchant:3789},{id:40384,enchant:3789},{id:40385}]},$={items:[{id:46151,enchant:3817,gems:[41398,39996]},{id:45517,gems:[39996]},{id:46149,enchant:3808,gems:[39996]},{id:46032,enchant:3605,gems:[39996,40037]},{id:46146,enchant:3832,gems:[39996,42702]},{id:45611,enchant:3845,gems:[40037,0]},{id:46148,enchant:3604,gems:[40058]},{id:46095,gems:[42154,42142,42142]},{id:45536,enchant:3823,gems:[39996,39996,39996]},{id:40591,enchant:3606},{id:45608,gems:[39996]},{id:45534,gems:[39996]},{id:42987},{id:45931},{id:45516,enchant:3789,gems:[39996,39996]},{id:45516,enchant:3789,gems:[39996,39996]},{id:45296,gems:[39996]}]},Q={items:[{id:48383,enchant:3817,gems:[41398,49110]},{id:47060,gems:[40117]},{id:48381,enchant:3808,gems:[40111]},{id:47545,enchant:3831,gems:[40111]},{id:48385,enchant:3832,gems:[40117,40117]},{id:47074,enchant:3845,gems:[40143,0]},{id:47240,enchant:3604,gems:[40111,40111,0]},{id:47002,gems:[40143,40143,40111]},{id:48382,enchant:3823,gems:[40142,40117]},{id:47154,enchant:3606,gems:[40142,40117]},{id:46966,gems:[40143]},{id:47075,gems:[40111]},{id:45931},{id:47131},{id:47078,enchant:3789,gems:[42142,40111]},{id:47078,enchant:3789,gems:[42142,42142]},{id:46995,gems:[40111]}]},X={items:[{id:48398,enchant:3817,gems:[41398,49110]},{id:47433,gems:[40111]},{id:48400,enchant:3808,gems:[40117]},{id:47546,enchant:3831,gems:[40111]},{id:48396,enchant:3832,gems:[40111,40111]},{id:47414,enchant:3845,gems:[40142,0]},{id:47240,enchant:3604,gems:[40111,40111,0]},{id:47429,gems:[40142,40142,42142]},{id:48399,enchant:3823,gems:[40142,40111]},{id:47445,enchant:3606,gems:[40142,45862]},{id:47413,gems:[40142]},{id:47443,gems:[40111]},{id:45931},{id:47464},{id:47446,enchant:3789,gems:[40117,40117]},{id:47446,enchant:3789,gems:[42142,42142]},{id:47428,gems:[40117]}]},Z={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:2458}}},doAtValue:{const:{val:"-20s"}}},{action:{castSpell:{spellId:{spellId:2687}}},doAtValue:{const:{val:"-10s"}}},{action:{castSpell:{spellId:{spellId:18499}}},doAtValue:{const:{val:"-5s"}}},{action:{castSpell:{spellId:{spellId:1719}}},doAtValue:{const:{val:"-3s"}}},{action:{castSpell:{spellId:{spellId:12292}}},doAtValue:{const:{val:"-1.5s"}}},{action:{castSpell:{spellId:{itemId:40211}}},doAtValue:{const:{val:"-0.5s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{and:{vals:[{auraIsActive:{auraId:{spellId:2458}}},{cmp:{op:"OpLe",lhs:{currentRage:{}},rhs:{const:{val:"20"}}}}]}},castSpell:{spellId:{spellId:2687}}}},{hide:!0,action:{condition:{and:{vals:[{cmp:{op:"OpLt",lhs:{auraNumStacks:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:47467}}},rhs:{const:{val:"5"}}}},{not:{val:{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:8647}}}}}]}},castSpell:{spellId:{spellId:47467}}}},{hide:!0,action:{condition:{auraShouldRefresh:{auraId:{spellId:47467},maxOverlap:{const:{val:"3s"}}}},castSpell:{spellId:{spellId:47467}}}},{action:{condition:{auraIsActive:{auraId:{spellId:12292}}},castSpell:{spellId:{itemId:40211}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"12"}}}},{cmp:{op:"OpGt",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}}]}},castSpell:{spellId:{spellId:47520,tag:1}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"12"}}}},{cmp:{op:"OpEq",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}}]}},castSpell:{spellId:{spellId:47450,tag:1}}}},{action:{condition:{cmp:{op:"OpGt",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}},castSpell:{spellId:{spellId:1680}}}},{action:{castSpell:{spellId:{spellId:23881}}}},{action:{castSpell:{spellId:{spellId:1680}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpGe",lhs:{currentTime:{}},rhs:{const:{val:"6s"}}}},{cmp:{op:"OpGe",lhs:{autoTimeToNext:{}},rhs:{const:{val:"1s"}}}}]}},castSpell:{spellId:{spellId:64382}}}},{action:{condition:{or:{vals:[{auraIsActive:{auraId:{spellId:70847}}},{auraIsActive:{auraId:{spellId:46916}}}]}},castSpell:{spellId:{spellId:47475}}}},{hide:!0,action:{condition:{auraShouldRefresh:{auraId:{spellId:47467},maxOverlap:{const:{val:"8s"}}}},castSpell:{spellId:{spellId:47467}}}},{action:{condition:{isExecutePhase:{threshold:"E20"}},castSpell:{spellId:{spellId:47471}}}},{action:{condition:{and:{vals:[{gcdIsReady:{}},{not:{val:{dotIsActive:{spellId:{spellId:47465}}}}},{not:{val:{spellIsReady:{spellId:{spellId:1680}}}}},{not:{val:{spellIsReady:{spellId:{spellId:23881}}}}},{cmp:{op:"OpEq",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}}]}},strictSequence:{actions:[{castSpell:{spellId:{spellId:2457}}},{castSpell:{spellId:{spellId:47465}}},{castSpell:{spellId:{spellId:2458}}}]}}},{action:{condition:{and:{vals:[{gcdIsReady:{}},{auraIsActive:{auraId:{spellId:68051}}},{not:{val:{spellIsReady:{spellId:{spellId:1680}}}}},{not:{val:{spellIsReady:{spellId:{spellId:23881}}}}},{cmp:{op:"OpEq",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}}]}},strictSequence:{actions:[{castSpell:{spellId:{spellId:2457}}},{castSpell:{spellId:{spellId:7384}}},{castSpell:{spellId:{spellId:2458}}}]}}},{action:{condition:{cmp:{op:"OpGe",lhs:{autoTimeToNext:{}},rhs:{const:{val:"1s"}}}},castSpell:{spellId:{spellId:57755}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:2458}}}}},castSpell:{spellId:{spellId:2458}}}}]},ee={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:2458}}},doAtValue:{const:{val:"-20s"}}},{action:{castSpell:{spellId:{spellId:2687}}},doAtValue:{const:{val:"-10s"}}},{action:{castSpell:{spellId:{spellId:18499}}},doAtValue:{const:{val:"-5s"}}},{action:{castSpell:{spellId:{spellId:1719}}},doAtValue:{const:{val:"-3s"}}},{action:{castSpell:{spellId:{spellId:12292}}},doAtValue:{const:{val:"-1.5s"}}},{action:{castSpell:{spellId:{itemId:40211}}},doAtValue:{const:{val:"-0.5s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{and:{vals:[{auraIsActive:{auraId:{spellId:2458}}},{cmp:{op:"OpLe",lhs:{currentRage:{}},rhs:{const:{val:"20"}}}}]}},castSpell:{spellId:{spellId:2687}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLt",lhs:{auraNumStacks:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:47467}}},rhs:{const:{val:"5"}}}},{not:{val:{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:8647}}}}}]}},castSpell:{spellId:{spellId:47467}}}},{action:{condition:{auraShouldRefresh:{auraId:{spellId:47467},maxOverlap:{const:{val:"3s"}}}},castSpell:{spellId:{spellId:47467}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentTime:{}},rhs:{const:{val:"6s"}}}},castSpell:{spellId:{spellId:64382}}}},{action:{condition:{auraIsActive:{auraId:{spellId:12292}}},castSpell:{spellId:{itemId:40211}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"12"}}}},{cmp:{op:"OpGt",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}}]}},castSpell:{spellId:{spellId:47520,tag:1}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"12"}}}},{cmp:{op:"OpEq",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}}]}},castSpell:{spellId:{spellId:47450,tag:1}}}},{action:{condition:{cmp:{op:"OpGt",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}},castSpell:{spellId:{spellId:1680}}}},{action:{castSpell:{spellId:{spellId:23881}}}},{action:{castSpell:{spellId:{spellId:1680}}}},{action:{condition:{or:{vals:[{auraIsActive:{auraId:{spellId:70847}}},{auraIsActive:{auraId:{spellId:46916}}}]}},castSpell:{spellId:{spellId:47475}}}},{action:{condition:{auraShouldRefresh:{auraId:{spellId:47467},maxOverlap:{const:{val:"8s"}}}},castSpell:{spellId:{spellId:47467}}}},{action:{condition:{isExecutePhase:{threshold:"E20"}},castSpell:{spellId:{spellId:47471}}}},{action:{condition:{and:{vals:[{gcdIsReady:{}},{not:{val:{dotIsActive:{spellId:{spellId:47465}}}}},{not:{val:{spellIsReady:{spellId:{spellId:1680}}}}},{not:{val:{spellIsReady:{spellId:{spellId:23881}}}}},{cmp:{op:"OpEq",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}}]}},strictSequence:{actions:[{castSpell:{spellId:{spellId:2457}}},{castSpell:{spellId:{spellId:47465}}},{castSpell:{spellId:{spellId:2458}}}]}}},{action:{condition:{and:{vals:[{gcdIsReady:{}},{auraIsActive:{auraId:{spellId:68051}}},{not:{val:{spellIsReady:{spellId:{spellId:1680}}}}},{not:{val:{spellIsReady:{spellId:{spellId:23881}}}}},{cmp:{op:"OpEq",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}}]}},strictSequence:{actions:[{castSpell:{spellId:{spellId:2457}}},{castSpell:{spellId:{spellId:7384}}},{castSpell:{spellId:{spellId:2458}}}]}}},{action:{condition:{cmp:{op:"OpGe",lhs:{autoTimeToNext:{}},rhs:{const:{val:"1s"}}}},castSpell:{spellId:{spellId:57755}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:2458}}}}},castSpell:{spellId:{spellId:2458}}}}]},te={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:2687}}},doAtValue:{const:{val:"-10s"}}},{action:{castSpell:{spellId:{spellId:1719}}},doAtValue:{const:{val:"-3s"}}},{action:{castSpell:{spellId:{spellId:2457}}},doAtValue:{const:{val:"-2s"}}},{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-0.1s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{cmp:{op:"OpLt",lhs:{currentRage:{}},rhs:{const:{val:"20"}}}},castSpell:{spellId:{spellId:2687}}}},{action:{condition:{isExecutePhase:{threshold:"E20"}},castSpell:{spellId:{otherId:"OtherActionPotion"}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"35"}}}},{cmp:{op:"OpLe",lhs:{autoTimeToNext:{}},rhs:{const:{val:"1ms"}}}},{cmp:{op:"OpGt",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}}]}},castSpell:{spellId:{spellId:47520,tag:1}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"40"}}}},{cmp:{op:"OpLe",lhs:{autoTimeToNext:{}},rhs:{const:{val:"1ms"}}}},{cmp:{op:"OpEq",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}}]}},castSpell:{spellId:{spellId:47450,tag:1}}}},{hide:!0,action:{condition:{and:{vals:[{cmp:{op:"OpLt",lhs:{auraNumStacks:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:47467}}},rhs:{const:{val:"5"}}}},{not:{val:{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:8647}}}}}]}},castSpell:{spellId:{spellId:47467}}}},{hide:!0,action:{condition:{auraShouldRefresh:{auraId:{spellId:47467},maxOverlap:{const:{val:"3s"}}}},castSpell:{spellId:{spellId:47467}}}},{action:{condition:{and:{vals:[{not:{val:{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:47465}}}}},{cmp:{op:"OpGt",lhs:{remainingTime:{}},rhs:{const:{val:"7s"}}}}]}},castSpell:{spellId:{spellId:47465}}}},{action:{condition:{auraIsActive:{auraId:{spellId:68051}}},castSpell:{spellId:{spellId:7384}}}},{action:{condition:{cmp:{op:"OpGt",lhs:{currentTime:{}},rhs:{const:{val:"3.5s"}}}},castSpell:{spellId:{spellId:46924}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"30"}}}},castSpell:{spellId:{spellId:47486}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"15"}}}},castSpell:{spellId:{spellId:47471}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"15"}}}},{cmp:{op:"OpGt",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}}]}},castSpell:{spellId:{spellId:47502}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"15"}}}},castSpell:{spellId:{spellId:47475}}}}]},ae=G("Preraid Arms",{items:[{id:41386,enchant:3817,gems:[41285,42702]},{id:42645,gems:[40002]},{id:44195,enchant:3808},{id:37647,enchant:3605},{id:39606,enchant:3832,gems:[40002,40002]},{id:41355,enchant:3845,gems:[0]},{id:39609,enchant:3604,gems:[40037,0]},{id:40694,gems:[42149,42149]},{id:37193,enchant:3823,gems:[40002,40037]},{id:44306,enchant:3606,gems:[40086,40002]},{id:42642,gems:[42149]},{id:37642},{id:42987},{id:40684},{id:37852,enchant:3789},{},{id:37191}]},{talentTree:0}),se=G("P1 Arms",V,{talentTree:0}),le=G("P2 Arms",L,{talentTree:0}),ne=G("P2 Arms 2p [A]",j,{talentTree:0,faction:e.Alliance}),ie=G("P2 Arms 4p [A]",z,{talentTree:0,faction:e.Alliance}),oe=G("P2 Arms 2p [H]",J,{talentTree:0,faction:e.Horde}),re=G("P2 Arms 4p [H]",K,{talentTree:0,faction:e.Horde}),de=G("Preraid Fury",Y,{talentTrees:[1,2]}),ce=G("P1 Fury",_,{talentTrees:[1,2]}),pe=G("P2 Fury",$,{talentTrees:[1,2]}),he=G("P3 Fury [A]",Q,{talentTrees:[1,2],faction:e.Alliance}),me=G("P3 Fury [H]",X,{talentTrees:[1,2],faction:e.Horde}),ue=t.create({useRend:!0,useCleave:!1,useOverpower:!1,executePhaseOverpower:!1,mainGcd:a.Bloodthirst,sunderArmor:s.SunderArmorMaintain,hsRageThreshold:12,rendHealthThresholdAbove:20,rendRageThresholdBelow:100,slamRageThreshold:25,rendCdThreshold:0,useHsDuringExecute:!0,useBtDuringExecute:!0,useWwDuringExecute:!0,useSlamOverExecute:!0,stanceOption:l.DefaultStance}),ge=t.create({useRend:!0,useMs:!0,useCleave:!1,sunderArmor:s.SunderArmorMaintain,msRageThreshold:30,slamRageThreshold:25,hsRageThreshold:50,rendCdThreshold:0,rendHealthThresholdAbove:100,useHsDuringExecute:!0,spamExecute:!0,stanceOption:l.DefaultStance}),Ie=x("Fury",Z,{talentTree:1}),Se=x("Fury + Sunder",ee,{talentTree:1}),ve=x("Arms",te,{talentTree:0}),fe={name:"Arms",data:n.create({talentsString:"3022032023335100102012213231251-305-2033",glyphs:i.create({major1:o.GlyphOfRending,major2:o.GlyphOfMortalStrike,major3:o.GlyphOfExecution,minor1:r.GlyphOfThunderClap,minor2:r.GlyphOfCommand,minor3:r.GlyphOfShatteringThrow})})},Te={name:"Fury",data:n.create({talentsString:"32002301233-305053000520310053120500351",glyphs:i.create({major1:o.GlyphOfWhirlwind,major2:o.GlyphOfHeroicStrike,major3:o.GlyphOfExecution,minor1:r.GlyphOfCommand,minor2:r.GlyphOfShatteringThrow,minor3:r.GlyphOfCharge})})},Ee=d.create({startingRage:0,useRecklessness:!0,useShatteringThrow:!0,disableExpertiseGemming:!1,shout:c.WarriorShoutCommanding}),be=p.create({flask:h.FlaskOfEndlessRage,food:m.FoodSpicedWormBurger,defaultPotion:u.IndestructiblePotion,prepopPotion:u.PotionOfSpeed}),Ae=k({fieldName:"useRecklessness",id:g.fromSpellId(1719)}),we=k({fieldName:"useShatteringThrow",id:g.fromSpellId(64382)}),Ce=P({fieldName:"startingRage",label:"Starting Rage",labelTooltip:"Initial rage at the start of each iteration."}),ye=M({fieldName:"stanceSnapshot",label:"Stance Snapshot",labelTooltip:"Ability that is cast at the same time as stance swap will benefit from the bonus of the stance before the swap."}),Oe=M({fieldName:"disableExpertiseGemming",label:"Disable expertise gemming",labelTooltip:"Disables auto gemming for expertise"}),Re=N({fieldName:"shout",values:[{color:"c79c6e",value:c.WarriorShoutNone},{actionId:g.fromSpellId(2048),value:c.WarriorShoutBattle},{actionId:g.fromSpellId(469),value:c.WarriorShoutCommanding}]}),Ge={inputs:[W({fieldName:"useMs",label:"Use Mortal Strike",labelTooltip:"Use Mortal Strike when rage threshold is met.",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>0==e.getTalentTree()&&!e.getRotation().customRotationOption}),W({fieldName:"useCleave",label:"Use Cleave",labelTooltip:"Use Cleave instead of Heroic Strike.",showWhen:e=>!e.getRotation().customRotationOption}),W({fieldName:"useRend",label:"Use Rend",labelTooltip:"Use Rend when rage threshold is met and the debuff duration is less than refresh time.",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>!e.getRotation().customRotationOption}),W({fieldName:"useOverpower",label:"Use Overpower",labelTooltip:"Use Overpower whenever it is available on an open GCD.",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>1==e.getTalentTree()&&!e.getRotation().customRotationOption}),B({fieldName:"mainGcd",label:"Main GCD",labelTooltip:"Main GCD ability that will be prioritized above other abilities.",values:[{name:"Slam",value:a.Slam},{name:"Bloodthirst",value:a.Bloodthirst},{name:"Whirlwind",value:a.Whirlwind}],changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>1==e.getTalentTree()&&!e.getRotation().customRotationOption}),D({fieldName:"msRageThreshold",label:"Mortal Strike rage threshold",labelTooltip:"Mortal Strike when rage is above:",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>(e.getRotation().useMs||e.getRotation().customRotationOption)&&0==e.getTalentTree()}),D({fieldName:"slamRageThreshold",label:"Slam rage threshold",labelTooltip:"Slam when rage is above:",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>(e.getRotation().useMs||e.getRotation().customRotationOption)&&0==e.getTalentTree()}),D({fieldName:"bloodsurgeDurationThreshold",label:"Exp Slam: Bloodsurge duration threshold (s)",labelTooltip:"Cast Exp Slam when Bloodsurge duration is below (seconds):",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>e.getRotation().customRotationOption&&1==e.getTalentTree()}),D({fieldName:"hsRageThreshold",label:"HS rage threshold",labelTooltip:"Heroic Strike when rage is above:"}),D({fieldName:"rendHealthThresholdAbove",label:"Rend health threshold (%)",labelTooltip:"Rend will only be used when boss health is above this value in %.",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>1==e.getRotation().useRend||e.getRotation().customRotationOption}),D({fieldName:"rendRageThresholdBelow",label:"Rend rage threshold below",labelTooltip:"Rend will only be used when rage is smaller than this value.",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>(1==e.getRotation().useRend||e.getRotation().customRotationOption)&&1==e.getTalentTree()}),D({fieldName:"rendCdThreshold",label:"Rend Refresh Time (s)",labelTooltip:"Refresh Rend when the remaining duration is less than this amount of time (seconds).",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>1==e.getRotation().useRend||e.getRotation().customRotationOption}),W({fieldName:"useHsDuringExecute",label:"HS during Execute Phase",labelTooltip:"Use Heroic Strike during Execute Phase."}),W({fieldName:"useBtDuringExecute",label:"BT during Execute Phase",labelTooltip:"Use Bloodthirst during Execute Phase.",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>1==e.getTalentTree()}),W({fieldName:"useWwDuringExecute",label:"WW during Execute Phase",labelTooltip:"Use Whirlwind during Execute Phase.",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>1==e.getTalentTree()}),W({fieldName:"useSlamOverExecute",label:"Slam during Execute Phase",labelTooltip:"Use Slam Over Execute when Bloodsurge Procs in Execute Phase.",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>1==e.getTalentTree()}),W({fieldName:"executePhaseOverpower",label:"Overpower in Execute Phase",labelTooltip:"Use Overpower instead of Execute whenever it is available.",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>(1==e.getRotation().useOverpower||e.getRotation().customRotationOption)&&1==e.getTalentTree()}),W({fieldName:"spamExecute",label:"Spam Execute",labelTooltip:"Use Execute whenever possible during Execute Phase.",changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter]),showWhen:e=>0==e.getTalentTree()}),B({fieldName:"sunderArmor",label:"Sunder Armor",values:[{name:"Never",value:s.SunderArmorNone},{name:"Help Stack",value:s.SunderArmorHelpStack},{name:"Maintain Debuff",value:s.SunderArmorMaintain}]}),B({fieldName:"stanceOption",label:"Stance Option",labelTooltip:"Stance to stay on. The default for Fury (Bloodthirst) is Berserker Stance and Battle Stance for everything else.",values:[{name:"Default",value:l.DefaultStance},{name:"Battle Stance",value:l.BattleStance},{name:"Berserker Stance",value:l.BerserkerStance}]}),W({fieldName:"maintainDemoShout",label:"Maintain Demo Shout",labelTooltip:"Keep Demo Shout active on the primary target."}),W({fieldName:"maintainThunderClap",label:"Maintain Thunder Clap",labelTooltip:"Keep Thunder Clap active on the primary target."}),W({fieldName:"customRotationOption",label:"Custom Rotation (Advanced)",labelTooltip:"Create your own rotation action priority list.",showWhen:e=>e.sim.getShowExperimental(),changeEmitter:e=>I.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),H({fieldName:"customRotation",numColumns:3,showWhen:e=>e.getRotation().customRotationOption&&e.sim.getShowExperimental(),values:[{actionId:g.fromSpellId(23881),value:S.BloodthirstCustom},{actionId:g.fromSpellId(1680),value:S.WhirlwindCustom},{actionId:g.fromSpellId(47475),value:S.SlamCustom},{actionId:g.fromSpellId(47475),value:S.SlamExpiring,text:"Exp",showWhen:e=>1==e.getTalentTree()},{actionId:g.fromSpellId(47486),value:S.MortalStrike},{actionId:g.fromSpellId(47465),value:S.Rend},{actionId:g.fromSpellId(7384),value:S.Overpower},{actionId:g.fromSpellId(47471),value:S.Execute},{actionId:g.fromSpellId(47502),value:S.ThunderClap}]})]};class xe extends U{constructor(e,t){super(e,t,{cssClass:"warrior-sim-ui",cssScheme:"warrior",knownIssues:[],epStats:[v.StatStrength,v.StatAgility,v.StatAttackPower,v.StatExpertise,v.StatMeleeHit,v.StatMeleeCrit,v.StatMeleeHaste,v.StatArmorPenetration,v.StatArmor],epPseudoStats:[f.PseudoStatMainHandDps,f.PseudoStatOffHandDps],epReferenceStat:v.StatAttackPower,displayStats:[v.StatHealth,v.StatStamina,v.StatStrength,v.StatAgility,v.StatAttackPower,v.StatExpertise,v.StatMeleeHit,v.StatMeleeCrit,v.StatMeleeHaste,v.StatArmorPenetration,v.StatArmor],modifyDisplayStats:e=>{let t=new T;return e.getInFrontOfTarget()||(t=t.addStat(v.StatExpertise,4*e.getTalents().weaponMastery*E)),{talents:t}},defaults:{gear:he.gear,epWeights:T.fromMap({[v.StatStrength]:2.72,[v.StatAgility]:1.82,[v.StatAttackPower]:1,[v.StatExpertise]:2.55,[v.StatMeleeHit]:.79,[v.StatMeleeCrit]:2.12,[v.StatMeleeHaste]:1.72,[v.StatArmorPenetration]:2.17,[v.StatArmor]:.03},{[f.PseudoStatMainHandDps]:6.29,[f.PseudoStatOffHandDps]:3.58}),consumes:be,rotation:ue,talents:Te.data,specOptions:Ee,raidBuffs:b.create({giftOfTheWild:A.TristateEffectImproved,swiftRetribution:!0,strengthOfEarthTotem:A.TristateEffectImproved,icyTalons:!0,abominationsMight:!0,leaderOfThePack:A.TristateEffectRegular,sanctifiedRetribution:!0,bloodlust:!0,devotionAura:A.TristateEffectImproved,stoneskinTotem:A.TristateEffectImproved}),partyBuffs:w.create({heroicPresence:!1}),individualBuffs:C.create({blessingOfKings:!0,blessingOfMight:A.TristateEffectImproved}),debuffs:y.create({bloodFrenzy:!0,heartOfTheCrusader:!0,mangle:!0,sunderArmor:!0,curseOfWeakness:A.TristateEffectRegular,faerieFire:A.TristateEffectImproved})},playerIconInputs:[Re,Ae,we],rotationInputs:Ge,includeBuffDebuffInputs:[],excludeBuffDebuffInputs:[],otherInputs:{inputs:[Ce,ye,Oe,q,F]},encounterPicker:{showExecuteProportion:!0},presets:{talents:[fe,Te],rotations:[Ie,Se,ve],gear:[de,ce,pe,he,me,ae,se,le,ne,ie,oe,re]}}),this.addOptimizeGemsAction()}addOptimizeGemsAction(){this.addAction("Suggest Gems","optimize-gems-action",(async()=>{this.optimizeGems()}))}async optimizeGems(){let e=this.player.getGear().withoutGems();e=e.withMetaGem(this.sim.db.lookupGem(41398));const t=this.player.getEpWeights(),a=this.findTearSlot(e,t);e=this.socketTear(e,a),await this.updateGear(e);const s=this.findSocketsByColor(e,t,O.GemColorRed,a),l=new Array;l.push([40117,this.calcArpCap(e)]);const n=!this.player.getSpecOptions().disableExpertiseGemming,i=this.calcExpCap();n&&l.push([40118,i]);const o=this.calcCritCap(e);l.push([40111,new T]);let r=0;this.player.hasProfession(R.Jewelcrafting)&&(e=this.optimizeJcGems(e,s),r=3),e=await this.fillGemsToCaps(e,s,l,0,r);const d=this.findSocketsByColor(e,t,O.GemColorYellow,a),c=new Array,p=(new T).withStat(v.StatMeleeHit,266.32);c.push([40125,p]),n&&(c.push([40162,p.add(i)]),c.push([40118,i])),c.push([40143,p]),c.push([40142,o]),await this.fillGemsToCaps(e,d,c,0,0)}calcExpCap(){let e=217.135;const t=this.player.getTalents().weaponMastery;return!!t&&(e-=4*t*E),(new T).withStat(v.StatExpertise,e)}calcArpCap(e){let t=1404;return e.hasTrinket(45931)?t=659:e.hasTrinket(40256)&&(t=798),(new T).withStat(v.StatArmorPenetration,t)}calcArpTarget(e){return e.hasTrinket(45931)?648:e.hasTrinket(40256)?787:1399}calcCritCap(e){let t=0;return e.hasRelic(47668)&&(t+=200),e.hasRelic(50456)&&(t+=220),(e.hasTrinket(47131)||e.hasTrinket(47464))&&(t+=510),(e.hasTrinket(47115)||e.hasTrinket(47303))&&(t+=450),(e.hasTrinket(44253)||e.hasTrinket(42987))&&(t+=300),(new T).withStat(v.StatMeleeCrit,45.91*(77.8-1.1*t*1.06*1.02/83.33))}async updateGear(e){return this.player.setGear(I.nextEventID(),e),await this.sim.updateCharacterStats(I.nextEventID()),T.fromProto(this.player.getCurrentStats().finalStats)}findTearSlot(e,t){let a=null,s=1e-8;for(var l of e.getItemSlots()){const n=e.getEquippedItem(l);if(!n)continue;if(1!=n.numSocketsOfColor(O.GemColorBlue))continue;const i=new T(n.item.socketBonus).computeEP(t);i>s&&(a=l,s=i)}return a}socketTear(e,t){if(null!=t){const a=e.getEquippedItem(t);for(const[s,l]of a.allSocketColors().entries())if(l==O.GemColorBlue)return e.withEquippedItem(t,a.withGem(this.sim.db.lookupGem(49110),s),!0)}return e}findSocketsByColor(e,t,a,s){const l=new Array,n=this.player.isBlacksmithing();for(var i of e.getItemSlots()){const o=e.getEquippedItem(i);if(!o)continue;const r=o.numSocketsOfColor(O.GemColorBlue)>0&&i!=s;for(const[e,s]of o.curSocketColors(n).entries()){if(o.hasSocketedGem(e))continue;let n=!1;s!=O.GemColorYellow||r||(n=new T(o.item.socketBonus).computeEP(t)>1e-8),(a==O.GemColorYellow&&n||a==O.GemColorRed&&!n)&&l.push([i,e])}}return l}async fillGemsToCaps(e,t,a,s,l){let n=e;const i=this.sim.db.lookupGem(a[s][0]);if(0==s)for(const[u,g]of t.slice(l))n=n.withGem(u,g,i);let o=await this.updateGear(n);const r=a[s][1];if(o.belowCaps(r)||s==a.length-1)return n;const d=this.sim.db.lookupGem(a[s+1][0]),c=a[s+1][1];let p=r;s>0&&!r.equals(c)&&(p=r.subtract(c));for(var h=t.length-1;h>=l&&!o.belowCaps(p);h--){const[e,a]=t[h];n=n.withGem(e,a,d),o=await this.updateGear(n)}let m=h+1;return o.belowCaps(r)||(m=l),await this.fillGemsToCaps(n,t,a,s+1,m)}calcDistanceToArpTarget(e,t,a,s,l){const n=t+34*e+20*Math.max(0,Math.min(a-3,Math.floor((s-t-34*e)/20)));return Math.abs(n-l)}optimizeJcGems(e,t){const a=T.fromProto(this.player.getCurrentStats().finalStats).getStat(v.StatArmorPenetration),s=t.length,l=this.calcArpCap(e).getStat(v.StatArmorPenetration),n=this.calcArpTarget(e);let i=0,o=this.calcDistanceToArpTarget(0,a,s,l,n);for(let d=1;d<=3;d++){const e=this.calcDistanceToArpTarget(d,a,s,l,n);e<o&&(i=d,o=e)}let r=e;for(let d=0;d<3;d++){let e=42142;d<i&&(e=42153),r=r.withGem(t[d][0],t[d][1],this.sim.db.lookupGem(e))}return r}}export{ge as A,Ee as D,Te as F,se as P,xe as W,fe as a,be as b,le as c,ie as d,re as e,ue as f,ce as g,pe as h,he as i,me as j};
//# sourceMappingURL=sim-01242142.chunk.js.map
