{"version":3,"file":"sim-8e3da9f1.chunk.js","sources":["../../../ui/smite_priest/presets.ts","../../../ui/smite_priest/inputs.ts","../../../ui/smite_priest/sim.ts"],"sourcesContent":["import {\n\tConsumes,\n\tDebuffs,\n\tFlask,\n\tFood,\n\tGlyphs,\n\tIndividualBuffs,\n\tPotions,\n\tRaidBuffs,\n\tSpec,\n\tTristateEffect,\n\tUnitReference,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tSmitePriest_Rotation as Rotation,\n\tSmitePriest_Options as Options,\n\tPriestMajorGlyph as MajorGlyph,\n\tPriestMinorGlyph as MinorGlyph,\n} from '../core/proto/priest.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\nimport PreraidGear from './gear_sets/preraid.gear.json';\nimport P1Gear from './gear_sets/p1.gear.json';\n\nimport DefaultApl from './apls/default.apl.json'\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const PRERAID_PRESET = PresetUtils.makePresetGear('Preraid Preset', PreraidGear);\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\n\nexport const DefaultRotation = Rotation.create({\n\tuseDevouringPlague: true,\n\tuseShadowWordDeath: false,\n\tuseMindBlast: false,\n});\nexport const ROTATION_PRESET_LEGACY_DEFAULT = PresetUtils.makePresetLegacyRotation('Legacy Default', Spec.SpecSmitePriest, DefaultRotation);\nexport const ROTATION_PRESET_APL = PresetUtils.makePresetAPLRotation('Default', DefaultApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '05332031013005023310001-005551002020152-00502',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfSmite,\n\t\t\tmajor2: MajorGlyph.GlyphOfShadowWordPain,\n\t\t\tmajor3: MajorGlyph.GlyphOfShadowWordDeath,\n\t\t\tminor1: MinorGlyph.GlyphOfFortitude,\n\t\t\tminor2: MinorGlyph.GlyphOfShadowfiend,\n\t\t\tminor3: MinorGlyph.GlyphOfFading,\n\t\t}),\n\t}),\n};\n\nexport const DefaultOptions = Options.create({\n\tuseInnerFire: true,\n\tuseShadowfiend: true,\n\n\tpowerInfusionTarget: UnitReference.create(),\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n\tdefaultPotion: Potions.RunicManaInjector,\n\tprepopPotion: Potions.PotionOfWildMagic,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tarcaneBrilliance: true,\n\tdivineSpirit: true,\n\ttotemOfWrath: true,\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\twrathOfAirTotem: true,\n\tsanctifiedRetribution: true,\n\tbloodlust: true,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tblessingOfKings: true,\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\tvampiricTouch: true,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tfaerieFire: TristateEffect.TristateEffectImproved,\n\tebonPlaguebringer: true,\n\theartOfTheCrusader: true,\n\tjudgementOfWisdom: true,\n});\n","import { UnitReference, UnitReference_Type as UnitType } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const SelfPowerInfusion = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecSmitePriest>({\n\tfieldName: 'powerInfusionTarget',\n\tid: ActionId.fromSpellId(10060),\n\textraCssClasses: [\n\t\t'within-raid-sim-hide',\n\t],\n\tgetValue: (player: Player<Spec.SpecSmitePriest>) => player.getSpecOptions().powerInfusionTarget?.type == UnitType.Player,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecSmitePriest>, newValue: boolean) => {\n\t\tconst newOptions = player.getSpecOptions();\n\t\tnewOptions.powerInfusionTarget = UnitReference.create({\n\t\t\ttype: newValue ? UnitType.Player : UnitType.Unknown,\n\t\t\tindex: 0,\n\t\t});\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t},\n});\n\nexport const InnerFire = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecSmitePriest>({\n\tfieldName: 'useInnerFire',\n\tid: ActionId.fromSpellId(48168),\n});\n\nexport const Shadowfiend = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecSmitePriest>({\n\tfieldName: 'useShadowfiend',\n\tid: ActionId.fromSpellId(34433),\n});\n\nexport const SmitePriestRotationConfig = {\n\tinputs: [\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecSmitePriest>({\n\t\t\tfieldName: 'useDevouringPlague',\n\t\t\tlabel: 'Use Devouring Plague',\n\t\t\tlabelTooltip: 'Use Devouring Plague whenever its not active.',\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecSmitePriest>({\n\t\t\tfieldName: 'useShadowWordDeath',\n\t\t\tlabel: 'Use Shadow Word: Death',\n\t\t\tlabelTooltip: 'Use Shadow Word: Death whenever off CD.',\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecSmitePriest>({\n\t\t\tfieldName: 'useMindBlast',\n\t\t\tlabel: 'Use Mind Blast',\n\t\t\tlabelTooltip: 'Use Mind Blast whenever off CD.',\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecSmitePriest>({\n\t\t\tfieldName: 'memeDream',\n\t\t\tlabel: 'Meme Dream',\n\t\t\tlabelTooltip: 'Assumes 2nd Smite Priest in raid, so just spams HF + Smite with permanent HF uptime.',\n\t\t\textraCssClasses: ['within-raid-sim-hide'],\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecSmitePriest>({\n\t\t\tfieldName: 'allowedHolyFireDelayMs',\n\t\t\tlabel: 'Allowed Delay for HF',\n\t\t\tlabelTooltip: 'Time, in milliseconds, the player is allowed to wait for Holy Fire if it is about to come off CD.',\n\t\t}),\n\t],\n};\n","import { PartyBuffs } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Stat } from '../core/proto/common.js';\nimport {\n\tAPLRotation,\n} from '../core/proto/apl.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\n\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\n\nimport * as SmitePriestInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class SmitePriestSimUI extends IndividualSimUI<Spec.SpecSmitePriest> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecSmitePriest>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'smite-priest-sim-ui',\n\t\t\tcssScheme: 'priest',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatSpellPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecSmitePriest>) => {\n\t\t\t\tlet stats = new Stats();\n\t\t\t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().shadowFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\n\t\t\t\treturn {\n\t\t\t\t\ttalents: stats,\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.P1_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatIntellect]: 0.38,\n\t\t\t\t\t[Stat.StatSpirit]: 0.38,\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t\t\t[Stat.StatSpellHit]: 1.65,\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.32,\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.78,\n\t\t\t\t\t[Stat.StatMP5]: 0.35,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: Presets.DefaultRaidBuffs,\n\t\t\t\tpartyBuffs: PartyBuffs.create({}),\n\t\t\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\t\t\t\tdebuffs: Presets.DefaultDebuffs,\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tSmitePriestInputs.SelfPowerInfusion,\n\t\t\t\tSmitePriestInputs.InnerFire,\n\t\t\t\tSmitePriestInputs.Shadowfiend,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: SmitePriestInputs.SmitePriestRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.StandardTalents,\n\t\t\t\t],\n\t\t\t\t// Preset rotations that the user can quickly select.\n\t\t\t\trotations: [\n\t\t\t\t\tPresets.ROTATION_PRESET_LEGACY_DEFAULT,\n\t\t\t\t\tPresets.ROTATION_PRESET_APL,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.PRERAID_PRESET,\n\t\t\t\t\tPresets.P1_PRESET,\n\t\t\t\t],\n\t\t\t},\n\n\t\t\tautoRotation: (_player: Player<Spec.SpecSmitePriest>): APLRotation => {\n\t\t\t\treturn Presets.ROTATION_PRESET_APL.rotation.rotation!;\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["PRERAID_PRESET","PresetUtils.makePresetGear","P1_PRESET","P1Gear","DefaultRotation","Rotation","create","useDevouringPlague","useShadowWordDeath","useMindBlast","ROTATION_PRESET_LEGACY_DEFAULT","PresetUtils.makePresetLegacyRotation","Spec","SpecSmitePriest","ROTATION_PRESET_APL","PresetUtils.makePresetAPLRotation","DefaultApl","StandardTalents","name","data","SavedTalents","talentsString","glyphs","Glyphs","major1","MajorGlyph","GlyphOfSmite","major2","GlyphOfShadowWordPain","major3","GlyphOfShadowWordDeath","minor1","MinorGlyph","GlyphOfFortitude","minor2","GlyphOfShadowfiend","minor3","GlyphOfFading","DefaultOptions","Options","useInnerFire","useShadowfiend","powerInfusionTarget","UnitReference","DefaultConsumes","Consumes","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","defaultPotion","Potions","RunicManaInjector","prepopPotion","PotionOfWildMagic","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","arcaneBrilliance","divineSpirit","totemOfWrath","moonkinAura","wrathOfAirTotem","sanctifiedRetribution","bloodlust","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","blessingOfMight","vampiricTouch","DefaultDebuffs","Debuffs","faerieFire","ebonPlaguebringer","heartOfTheCrusader","judgementOfWisdom","SelfPowerInfusion","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","extraCssClasses","getValue","player","getSpecOptions","type","UnitType","Player","setValue","eventID","newValue","newOptions","Unknown","index","setSpecOptions","InnerFire","Shadowfiend","SmitePriestRotationConfig","inputs","InputHelpers.makeRotationBooleanInput","label","labelTooltip","InputHelpers.makeRotationNumberInput","SmitePriestSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatStamina","modifyDisplayStats","stats","Stats","addStat","getTalents","shadowFocus","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","talents","defaults","gear","Presets.P1_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","playerIconInputs","SmitePriestInputs.SelfPowerInfusion","SmitePriestInputs.InnerFire","SmitePriestInputs.Shadowfiend","rotationInputs","SmitePriestInputs.SmitePriestRotationConfig","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_LEGACY_DEFAULT","Presets.ROTATION_PRESET_APL","Presets.PRERAID_PRESET","autoRotation","_player"],"mappings":"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"}