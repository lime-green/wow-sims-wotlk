{"version":3,"file":"sim-de0a0b6b.chunk.js","sources":["../../../ui/shadow_priest/presets.ts","../../../ui/shadow_priest/inputs.ts","../../../ui/shadow_priest/sim.ts"],"sourcesContent":["import {\n\tConsumes,\n\tDebuffs,\n\tFlask,\n\tFood,\n\tGlyphs,\n\tIndividualBuffs,\n\tPotions,\n\tProfession,\n\tRaidBuffs,\n\tTristateEffect,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tShadowPriest_Options_Armor as Armor,\n\tShadowPriest_Rotation as Rotation,\n\tShadowPriest_Options as Options,\n\tShadowPriest_Rotation_RotationType,\n\tPriestMajorGlyph as MajorGlyph,\n\tPriestMinorGlyph as MinorGlyph,\n} from '../core/proto/priest.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\nimport PreraidGear from './gear_sets/preraid.gear.json';\nimport P1Gear from './gear_sets/p1.gear.json';\nimport P2Gear from './gear_sets/p2.gear.json';\nimport P3Gear from './gear_sets/p3.gear.json';\nimport P4Gear from './gear_sets/p4.gear.json';\n\nimport DefaultApl from './apls/default.apl.json'\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const PRERAID_PRESET = PresetUtils.makePresetGear('Preraid Preset', PreraidGear);\nexport const P1_PRESET = PresetUtils.makePresetGear('P1 Preset', P1Gear);\nexport const P2_PRESET = PresetUtils.makePresetGear('P2 Preset', P2Gear);\nexport const P3_PRESET = PresetUtils.makePresetGear('P3 Preset', P3Gear);\nexport const P4_PRESET = PresetUtils.makePresetGear('P4 Preset', P4Gear);\n\nexport const DefaultRotation = Rotation.create({\n\trotationType: ShadowPriest_Rotation_RotationType.Ideal,\n});\n\nexport const ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Default', DefaultApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '05032031--325023051223010323151301351',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfShadow,\n\t\t\tmajor2: MajorGlyph.GlyphOfMindFlay,\n\t\t\tmajor3: MajorGlyph.GlyphOfDispersion,\n\t\t\tminor1: MinorGlyph.GlyphOfFortitude,\n\t\t\tminor2: MinorGlyph.GlyphOfShadowProtection,\n\t\t\tminor3: MinorGlyph.GlyphOfShadowfiend,\n\t\t}),\n\t}),\n};\n\nexport const EnlightenmentTalents = {\n\tname: 'Enlightenment',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '05032031303005022--3250230012230101231513011',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfShadow,\n\t\t\tmajor2: MajorGlyph.GlyphOfMindFlay,\n\t\t\tmajor3: MajorGlyph.GlyphOfShadowWordDeath,\n\t\t\tminor1: MinorGlyph.GlyphOfFortitude,\n\t\t\tminor2: MinorGlyph.GlyphOfShadowProtection,\n\t\t\tminor3: MinorGlyph.GlyphOfShadowfiend,\n\t\t}),\n\t}),\n};\n\nexport const DefaultOptions = Options.create({\n\tuseShadowfiend: true,\n\tuseMindBlast: true,\n\tuseShadowWordDeath: true,\n\tarmor: Armor.InnerFire,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tprepopPotion: Potions.PotionOfWildMagic,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\tarcaneBrilliance: true,\n\tdivineSpirit: true,\n\ttrueshotAura: true,\n\tleaderOfThePack: TristateEffect.TristateEffectImproved,\n\ticyTalons: true,\n\ttotemOfWrath: true,\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\twrathOfAirTotem: true,\n\tsanctifiedRetribution: true,\n\tbloodlust: true,\n\tdemonicPact: 500,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tblessingOfKings: true,\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\tvampiricTouch: true,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tsunderArmor: true,\n\tfaerieFire: TristateEffect.TristateEffectImproved,\n\tbloodFrenzy: true,\n\tebonPlaguebringer: true,\n\theartOfTheCrusader: true,\n\tjudgementOfWisdom: true,\n\tshadowMastery: true,\n});\n\nexport const OtherDefaults = {\n\tchannelClipDelay: 100,\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Tailoring,\n\tnibelungAverageCasts: 11,\n};\n","import { Spec } from '../core/proto/common.js';\nimport {\n\tShadowPriest_Options_Armor as Armor,\n\tShadowPriest_Rotation_RotationType as RotationType,\n\tShadowPriest_Rotation_PreCastOption as precastType\n} from '../core/proto/priest.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const ArmorInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecShadowPriest, Armor>({\n\tfieldName: 'armor',\n\tvalues: [\n\t\t{ value: Armor.NoArmor, tooltip: 'No Inner Fire' },\n\t\t{ actionId: ActionId.fromSpellId(48168), value: Armor.InnerFire },\n\t],\n});\n\nexport const MindBlastInput = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecShadowPriest>({\n\tfieldName: 'useMindBlast',\n\tid: ActionId.fromSpellId(48127),\n});\n\nexport const ShadowWordDeathInput = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecShadowPriest>({\n\tfieldName: 'useShadowWordDeath',\n\tid: ActionId.fromSpellId(48158),\n});\n\nexport const ShadowfiendInput = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecShadowPriest>({\n\tfieldName: 'useShadowfiend',\n\tid: ActionId.fromSpellId(34433),\n});\n\nexport const ShadowPriestRotationConfig = {\n\tinputs: [\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecShadowPriest, RotationType>({\n\t\t\tfieldName: 'rotationType',\n\t\t\tlabel: 'Rotation Type',\n\t\t\tlabelTooltip: 'Choose how to clip your mindflay. Basic will never clip. Clipping will clip for other spells and use a 2xMF2 when there is time for 4 ticks. Ideal will evaluate the DPS gain of every action to determine MF actions.',\n\t\t\tvalues: [\n\t\t\t\t//{ name: 'Basic', value: RotationType.Basic },\n\t\t\t\t//{ name: 'Clipping', value: RotationType.Clipping },\n\t\t\t\t{ name: 'Ideal', value: RotationType.Ideal },\n\t\t\t\t{ name: 'AoE', value: RotationType.AoE },\n\t\t\t],\n\t\t}),\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecShadowPriest, precastType>({\n\t\t\tfieldName: 'precastType',\n\t\t\tlabel: 'PreCast Spell',\n\t\t\tlabelTooltip: 'Choose which spell you want to Precast',\n\t\t\tvalues: [\n\t\t\t\t{ name: \"None\", value: precastType.Nothing },\n\t\t\t\t{ name: 'Vampiric Touch', value: precastType.PrecastVt },\n\t\t\t\t{ name: 'Mind Blast', value: precastType.PrecastMb },\n\t\t\t],\n\t\t}),\n\t],\n};\n","import { PartyBuffs } from '../core/proto/common.js';\nimport { Spec } from '../core/proto/common.js';\nimport { Stat } from '../core/proto/common.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\n\n\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\n\nimport * as ShadowPriestInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class ShadowPriestSimUI extends IndividualSimUI<Spec.SpecShadowPriest> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecShadowPriest>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'shadow-priest-sim-ui',\n\t\t\tcssScheme: 'priest',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatSpellPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecShadowPriest>) => {\n\t\t\t\tlet stats = new Stats();\n\t\t\t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().shadowFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\n\t\t\t\treturn {\n\t\t\t\t\ttalents: stats,\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.P4_PRESET.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatIntellect]: 0.11,\n\t\t\t\t\t[Stat.StatSpirit]: 0.47,\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t\t\t[Stat.StatSpellHit]: 0.87,\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.74,\n\t\t\t\t\t[Stat.StatSpellHaste]: 1.65,\n\t\t\t\t\t[Stat.StatMP5]: 0.00,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: Presets.DefaultRaidBuffs,\n\n\t\t\t\tpartyBuffs: PartyBuffs.create({}),\n\n\t\t\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\n\t\t\t\tdebuffs: Presets.DefaultDebuffs,\n\n\t\t\t\tother: Presets.OtherDefaults,\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tShadowPriestInputs.ArmorInput,\n\t\t\t],\n\t\t\trotationIconInputs: [\n\t\t\t\tShadowPriestInputs.MindBlastInput,\n\t\t\t\tShadowPriestInputs.ShadowWordDeathInput,\n\t\t\t\tShadowPriestInputs.ShadowfiendInput,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: ShadowPriestInputs.ShadowPriestRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t\tIconInputs.ReplenishmentBuff,\n\t\t\t\tIconInputs.MeleeHasteBuff,\n\t\t\t\tIconInputs.MeleeCritBuff,\n\t\t\t\tIconInputs.MP5Buff,\n\t\t\t\tIconInputs.AttackPowerPercentBuff,\n\t\t\t\tIconInputs.AttackPowerBuff,\n\t\t\t\tIconInputs.StaminaBuff,\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t\tOtherInputs.ChannelClipDelay,\n\t\t\t\t\tOtherInputs.nibelungAverageCasts,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.StandardTalents,\n\t\t\t\t\tPresets.EnlightenmentTalents,\n\t\t\t\t],\n\t\t\t\trotations: [\n\t\t\t\t\tPresets.ROTATION_PRESET_DEFAULT,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.PRERAID_PRESET,\n\t\t\t\t\tPresets.P1_PRESET,\n\t\t\t\t\tPresets.P2_PRESET,\n\t\t\t\t\tPresets.P3_PRESET,\n\t\t\t\t\tPresets.P4_PRESET,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["PRERAID_PRESET","PresetUtils.makePresetGear","P1_PRESET","P1Gear","P2_PRESET","P2Gear","P3_PRESET","P3Gear","P4_PRESET","P4Gear","DefaultRotation","Rotation","create","rotationType","ShadowPriest_Rotation_RotationType","Ideal","ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","StandardTalents","name","data","SavedTalents","talentsString","glyphs","Glyphs","major1","MajorGlyph","GlyphOfShadow","major2","GlyphOfMindFlay","major3","GlyphOfDispersion","minor1","MinorGlyph","GlyphOfFortitude","minor2","GlyphOfShadowProtection","minor3","GlyphOfShadowfiend","EnlightenmentTalents","GlyphOfShadowWordDeath","DefaultOptions","Options","useShadowfiend","useMindBlast","useShadowWordDeath","armor","Armor","InnerFire","DefaultConsumes","Consumes","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","defaultPotion","Potions","PotionOfSpeed","prepopPotion","PotionOfWildMagic","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","arcaneBrilliance","divineSpirit","trueshotAura","leaderOfThePack","icyTalons","totemOfWrath","moonkinAura","wrathOfAirTotem","sanctifiedRetribution","bloodlust","demonicPact","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","blessingOfMight","vampiricTouch","DefaultDebuffs","Debuffs","sunderArmor","faerieFire","bloodFrenzy","ebonPlaguebringer","heartOfTheCrusader","judgementOfWisdom","shadowMastery","OtherDefaults","channelClipDelay","profession1","Profession","Engineering","profession2","Tailoring","nibelungAverageCasts","ArmorInput","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","NoArmor","tooltip","actionId","ActionId","fromSpellId","MindBlastInput","InputHelpers.makeSpecOptionsBooleanIconInput","id","ShadowWordDeathInput","ShadowfiendInput","ShadowPriestRotationConfig","inputs","InputHelpers.makeRotationEnumInput","label","labelTooltip","RotationType","AoE","precastType","Nothing","PrecastVt","PrecastMb","ShadowPriestSimUI","IndividualSimUI","constructor","parentElem","player","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatStamina","modifyDisplayStats","stats","Stats","addStat","getTalents","shadowFocus","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","talents","defaults","gear","Presets.P4_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","other","Presets.OtherDefaults","playerIconInputs","ShadowPriestInputs.ArmorInput","rotationIconInputs","ShadowPriestInputs.MindBlastInput","ShadowPriestInputs.ShadowWordDeathInput","ShadowPriestInputs.ShadowfiendInput","rotationInputs","ShadowPriestInputs.ShadowPriestRotationConfig","includeBuffDebuffInputs","IconInputs.ReplenishmentBuff","IconInputs.MeleeHasteBuff","IconInputs.MeleeCritBuff","IconInputs.MP5Buff","IconInputs.AttackPowerPercentBuff","IconInputs.AttackPowerBuff","IconInputs.StaminaBuff","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","OtherInputs.ChannelClipDelay","OtherInputs.nibelungAverageCasts","encounterPicker","showExecuteProportion","presets","Presets.EnlightenmentTalents","rotations","Presets.ROTATION_PRESET_DEFAULT","Presets.PRERAID_PRESET","Presets.P1_PRESET","Presets.P2_PRESET","Presets.P3_PRESET"],"mappings":"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"}