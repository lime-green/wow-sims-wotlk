{"version":3,"file":"sim-ce78e20e.chunk.js","sources":["../../../ui/mage/inputs.ts","../../../ui/mage/presets.ts","../../../ui/mage/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { TypedEvent } from '../core/typed_event.js';\n\nimport {\n\tMage_Rotation_PrimaryFireSpell as PrimaryFireSpell,\n\tMage_Options_ArmorType as ArmorType,\n} from '../core/proto/mage.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const Armor = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecMage, ArmorType>({\n\tfieldName: 'armor',\n\tvalues: [\n\t\t{ value: ArmorType.NoArmor, tooltip: 'No Armor' },\n\t\t{ actionId: ActionId.fromSpellId(43024), value: ArmorType.MageArmor },\n\t\t{ actionId: ActionId.fromSpellId(43046), value: ArmorType.MoltenArmor },\n\t],\n});\n\nexport const WaterElementalDisobeyChance = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecMage>({\n\tfieldName: 'waterElementalDisobeyChance',\n\tpercent: true,\n\tlabel: 'Water Ele Disobey %',\n\tlabelTooltip: 'Percent of Water Elemental actions which will fail. This represents the Water Elemental moving around or standing still instead of casting.',\n\tchangeEmitter: (player: Player<Spec.SpecMage>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.talentsChangeEmitter]),\n\tshowWhen: (player: Player<Spec.SpecMage>) => player.getTalents().summonWaterElemental,\n});\n\nexport const FocusMagicUptime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecMage>({\n\tfieldName: 'focusMagicPercentUptime',\n\tlabel: 'Focus Magic Percent Uptime',\n\tlabelTooltip: 'Percent of uptime for Focus Magic Buddy',\n\textraCssClasses: ['within-raid-sim-hide'],\n});\n\nexport const MageRotationConfig = {\n\tinputs: [\n\t\t// ********************************************************\n\t\t//                       FIRE INPUTS\n\t\t// ********************************************************\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecMage, PrimaryFireSpell>({\n\t\t\tfieldName: 'primaryFireSpell',\n\t\t\tlabel: 'Primary Spell',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Fireball', value: PrimaryFireSpell.Fireball },\n\t\t\t\t{ name: 'Frostfire Bolt', value: PrimaryFireSpell.FrostfireBolt },\n\t\t\t\t{ name: 'Scorch', value: PrimaryFireSpell.Scorch },\n\t\t\t],\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getTalentTree() == 1,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t\t// ********************************************************\n\t\t//                       FROST INPUTS\n\t\t// ********************************************************\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecMage>({\n\t\t\tfieldName: 'useIceLance',\n\t\t\tlabel: 'Use Ice Lance',\n\t\t\tlabelTooltip: 'Casts Ice Lance at the end of Fingers of Frost, after using Deep Freeze.',\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getTalentTree() == 2,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t\t// ********************************************************\n\t\t//                      ARCANE INPUTS\n\t\t// ********************************************************\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecMage>({\n\t\t\tfieldName: 'only3ArcaneBlastStacksBelowManaPercent',\n\t\t\tpercent: true,\n\t\t\tlabel: 'Stack Arcane Blast to 3 below mana %',\n\t\t\tlabelTooltip: 'When below this mana %, AM/ABarr will be used at 3 stacks of AB instead of 4.',\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getTalentTree() == 0,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecMage>({\n\t\t\tfieldName: 'blastWithoutMissileBarrageAboveManaPercent',\n\t\t\tpercent: true,\n\t\t\tlabel: 'AB without Missile Barrage above mana %',\n\t\t\tlabelTooltip: 'When above this mana %, spam AB until a Missile Barrage proc occurs.',\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getTalentTree() == 0,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecMage>({\n\t\t\tfieldName: 'missileBarrageBelowManaPercent',\n\t\t\tpercent: true,\n\t\t\tlabel: 'Use Missile Barrage ASAP below mana %',\n\t\t\tlabelTooltip: 'When below this mana %, use Missile Barrage proc as soon as possible. Can be useful to conserve mana.',\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getTalentTree() == 0,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecMage>({\n\t\t\tfieldName: 'useArcaneBarrage',\n\t\t\tlabel: 'Use Arcane Barrage',\n\t\t\tlabelTooltip: 'Includes Arcane Barrage in the rotation.',\n\t\t\tenableWhen: (player: Player<Spec.SpecMage>) => player.getTalents().arcaneBarrage,\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getTalentTree() == 0,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecMage>({\n\t\t\tfieldName: 'maintainImprovedScorch',\n\t\t\tlabel: 'Maintain Imp. Scorch',\n\t\t\tlabelTooltip: 'Always use Scorch when below 5 stacks, or < 4s remaining on debuff.',\n\t\t\tshowWhen: (player: Player<Spec.SpecMage>) => player.getTalents().improvedScorch > 0,\n\t\t\tchangeEmitter: (player: Player<Spec.SpecMage>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\n\t\t}),\n\t],\n};\n","import {\n\tConjured,\n\tConsumes,\n\tFaction,\n\tFlask,\n\tFood,\n\tGlyphs,\n\tPotions,\n\tProfession,\n\tSpec,\n\tUnitReference,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\nimport { Player } from '../core/player.js';\n\nimport {\n\tMage_Rotation as MageRotation,\n\tMage_Rotation_PrimaryFireSpell as PrimaryFireSpell,\n\tMage_Options as MageOptions,\n\tMage_Options_ArmorType as ArmorType,\n\tMageMajorGlyph,\n\tMageMinorGlyph,\n} from '../core/proto/mage.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\nimport PreraidArcaneGear from './gear_sets/preraid_arcane.gear.json';\nimport P1ArcaneGear from './gear_sets/p1_arcane.gear.json';\nimport P2ArcaneGear from './gear_sets/p2_arcane.gear.json';\nimport P3ArcaneAllianceGear from './gear_sets/p3_arcane_alliance.gear.json';\nimport P3ArcaneHordeGear from './gear_sets/p3_arcane_horde.gear.json';\nimport P4ArcaneAllianceGear from './gear_sets/p4_arcane_alliance.gear.json';\nimport P4ArcaneHordeGear from './gear_sets/p4_arcane_horde.gear.json';\nimport PreraidFireGear from './gear_sets/preraid_fire.gear.json';\nimport P1FireGear from './gear_sets/p1_fire.gear.json';\nimport P2FireGear from './gear_sets/p2_fire.gear.json';\nimport P3FireAllianceGear from './gear_sets/p3_fire_alliance.gear.json';\nimport P3FireHordeGear from './gear_sets/p3_fire_horde.gear.json';\nimport P4FireAllianceGear from './gear_sets/p4_fire_alliance.gear.json';\nimport P4FireHordeGear from './gear_sets/p4_fire_horde.gear.json';\nimport P2FfbGear from './gear_sets/p2_ffb.gear.json';\nimport P3FfbAllianceGear from './gear_sets/p3_ffb_alliance.gear.json';\nimport P3FfbHordeGear from './gear_sets/p3_ffb_horde.gear.json';\nimport P4FfbAllianceGear from './gear_sets/p4_ffb_alliance.gear.json';\nimport P4FfbHordeGear from './gear_sets/p4_ffb_horde.gear.json';\nimport P1FrostGear from './gear_sets/p1_frost.gear.json';\nimport P2FrostGear from './gear_sets/p2_frost.gear.json';\nimport P3FrostAllianceGear from './gear_sets/p3_frost_alliance.gear.json';\nimport P3FrostHordeGear from './gear_sets/p3_frost_horde.gear.json';\n\nimport ArcaneApl from './apls/arcane.apl.json';\nimport FireApl from './apls/fire.apl.json';\nimport FrostApl from './apls/frost.apl.json';\nimport ArcaneAoeApl from './apls/arcane_aoe.apl.json';\nimport FireAoeApl from './apls/fire_aoe.apl.json';\nimport FrostAoeApl from './apls/frost_aoe.apl.json';\nimport FrostFireApl from './apls/frostfire.apl.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const ARCANE_PRERAID_PRESET = PresetUtils.makePresetGear('Arcane Preraid Preset', PreraidArcaneGear, { talentTree: 0 });\nexport const ARCANE_P1_PRESET = PresetUtils.makePresetGear('Arcane P1 Preset', P1ArcaneGear, { talentTree: 0 });\nexport const ARCANE_P2_PRESET = PresetUtils.makePresetGear('Arcane P2 Preset', P2ArcaneGear, { talentTree: 0 });\nexport const ARCANE_P3_PRESET_ALLIANCE = PresetUtils.makePresetGear('Arcane P3 Preset [A]', P3ArcaneAllianceGear, { talentTree: 0, faction: Faction.Alliance });\nexport const ARCANE_P3_PRESET_HORDE = PresetUtils.makePresetGear('Arcane P3 Preset [H]', P3ArcaneHordeGear, { talentTree: 0, faction: Faction.Horde });\nexport const ARCANE_P4_PRESET_ALLIANCE = PresetUtils.makePresetGear('Arcane P4 Preset [A]', P4ArcaneAllianceGear, { talentTree: 0, faction: Faction.Alliance });\nexport const ARCANE_P4_PRESET_HORDE = PresetUtils.makePresetGear('Arcane P4 Preset [H]', P4ArcaneHordeGear, { talentTree: 0, faction: Faction.Horde });\nexport const FIRE_PRERAID_PRESET = PresetUtils.makePresetGear('Fire Preraid Preset', PreraidFireGear, { talentTree: 1 });\nexport const FIRE_P1_PRESET = PresetUtils.makePresetGear('Fire P1 Preset', P1FireGear, { talentTree: 1 });\nexport const FIRE_P2_PRESET = PresetUtils.makePresetGear('Fire P2 Preset', P2FireGear, { talentTree: 1, customCondition: (player: Player<Spec.SpecMage>) => !player.getTalents().icyVeins });\nexport const FIRE_P3_PRESET_ALLIANCE = PresetUtils.makePresetGear('Fire P3 Preset [A]', P3FireAllianceGear, { talentTree: 1, faction: Faction.Alliance, customCondition: (player: Player<Spec.SpecMage>) => !player.getTalents().icyVeins });\nexport const FIRE_P3_PRESET_HORDE = PresetUtils.makePresetGear('Fire P3 Preset [H]', P3FireHordeGear, { talentTree: 1, faction: Faction.Horde, customCondition: (player: Player<Spec.SpecMage>) => !player.getTalents().icyVeins });\nexport const FIRE_P4_PRESET_ALLIANCE = PresetUtils.makePresetGear('Fire P4 Preset [A]', P4FireAllianceGear, { talentTree: 1, faction: Faction.Alliance, customCondition: (player: Player<Spec.SpecMage>) => !player.getTalents().icyVeins });\nexport const FIRE_P4_PRESET_HORDE = PresetUtils.makePresetGear('Fire P4 Preset [H]', P4FireHordeGear, { talentTree: 1, faction: Faction.Horde, customCondition: (player: Player<Spec.SpecMage>) => !player.getTalents().icyVeins });\nexport const FFB_P2_PRESET = PresetUtils.makePresetGear('FFB P2 Preset', P2FfbGear, { talentTree: 1, customCondition: (player: Player<Spec.SpecMage>) => player.getTalents().icyVeins });\nexport const FFB_P3_PRESET_ALLIANCE = PresetUtils.makePresetGear('FFB P3 Preset [A]', P3FfbAllianceGear, { talentTree: 1, customCondition: (player: Player<Spec.SpecMage>) => player.getTalents().icyVeins });\nexport const FFB_P3_PRESET_HORDE = PresetUtils.makePresetGear('FFB P3 Preset [H]', P3FfbHordeGear, { talentTree: 1, customCondition: (player: Player<Spec.SpecMage>) => player.getTalents().icyVeins });\nexport const FFB_P4_PRESET_ALLIANCE = PresetUtils.makePresetGear('FFB P4 Preset [A]', P4FfbAllianceGear, { talentTree: 1, customCondition: (player: Player<Spec.SpecMage>) => player.getTalents().icyVeins });\nexport const FFB_P4_PRESET_HORDE = PresetUtils.makePresetGear('FFB P4 Preset [H]', P4FfbHordeGear, { talentTree: 1, customCondition: (player: Player<Spec.SpecMage>) => player.getTalents().icyVeins });\nexport const FROST_P1_PRESET = PresetUtils.makePresetGear('Frost P1 Preset', P1FrostGear, { talentTree: 2 });\nexport const FROST_P2_PRESET = PresetUtils.makePresetGear('Frost P2 Preset', P2FrostGear, { talentTree: 2 });\nexport const FROST_P3_PRESET_ALLIANCE = PresetUtils.makePresetGear('Frost P3 Preset [A]', P3FrostAllianceGear, { talentTree: 2, faction: Faction.Alliance });\nexport const FROST_P3_PRESET_HORDE = PresetUtils.makePresetGear('Frost P3 Preset [H]', P3FrostHordeGear, { talentTree: 2, faction: Faction.Horde });\n\nexport const DefaultSimpleRotation = MageRotation.create({\n\tonly3ArcaneBlastStacksBelowManaPercent: 0.15,\n\tblastWithoutMissileBarrageAboveManaPercent: 0.2,\n\tmissileBarrageBelowManaPercent: 0,\n\tuseArcaneBarrage: false,\n\n\tprimaryFireSpell: PrimaryFireSpell.Fireball,\n\tmaintainImprovedScorch: false,\n\n\tuseIceLance: false,\n});\n\nexport const ROTATION_PRESET_SIMPLE = PresetUtils.makePresetSimpleRotation('Simple Default', Spec.SpecMage, DefaultSimpleRotation);\nexport const ARCANE_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Arcane', ArcaneApl, { talentTree: 0 });\nexport const ARCANE_ROTATION_PRESET_AOE = PresetUtils.makePresetAPLRotation('Arcane AOE', ArcaneAoeApl, { talentTree: 0 });\nexport const FIRE_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Fire', FireApl, { talentTree: 1 });\nexport const FROSTFIRE_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Frostfire', FrostFireApl, { talentTree: 1 });\nexport const FIRE_ROTATION_PRESET_AOE = PresetUtils.makePresetAPLRotation('Fire AOE', FireAoeApl, { talentTree: 1 });\nexport const FROST_ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Frost', FrostApl, { talentTree: 2 });\nexport const FROST_ROTATION_PRESET_AOE = PresetUtils.makePresetAPLRotation('Frost AOE', FrostAoeApl, { talentTree: 2 });\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\nexport const ArcaneTalents = {\n\tname: 'Arcane',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '23000513310033015032310250532-03-023303001',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MageMajorGlyph.GlyphOfArcaneBlast,\n\t\t\tmajor2: MageMajorGlyph.GlyphOfArcaneMissiles,\n\t\t\tmajor3: MageMajorGlyph.GlyphOfMoltenArmor,\n\t\t\tminor1: MageMinorGlyph.GlyphOfSlowFall,\n\t\t\tminor2: MageMinorGlyph.GlyphOfFrostWard,\n\t\t\tminor3: MageMinorGlyph.GlyphOfBlastWave,\n\t\t}),\n\t}),\n};\nexport const FireTalents = {\n\tname: 'Fire',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '23000503110003-0055030012303331053120301351',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MageMajorGlyph.GlyphOfFireball,\n\t\t\tmajor2: MageMajorGlyph.GlyphOfMoltenArmor,\n\t\t\tmajor3: MageMajorGlyph.GlyphOfLivingBomb,\n\t\t\tminor1: MageMinorGlyph.GlyphOfSlowFall,\n\t\t\tminor2: MageMinorGlyph.GlyphOfFrostWard,\n\t\t\tminor3: MageMinorGlyph.GlyphOfBlastWave,\n\t\t}),\n\t}),\n};\n\nexport const Phase3FireTalents = {\n\tname: 'Fire Phase 3',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '23002303310003-0055030012303330053120300351',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MageMajorGlyph.GlyphOfFireball,\n\t\t\tmajor2: MageMajorGlyph.GlyphOfMoltenArmor,\n\t\t\tmajor3: MageMajorGlyph.GlyphOfLivingBomb,\n\t\t\tminor1: MageMinorGlyph.GlyphOfArcaneIntellect,\n\t\t\tminor2: MageMinorGlyph.GlyphOfSlowFall,\n\t\t}),\n\t}),\n};\n\nexport const FrostfireTalents = {\n\tname: 'Frostfire',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-2305032012303331053120311351-023303031',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MageMajorGlyph.GlyphOfFrostfire,\n\t\t\tmajor2: MageMajorGlyph.GlyphOfMoltenArmor,\n\t\t\tmajor3: MageMajorGlyph.GlyphOfLivingBomb,\n\t\t\tminor1: MageMinorGlyph.GlyphOfSlowFall,\n\t\t\tminor2: MageMinorGlyph.GlyphOfFrostWard,\n\t\t\tminor3: MageMinorGlyph.GlyphOfBlastWave,\n\t\t}),\n\t}),\n}\nexport const FrostTalents = {\n\tname: 'Frost',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '23000503110003--0533030310233100030152231351',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MageMajorGlyph.GlyphOfFrostbolt,\n\t\t\tmajor2: MageMajorGlyph.GlyphOfEternalWater,\n\t\t\tmajor3: MageMajorGlyph.GlyphOfMoltenArmor,\n\t\t\tminor1: MageMinorGlyph.GlyphOfSlowFall,\n\t\t\tminor2: MageMinorGlyph.GlyphOfFrostWard,\n\t\t\tminor3: MageMinorGlyph.GlyphOfBlastWave,\n\t\t}),\n\t}),\n};\n\nexport const DefaultFFBOptions = MageOptions.create({\n\tarmor: ArmorType.MoltenArmor,\n});\n\nexport const DefaultFireOptions = MageOptions.create({\n\tarmor: ArmorType.MoltenArmor,\n\tfocusMagicPercentUptime: 99,\n\tfocusMagicTarget: UnitReference.create(),\n});\n\nexport const DefaultFireConsumes = Consumes.create({\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFirecrackerSalmon,\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tdefaultConjured: Conjured.ConjuredFlameCap,\n\tprepopPotion: Potions.PotionOfSpeed,\n});\n\nexport const DefaultFrostOptions = MageOptions.create({\n\tarmor: ArmorType.MoltenArmor,\n\tfocusMagicTarget: UnitReference.create(),\n\twaterElementalDisobeyChance: 0.1,\n});\n\nexport const DefaultFrostConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tdefaultConjured: Conjured.ConjuredFlameCap,\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n});\n\nexport const DefaultArcaneOptions = MageOptions.create({\n\tarmor: ArmorType.MoltenArmor,\n\tfocusMagicPercentUptime: 99,\n\tfocusMagicTarget: UnitReference.create(),\n});\n\nexport const DefaultArcaneConsumes = Consumes.create({\n\tdefaultPotion: Potions.PotionOfSpeed,\n\tdefaultConjured: Conjured.ConjuredDarkRune,\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFirecrackerSalmon,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 20,\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Tailoring,\n\tnibelungAverageCasts: 11,\n};\n","import {Cooldowns, Debuffs, IndividualBuffs, PartyBuffs, RaidBuffs, Spec, Stat, TristateEffect} from '../core/proto/common.js';\nimport {APLAction, APLListItem, APLPrepullAction, APLRotation} from '../core/proto/apl.js';\nimport {Stats} from '../core/proto_utils/stats.js';\nimport {Player} from '../core/player.js';\nimport {IndividualSimUI} from '../core/individual_sim_ui.js';\nimport {\n\tMage_Rotation as MageRotation,\n\tMage_Rotation_PrimaryFireSpell as PrimaryFireSpell,\n} from '../core/proto/mage.js';\n\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\nimport * as AplUtils from '../core/proto_utils/apl_utils.js';\n\nimport * as MageInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class MageSimUI extends IndividualSimUI<Spec.SpecMage> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecMage>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'mage-sim-ui',\n\t\t\tcssScheme: 'mage',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatSpellPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatMana,\n\t\t\t\tStat.StatStamina,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t],\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecMage>) => {\n\t\t\t\tlet stats = new Stats();\n\n\t\t\t\tif (player.getTalentTree() === 0) {\n\t\t\t\t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().arcaneFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\ttalents: stats,\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.FIRE_P3_PRESET_HORDE.gear,\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatIntellect]: 0.48,\n\t\t\t\t\t[Stat.StatSpirit]: 0.42,\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t\t\t[Stat.StatSpellHit]: 0.38,\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.58,\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.94,\n\t\t\t\t\t[Stat.StatMP5]: 0.09,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultFireConsumes,\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.DefaultSimpleRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.Phase3FireTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.DefaultFireOptions,\n\t\t\t\tother: Presets.OtherDefaults,\n\t\t\t\t// Default raid/party buffs settings.\n\t\t\t\traidBuffs: RaidBuffs.create({\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tbloodlust: true,\n\t\t\t\t\tmanaSpringTotem: TristateEffect.TristateEffectImproved,\n\t\t\t\t\twrathOfAirTotem: true,\n\t\t\t\t\tdivineSpirit: true,\n\t\t\t\t\tswiftRetribution: true,\n\t\t\t\t\tsanctifiedRetribution: true,\n\t\t\t\t\tdemonicPact: 500,\n\t\t\t\t\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tarcaneBrilliance: true,\n\t\t\t\t}),\n\t\t\t\tpartyBuffs: PartyBuffs.create({\n\t\t\t\t\tmanaTideTotems: 1,\n\t\t\t\t}),\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\t\t\tblessingOfKings: true,\n\t\t\t\t\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\t\t\t\t\tinnervates: 0,\n\t\t\t\t\tvampiricTouch: true,\n\t\t\t\t\tfocusMagic: true,\n\t\t\t\t}),\n\t\t\t\tdebuffs: Debuffs.create({\n\t\t\t\t\tjudgementOfWisdom: true,\n\t\t\t\t\tmisery: true,\n\t\t\t\t\tebonPlaguebringer: true,\n\t\t\t\t\tshadowMastery: true,\n\t\t\t\t\theartOfTheCrusader: true,\n\t\t\t\t}),\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tMageInputs.Armor,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationInputs: MageInputs.MageRotationConfig,\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t\t//Should add hymn of hope, revitalize, and \n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tMageInputs.FocusMagicUptime,\n\t\t\t\t\tMageInputs.WaterElementalDisobeyChance,\n\t\t\t\t\tOtherInputs.ReactionTime,\n\t\t\t\t\tOtherInputs.DistanceFromTarget,\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t\tOtherInputs.nibelungAverageCasts,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: true,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset rotations that the user can quickly select.\n\t\t\t\trotations: [\n\t\t\t\t\tPresets.ROTATION_PRESET_SIMPLE,\n\t\t\t\t\tPresets.ARCANE_ROTATION_PRESET_DEFAULT,\n\t\t\t\t\tPresets.FIRE_ROTATION_PRESET_DEFAULT,\n\t\t\t\t\tPresets.FROSTFIRE_ROTATION_PRESET_DEFAULT,\n\t\t\t\t\tPresets.FROST_ROTATION_PRESET_DEFAULT,\n\t\t\t\t\tPresets.ARCANE_ROTATION_PRESET_AOE,\n\t\t\t\t\tPresets.FIRE_ROTATION_PRESET_AOE,\n\t\t\t\t\tPresets.FROST_ROTATION_PRESET_AOE,\n\t\t\t\t],\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.ArcaneTalents,\n\t\t\t\t\tPresets.FireTalents,\n\t\t\t\t\tPresets.FrostfireTalents,\n\t\t\t\t\tPresets.FrostTalents,\n\t\t\t\t\tPresets.Phase3FireTalents,\n\t\t\t\t],\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.ARCANE_PRERAID_PRESET,\n\t\t\t\t\tPresets.FIRE_PRERAID_PRESET,\n\t\t\t\t\tPresets.ARCANE_P1_PRESET,\n\t\t\t\t\tPresets.FIRE_P1_PRESET,\n\t\t\t\t\tPresets.FROST_P1_PRESET,\n\t\t\t\t\tPresets.ARCANE_P2_PRESET,\n\t\t\t\t\tPresets.FIRE_P2_PRESET,\n\t\t\t\t\tPresets.FROST_P2_PRESET,\n\t\t\t\t\tPresets.FFB_P2_PRESET,\n\t\t\t\t\tPresets.ARCANE_P3_PRESET_ALLIANCE,\n\t\t\t\t\tPresets.ARCANE_P3_PRESET_HORDE,\n\t\t\t\t\tPresets.FROST_P3_PRESET_ALLIANCE,\n\t\t\t\t\tPresets.FROST_P3_PRESET_HORDE,\n\t\t\t\t\tPresets.FIRE_P3_PRESET_ALLIANCE,\n\t\t\t\t\tPresets.FIRE_P3_PRESET_HORDE,\n\t\t\t\t\tPresets.FFB_P3_PRESET_ALLIANCE,\n\t\t\t\t\tPresets.FFB_P3_PRESET_HORDE,\n\t\t\t\t\tPresets.FIRE_P4_PRESET_HORDE,\n\t\t\t\t\tPresets.FIRE_P4_PRESET_ALLIANCE,\n\t\t\t\t\tPresets.FFB_P4_PRESET_HORDE,\n\t\t\t\t\tPresets.FFB_P4_PRESET_ALLIANCE,\n\t\t\t\t\tPresets.ARCANE_P4_PRESET_HORDE,\n\t\t\t\t\tPresets.ARCANE_P4_PRESET_ALLIANCE,\n\t\t\t\t],\n\t\t\t},\n\n\t\t\tautoRotation: (player: Player<Spec.SpecMage>): APLRotation => {\n\t\t\t\tconst talentTree = player.getTalentTree();\n\t\t\t\tconst numTargets = player.sim.encounter.targets.length;\n\t\t\t\tif (numTargets > 3) {\n\t\t\t\t\tif (talentTree == 0) {\n\t\t\t\t\t\treturn Presets.ARCANE_ROTATION_PRESET_AOE.rotation.rotation!;\n\t\t\t\t\t} else if (talentTree == 1) {\n\t\t\t\t\t\treturn Presets.FIRE_ROTATION_PRESET_AOE.rotation.rotation!;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Presets.FROST_ROTATION_PRESET_AOE.rotation.rotation!;\n\t\t\t\t\t}\n\t\t\t\t} else if (talentTree == 0) {\n\t\t\t\t\treturn Presets.ARCANE_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t\t\t} else if (talentTree == 1) {\n\t\t\t\t\treturn Presets.FIRE_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t\t\t} else {\n\t\t\t\t\treturn Presets.FROST_ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsimpleRotation: (player: Player<Spec.SpecMage>, simple: MageRotation, cooldowns: Cooldowns): APLRotation => {\n\t\t\t\tlet [prepullActions, actions] = AplUtils.standardCooldownDefaults(cooldowns);\n\n\t\t\t\tconst prepullMirrorImage = APLPrepullAction.fromJsonString(`{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":55342}}},\"doAtValue\":{\"const\":{\"val\":\"-2s\"}}}`);\n\n\t\t\t\tconst berserking = APLAction.fromJsonString(`{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":12472}}}}},\"castSpell\":{\"spellId\":{\"spellId\":26297}}}`);\n\t\t\t\tconst hyperspeedAcceleration = APLAction.fromJsonString(`{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":12472}}}}},\"castSpell\":{\"spellId\":{\"spellId\":54758}}}`);\n\t\t\t\tconst combatPot = APLAction.fromJsonString(`{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":12472}}}}},\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}}`);\n\t\t\t\tconst evocation = APLAction.fromJsonString(`{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"25%\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":12051}}}`);\n\n\t\t\t\tconst arcaneBlastBelowStacks = APLAction.fromJsonString(`{\"condition\":{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"auraNumStacks\":{\"auraId\":{\"spellId\":36032}}},\"rhs\":{\"const\":{\"val\":\"4\"}}}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"auraNumStacks\":{\"auraId\":{\"spellId\":36032}}},\"rhs\":{\"const\":{\"val\":\"3\"}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"${(simple.only3ArcaneBlastStacksBelowManaPercent * 100).toFixed(0)}%\"}}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":42897}}}`);\n\t\t\t\tconst arcaneMissilesWithMissileBarrageBelowMana = APLAction.fromJsonString(`{\"condition\":{\"and\":{\"vals\":[{\"auraIsActiveWithReactionTime\":{\"auraId\":{\"spellId\":44401}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"${(simple.missileBarrageBelowManaPercent * 100).toFixed(0)}%\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":42846}}}`);\n\t\t\t\tconst arcaneMisslesWithMissileBarrage = APLAction.fromJsonString(`{\"condition\":{\"auraIsActiveWithReactionTime\":{\"auraId\":{\"spellId\":44401}}},\"castSpell\":{\"spellId\":{\"spellId\":42846}}}`);\n\t\t\t\tconst arcaneBlastAboveMana = APLAction.fromJsonString(`{\"condition\":{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"${(simple.blastWithoutMissileBarrageAboveManaPercent * 100).toFixed(0)}%\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":42897}}}`);\n\t\t\t\tconst arcaneMissiles = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":42846}}}`);\n\t\t\t\tconst arcaneBarrage = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":44781}}}`);\n\n\t\t\t\tconst maintainImpScorch = APLAction.fromJsonString(`{\"condition\":{\"auraShouldRefresh\":{\"auraId\":{\"spellId\":12873},\"maxOverlap\":{\"const\":{\"val\":\"4s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":42859}}}`);\n\t\t\t\tconst pyroWithHotStreak = APLAction.fromJsonString(`{\"condition\":{\"auraIsActiveWithReactionTime\":{\"auraId\":{\"spellId\":44448}}},\"castSpell\":{\"spellId\":{\"spellId\":42891}}}`);\n\t\t\t\tconst livingBomb = APLAction.fromJsonString(`{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"12s\"}}}}]}},\"multidot\":{\"spellId\":{\"spellId\":55360},\"maxDots\":10,\"maxOverlap\":{\"const\":{\"val\":\"0ms\"}}}}`);\n\t\t\t\tconst cheekyFireBlastFinisher = APLAction.fromJsonString(`{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"spellCastTime\":{\"spellId\":{\"spellId\":42859}}}}},\"castSpell\":{\"spellId\":{\"spellId\":42873}}}`);\n\t\t\t\tconst scorchFinisher = APLAction.fromJsonString(`{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"4s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":42859}}}`);\n\t\t\t\tconst fireball = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":42833}}}`);\n\t\t\t\tconst frostfireBolt = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":47610}}}`);\n\t\t\t\tconst scorch = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":42859}}}`);\n\n\t\t\t\tconst deepFreeze = APLAction.fromJsonString(`{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":44545}}},\"castSpell\":{\"spellId\":{\"spellId\":44572}}}`);\n\t\t\t\tconst frostfireBoltWithBrainFreeze = APLAction.fromJsonString(`{\"condition\":{\"auraIsActiveWithReactionTime\":{\"auraId\":{\"spellId\":44549}}},\"castSpell\":{\"spellId\":{\"spellId\":47610}}}`);\n\t\t\t\tconst frostbolt = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":42842}}}`);\n\t\t\t\tconst iceLance = APLAction.fromJsonString(`{\"condition\":{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"auraNumStacks\":{\"auraId\":{\"spellId\":44545}}},\"rhs\":{\"const\":{\"val\":\"1\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":42914}}}`);\n\n\t\t\t\tprepullActions.push(prepullMirrorImage);\n\t\t\t\tif (player.getTalents().improvedScorch > 0 && simple.maintainImprovedScorch) {\n\t\t\t\t\tactions.push(maintainImpScorch);\n\t\t\t\t}\n\n\t\t\t\tconst talentTree = player.getTalentTree();\n\t\t\t\tif (talentTree == 0) { // Arcane\n\t\t\t\t\tactions.push(...[\n\t\t\t\t\t\tberserking,\n\t\t\t\t\t\thyperspeedAcceleration,\n\t\t\t\t\t\tcombatPot,\n\t\t\t\t\t\tsimple.missileBarrageBelowManaPercent > 0 ? arcaneMissilesWithMissileBarrageBelowMana : null,\n\t\t\t\t\t\tarcaneBlastBelowStacks,\n\t\t\t\t\t\tarcaneMisslesWithMissileBarrage,\n\t\t\t\t\t\tevocation,\n\t\t\t\t\t\tarcaneBlastAboveMana,\n\t\t\t\t\t\tsimple.useArcaneBarrage ? arcaneBarrage : null,\n\t\t\t\t\t\tarcaneMissiles,\n\t\t\t\t\t].filter(a => a) as Array<APLAction>)\n\t\t\t\t} else if (talentTree == 1) { // Fire\n\t\t\t\t\tactions.push(...[\n\t\t\t\t\t\tpyroWithHotStreak,\n\t\t\t\t\t\tlivingBomb,\n\t\t\t\t\t\tcheekyFireBlastFinisher,\n\t\t\t\t\t\tscorchFinisher,\n\t\t\t\t\t\tsimple.primaryFireSpell == PrimaryFireSpell.Fireball\n\t\t\t\t\t\t\t? fireball\n\t\t\t\t\t\t\t: (simple.primaryFireSpell == PrimaryFireSpell.FrostfireBolt\n\t\t\t\t\t\t\t\t? frostfireBolt : scorch),\n\t\t\t\t\t].filter(a => a) as Array<APLAction>)\n\t\t\t\t} else if (talentTree == 2) { // Frost\n\t\t\t\t\tactions.push(...[\n\t\t\t\t\t\tberserking,\n\t\t\t\t\t\thyperspeedAcceleration,\n\t\t\t\t\t\tevocation,\n\t\t\t\t\t\tdeepFreeze,\n\t\t\t\t\t\tfrostfireBoltWithBrainFreeze,\n\t\t\t\t\t\tsimple.useIceLance ? iceLance : null,\n\t\t\t\t\t\tfrostbolt,\n\t\t\t\t\t].filter(a => a) as Array<APLAction>)\n\t\t\t\t}\n\n\t\t\t\treturn APLRotation.create({\n\t\t\t\t\tprepullActions: prepullActions,\n\t\t\t\t\tpriorityList: actions.map(action => APLListItem.create({\n\t\t\t\t\t\taction: action,\n\t\t\t\t\t}))\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["Armor","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","ArmorType","NoArmor","tooltip","actionId","ActionId","fromSpellId","MageArmor","MoltenArmor","WaterElementalDisobeyChance","InputHelpers.makeSpecOptionsNumberInput","percent","label","labelTooltip","changeEmitter","player","TypedEvent","onAny","specOptionsChangeEmitter","talentsChangeEmitter","showWhen","getTalents","summonWaterElemental","FocusMagicUptime","extraCssClasses","MageRotationConfig","inputs","InputHelpers.makeRotationEnumInput","name","PrimaryFireSpell","Fireball","FrostfireBolt","Scorch","getTalentTree","rotationChangeEmitter","InputHelpers.makeRotationBooleanInput","InputHelpers.makeRotationNumberInput","enableWhen","arcaneBarrage","improvedScorch","ARCANE_PRERAID_PRESET","PresetUtils.makePresetGear","talentTree","ARCANE_P1_PRESET","P1ArcaneGear","ARCANE_P2_PRESET","P2ArcaneGear","ARCANE_P3_PRESET_ALLIANCE","P3ArcaneAllianceGear","faction","Faction","Alliance","ARCANE_P3_PRESET_HORDE","P3ArcaneHordeGear","Horde","ARCANE_P4_PRESET_ALLIANCE","P4ArcaneAllianceGear","ARCANE_P4_PRESET_HORDE","P4ArcaneHordeGear","FIRE_PRERAID_PRESET","PreraidFireGear","FIRE_P1_PRESET","P1FireGear","FIRE_P2_PRESET","P2FireGear","customCondition","icyVeins","FIRE_P3_PRESET_ALLIANCE","P3FireAllianceGear","FIRE_P3_PRESET_HORDE","P3FireHordeGear","FIRE_P4_PRESET_ALLIANCE","P4FireAllianceGear","FIRE_P4_PRESET_HORDE","P4FireHordeGear","FFB_P2_PRESET","P2FfbGear","FFB_P3_PRESET_ALLIANCE","P3FfbAllianceGear","FFB_P3_PRESET_HORDE","P3FfbHordeGear","FFB_P4_PRESET_ALLIANCE","P4FfbAllianceGear","FFB_P4_PRESET_HORDE","P4FfbHordeGear","FROST_P1_PRESET","P1FrostGear","FROST_P2_PRESET","P2FrostGear","FROST_P3_PRESET_ALLIANCE","P3FrostAllianceGear","FROST_P3_PRESET_HORDE","P3FrostHordeGear","DefaultSimpleRotation","MageRotation","create","only3ArcaneBlastStacksBelowManaPercent","blastWithoutMissileBarrageAboveManaPercent","missileBarrageBelowManaPercent","useArcaneBarrage","primaryFireSpell","maintainImprovedScorch","useIceLance","ROTATION_PRESET_SIMPLE","PresetUtils.makePresetSimpleRotation","Spec","SpecMage","ARCANE_ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","ArcaneApl","ARCANE_ROTATION_PRESET_AOE","ArcaneAoeApl","FIRE_ROTATION_PRESET_DEFAULT","FireApl","FROSTFIRE_ROTATION_PRESET_DEFAULT","FrostFireApl","FIRE_ROTATION_PRESET_AOE","FireAoeApl","FROST_ROTATION_PRESET_DEFAULT","FrostApl","FROST_ROTATION_PRESET_AOE","FrostAoeApl","ArcaneTalents","data","SavedTalents","talentsString","glyphs","Glyphs","major1","MageMajorGlyph","GlyphOfArcaneBlast","major2","GlyphOfArcaneMissiles","major3","GlyphOfMoltenArmor","minor1","MageMinorGlyph","GlyphOfSlowFall","minor2","GlyphOfFrostWard","minor3","GlyphOfBlastWave","FireTalents","GlyphOfFireball","GlyphOfLivingBomb","Phase3FireTalents","GlyphOfArcaneIntellect","FrostfireTalents","GlyphOfFrostfire","FrostTalents","GlyphOfFrostbolt","GlyphOfEternalWater","DefaultFFBOptions","MageOptions","armor","DefaultFireOptions","focusMagicPercentUptime","focusMagicTarget","UnitReference","DefaultFireConsumes","Consumes","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFirecrackerSalmon","defaultPotion","Potions","PotionOfSpeed","defaultConjured","Conjured","ConjuredFlameCap","prepopPotion","waterElementalDisobeyChance","FoodFishFeast","DefaultArcaneOptions","DefaultArcaneConsumes","ConjuredDarkRune","OtherDefaults","distanceFromTarget","profession1","Profession","Engineering","profession2","Tailoring","nibelungAverageCasts","MageSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","modifyDisplayStats","stats","Stats","addStat","arcaneFocus","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","talents","defaults","gear","Presets.FIRE_P3_PRESET_HORDE","epWeights","fromMap","consumes","Presets.DefaultFireConsumes","rotation","Presets.DefaultSimpleRotation","Presets.Phase3FireTalents","specOptions","Presets.DefaultFireOptions","other","Presets.OtherDefaults","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","bloodlust","manaSpringTotem","wrathOfAirTotem","divineSpirit","swiftRetribution","sanctifiedRetribution","demonicPact","moonkinAura","arcaneBrilliance","partyBuffs","PartyBuffs","manaTideTotems","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","innervates","vampiricTouch","focusMagic","debuffs","Debuffs","judgementOfWisdom","misery","ebonPlaguebringer","shadowMastery","heartOfTheCrusader","playerIconInputs","MageInputs.Armor","rotationInputs","MageInputs.MageRotationConfig","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","MageInputs.FocusMagicUptime","MageInputs.WaterElementalDisobeyChance","OtherInputs.ReactionTime","OtherInputs.DistanceFromTarget","OtherInputs.TankAssignment","OtherInputs.nibelungAverageCasts","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_SIMPLE","Presets.ARCANE_ROTATION_PRESET_DEFAULT","Presets.FIRE_ROTATION_PRESET_DEFAULT","Presets.FROSTFIRE_ROTATION_PRESET_DEFAULT","Presets.FROST_ROTATION_PRESET_DEFAULT","Presets.ARCANE_ROTATION_PRESET_AOE","Presets.FIRE_ROTATION_PRESET_AOE","Presets.FROST_ROTATION_PRESET_AOE","Presets.ArcaneTalents","Presets.FireTalents","Presets.FrostfireTalents","Presets.FrostTalents","Presets.ARCANE_PRERAID_PRESET","Presets.FIRE_PRERAID_PRESET","Presets.ARCANE_P1_PRESET","Presets.FIRE_P1_PRESET","Presets.FROST_P1_PRESET","Presets.ARCANE_P2_PRESET","Presets.FIRE_P2_PRESET","Presets.FROST_P2_PRESET","Presets.FFB_P2_PRESET","Presets.ARCANE_P3_PRESET_ALLIANCE","Presets.ARCANE_P3_PRESET_HORDE","Presets.FROST_P3_PRESET_ALLIANCE","Presets.FROST_P3_PRESET_HORDE","Presets.FIRE_P3_PRESET_ALLIANCE","Presets.FFB_P3_PRESET_ALLIANCE","Presets.FFB_P3_PRESET_HORDE","Presets.FIRE_P4_PRESET_HORDE","Presets.FIRE_P4_PRESET_ALLIANCE","Presets.FFB_P4_PRESET_HORDE","Presets.FFB_P4_PRESET_ALLIANCE","Presets.ARCANE_P4_PRESET_HORDE","Presets.ARCANE_P4_PRESET_ALLIANCE","autoRotation","sim","encounter","targets","length","simpleRotation","simple","cooldowns","prepullActions","actions","AplUtils.standardCooldownDefaults","prepullMirrorImage","APLPrepullAction","fromJsonString","berserking","APLAction","hyperspeedAcceleration","combatPot","evocation","arcaneBlastBelowStacks","toFixed","arcaneMissilesWithMissileBarrageBelowMana","arcaneMisslesWithMissileBarrage","arcaneBlastAboveMana","arcaneMissiles","maintainImpScorch","pyroWithHotStreak","livingBomb","cheekyFireBlastFinisher","scorchFinisher","fireball","frostfireBolt","scorch","deepFreeze","frostfireBoltWithBrainFreeze","frostbolt","iceLance","push","filter","a","APLRotation","priorityList","map","action","APLListItem"],"mappings":"ydAea,MAAAA,EAAQC,EAAoE,CACxFC,UAAW,QACXC,OAAQ,CACP,CAAEC,MAAOC,EAAUC,QAASC,QAAS,YACrC,CAAEC,SAAUC,EAASC,YAAY,OAAQN,MAAOC,EAAUM,WAC1D,CAAEH,SAAUC,EAASC,YAAY,OAAQN,MAAOC,EAAUO,gBAI/CC,EAA8BC,EAAuD,CACjGZ,UAAW,8BACXa,SAAS,EACTC,MAAO,sBACPC,aAAc,8IACdC,cAAgBC,GAAkCC,EAAWC,MAAM,CAACF,EAAOG,yBAA0BH,EAAOI,uBAC5GC,SAAWL,GAAkCA,EAAOM,aAAaC,uBAGrDC,EAAmBb,EAAuD,CACtFZ,UAAW,0BACXc,MAAO,6BACPC,aAAc,0CACdW,gBAAiB,CAAC,0BAGNC,EAAqB,CACjCC,OAAQ,CAIPC,EAAoE,CACnE7B,UAAW,mBACXc,MAAO,gBACPb,OAAQ,CACP,CAAE6B,KAAM,WAAY5B,MAAO6B,EAAiBC,UAC5C,CAAEF,KAAM,iBAAkB5B,MAAO6B,EAAiBE,eAClD,CAAEH,KAAM,SAAU5B,MAAO6B,EAAiBG,SAE3CZ,SAAWL,GAA4D,GAA1BA,EAAOkB,gBACpDnB,cAAgBC,GAAkCC,EAAWC,MAAM,CAACF,EAAOmB,sBAAuBnB,EAAOI,yBAK1GgB,EAAqD,CACpDrC,UAAW,cACXc,MAAO,gBACPC,aAAc,2EACdO,SAAWL,GAA4D,GAA1BA,EAAOkB,gBACpDnB,cAAgBC,GAAkCC,EAAWC,MAAM,CAACF,EAAOmB,sBAAuBnB,EAAOI,yBAK1GiB,EAAoD,CACnDtC,UAAW,yCACXa,SAAS,EACTC,MAAO,uCACPC,aAAc,gFACdO,SAAWL,GAA4D,GAA1BA,EAAOkB,gBACpDnB,cAAgBC,GAAkCC,EAAWC,MAAM,CAACF,EAAOmB,sBAAuBnB,EAAOI,yBAE1GiB,EAAoD,CACnDtC,UAAW,6CACXa,SAAS,EACTC,MAAO,0CACPC,aAAc,uEACdO,SAAWL,GAA4D,GAA1BA,EAAOkB,gBACpDnB,cAAgBC,GAAkCC,EAAWC,MAAM,CAACF,EAAOmB,sBAAuBnB,EAAOI,yBAE1GiB,EAAoD,CACnDtC,UAAW,iCACXa,SAAS,EACTC,MAAO,wCACPC,aAAc,wGACdO,SAAWL,GAA4D,GAA1BA,EAAOkB,gBACpDnB,cAAgBC,GAAkCC,EAAWC,MAAM,CAACF,EAAOmB,sBAAuBnB,EAAOI,yBAE1GgB,EAAqD,CACpDrC,UAAW,mBACXc,MAAO,qBACPC,aAAc,2CACdwB,WAAatB,GAAkCA,EAAOM,aAAaiB,cACnElB,SAAWL,GAA4D,GAA1BA,EAAOkB,gBACpDnB,cAAgBC,GAAkCC,EAAWC,MAAM,CAACF,EAAOmB,sBAAuBnB,EAAOI,yBAG1GgB,EAAqD,CACpDrC,UAAW,yBACXc,MAAO,uBACPC,aAAc,sEACdO,SAAWL,GAAkCA,EAAOM,aAAakB,eAAiB,EAClFzB,cAAgBC,GAAkCC,EAAWC,MAAM,CAACF,EAAOmB,sBAAuBnB,EAAOI,i/hBC7C/FqB,GAAwBC,EAA2B,qbAA4C,CAAEC,WAAY,IAC7GC,GAAmBF,EAA2B,mBAAoBG,EAAc,CAAEF,WAAY,IAC9FG,GAAmBJ,EAA2B,mBAAoBK,EAAc,CAAEJ,WAAY,IAC9FK,GAA4BN,EAA2B,uBAAwBO,EAAsB,CAAEN,WAAY,EAAGO,QAASC,EAAQC,WACvIC,GAAyBX,EAA2B,uBAAwBY,EAAmB,CAAEX,WAAY,EAAGO,QAASC,EAAQI,QACjIC,GAA4Bd,EAA2B,uBAAwBe,EAAsB,CAAEd,WAAY,EAAGO,QAASC,EAAQC,WACvIM,GAAyBhB,EAA2B,uBAAwBiB,GAAmB,CAAEhB,WAAY,EAAGO,QAASC,EAAQI,QACjIK,GAAsBlB,EAA2B,sBAAuBmB,GAAiB,CAAElB,WAAY,IACvGmB,GAAiBpB,EAA2B,iBAAkBqB,GAAY,CAAEpB,WAAY,IACxFqB,GAAiBtB,EAA2B,iBAAkBuB,GAAY,CAAEtB,WAAY,EAAGuB,gBAAkBlD,IAAmCA,EAAOM,aAAa6C,WACpKC,GAA0B1B,EAA2B,qBAAsB2B,GAAoB,CAAE1B,WAAY,EAAGO,QAASC,EAAQC,SAAUc,gBAAkBlD,IAAmCA,EAAOM,aAAa6C,WACpNG,GAAuB5B,EAA2B,qBAAsB6B,GAAiB,CAAE5B,WAAY,EAAGO,QAASC,EAAQI,MAAOW,gBAAkBlD,IAAmCA,EAAOM,aAAa6C,WAC3MK,GAA0B9B,EAA2B,qBAAsB+B,GAAoB,CAAE9B,WAAY,EAAGO,QAASC,EAAQC,SAAUc,gBAAkBlD,IAAmCA,EAAOM,aAAa6C,WACpNO,GAAuBhC,EAA2B,qBAAsBiC,GAAiB,CAAEhC,WAAY,EAAGO,QAASC,EAAQI,MAAOW,gBAAkBlD,IAAmCA,EAAOM,aAAa6C,WAC3MS,GAAgBlC,EAA2B,gBAAiBmC,GAAW,CAAElC,WAAY,EAAGuB,gBAAkBlD,GAAkCA,EAAOM,aAAa6C,WAChKW,GAAyBpC,EAA2B,oBAAqBqC,GAAmB,CAAEpC,WAAY,EAAGuB,gBAAkBlD,GAAkCA,EAAOM,aAAa6C,WACrLa,GAAsBtC,EAA2B,oBAAqBuC,GAAgB,CAAEtC,WAAY,EAAGuB,gBAAkBlD,GAAkCA,EAAOM,aAAa6C,WAC/Ke,GAAyBxC,EAA2B,oBAAqByC,GAAmB,CAAExC,WAAY,EAAGuB,gBAAkBlD,GAAkCA,EAAOM,aAAa6C,WACrLiB,GAAsB1C,EAA2B,oBAAqB2C,GAAgB,CAAE1C,WAAY,EAAGuB,gBAAkBlD,GAAkCA,EAAOM,aAAa6C,WAC/KmB,GAAkB5C,EAA2B,kBAAmB6C,GAAa,CAAE5C,WAAY,IAC3F6C,GAAkB9C,EAA2B,kBAAmB+C,GAAa,CAAE9C,WAAY,IAC3F+C,GAA2BhD,EAA2B,sBAAuBiD,GAAqB,CAAEhD,WAAY,EAAGO,QAASC,EAAQC,WACpIwC,GAAwBlD,EAA2B,sBAAuBmD,GAAkB,CAAElD,WAAY,EAAGO,QAASC,EAAQI,QAE9HuC,GAAwBC,EAAaC,OAAO,CACxDC,uCAAwC,IACxCC,2CAA4C,GAC5CC,+BAAgC,EAChCC,kBAAkB,EAElBC,iBAAkBvE,EAAiBC,SACnCuE,wBAAwB,EAExBC,aAAa,IAGDC,GAAyBC,EAAqC,iBAAkBC,EAAKC,SAAUb,IAC/Fc,GAAiCC,EAAkC,SAAUC,GAAW,CAAEnE,WAAY,IACtGoE,GAA6BF,EAAkC,aAAcG,GAAc,CAAErE,WAAY,IACzGsE,GAA+BJ,EAAkC,OAAQK,GAAS,CAAEvE,WAAY,IAChGwE,GAAoCN,EAAkC,YAAaO,GAAc,CAAEzE,WAAY,IAC/G0E,GAA2BR,EAAkC,WAAYS,GAAY,CAAE3E,WAAY,IACnG4E,GAAgCV,EAAkC,QAASW,GAAU,CAAE7E,WAAY,IACnG8E,GAA4BZ,EAAkC,YAAaa,GAAa,CAAE/E,WAAY,IAItGgF,GAAgB,CAC5B9F,KAAM,SACN+F,KAAMC,EAAa7B,OAAO,CACzB8B,cAAe,6CACfC,OAAQC,EAAOhC,OAAO,CACrBiC,OAAQC,EAAeC,mBACvBC,OAAQF,EAAeG,sBACvBC,OAAQJ,EAAeK,mBACvBC,OAAQC,EAAeC,gBACvBC,OAAQF,EAAeG,iBACvBC,OAAQJ,EAAeK,sBAIbC,GAAc,CAC1BlH,KAAM,OACN+F,KAAMC,EAAa7B,OAAO,CACzB8B,cAAe,8CACfC,OAAQC,EAAOhC,OAAO,CACrBiC,OAAQC,EAAec,gBACvBZ,OAAQF,EAAeK,mBACvBD,OAAQJ,EAAee,kBACvBT,OAAQC,EAAeC,gBACvBC,OAAQF,EAAeG,iBACvBC,OAAQJ,EAAeK,sBAKbI,GAAoB,CAChCrH,KAAM,eACN+F,KAAMC,EAAa7B,OAAO,CACzB8B,cAAe,8CACfC,OAAQC,EAAOhC,OAAO,CACrBiC,OAAQC,EAAec,gBACvBZ,OAAQF,EAAeK,mBACvBD,OAAQJ,EAAee,kBACvBT,OAAQC,EAAeU,uBACvBR,OAAQF,EAAeC,qBAKbU,GAAmB,CAC/BvH,KAAM,YACN+F,KAAMC,EAAa7B,OAAO,CACzB8B,cAAe,0CACfC,OAAQC,EAAOhC,OAAO,CACrBiC,OAAQC,EAAemB,iBACvBjB,OAAQF,EAAeK,mBACvBD,OAAQJ,EAAee,kBACvBT,OAAQC,EAAeC,gBACvBC,OAAQF,EAAeG,iBACvBC,OAAQJ,EAAeK,sBAIbQ,GAAe,CAC3BzH,KAAM,QACN+F,KAAMC,EAAa7B,OAAO,CACzB8B,cAAe,+CACfC,OAAQC,EAAOhC,OAAO,CACrBiC,OAAQC,EAAeqB,iBACvBnB,OAAQF,EAAesB,oBACvBlB,OAAQJ,EAAeK,mBACvBC,OAAQC,EAAeC,gBACvBC,OAAQF,EAAeG,iBACvBC,OAAQJ,EAAeK,sBAKbW,GAAoBC,EAAY1D,OAAO,CACnD2D,MAAOzJ,EAAUO,cAGLmJ,GAAqBF,EAAY1D,OAAO,CACpD2D,MAAOzJ,EAAUO,YACjBoJ,wBAAyB,GACzBC,iBAAkBC,EAAc/D,WAGpBgE,GAAsBC,EAASjE,OAAO,CAClDkE,MAAOC,EAAMC,oBACbC,KAAMC,EAAKC,sBACXC,cAAeC,EAAQC,cACvBC,gBAAiBC,EAASC,iBAC1BC,aAAcL,EAAQC,gBAGYhB,EAAY1D,OAAO,CACrD2D,MAAOzJ,EAAUO,YACjBqJ,iBAAkBC,EAAc/D,SAChC+E,4BAA6B,KAGMd,EAASjE,OAAO,CACnDwE,cAAeC,EAAQC,cACvBC,gBAAiBC,EAASC,iBAC1BX,MAAOC,EAAMC,oBACbC,KAAMC,EAAKU,gBAGC,MAAAC,GAAuBvB,EAAY1D,OAAO,CACtD2D,MAAOzJ,EAAUO,YACjBoJ,wBAAyB,GACzBC,iBAAkBC,EAAc/D,WAGpBkF,GAAwBjB,EAASjE,OAAO,CACpDwE,cAAeC,EAAQC,cACvBC,gBAAiBC,EAASO,iBAC1BjB,MAAOC,EAAMC,oBACbC,KAAMC,EAAKC,wBAGCa,GAAgB,CAC5BC,mBAAoB,GACpBC,YAAaC,EAAWC,YACxBC,YAAaF,EAAWG,UACxBC,qBAAsB,ICpNhB,MAAMC,WAAkBC,EAC9B,WAAAC,CAAYC,EAAyB/K,GACpCgL,MAAMD,EAAY/K,EAAQ,CACzBiL,SAAU,cACVC,UAAW,OAEXC,YAAa,GAIbC,QAAS,CACRC,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,SAGNC,gBAAiBR,EAAKG,eAEtBM,aAAc,CACbT,EAAKU,WACLV,EAAKW,SACLX,EAAKY,YACLZ,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,SAENM,mBAAqBlM,IAChB,IAAAmM,EAAQ,IAAIC,EAMT,OAJwB,IAA3BpM,EAAOkB,kBACFiL,EAAAA,EAAME,QAAQhB,EAAKI,aAAgD,EAAlCzL,EAAOM,aAAagM,YAAkBC,IAGzE,CACNC,QAASL,EAAA,EAIXM,SAAU,CAETC,KAAMC,GAA6BD,KAEnCE,UAAWR,EAAMS,QAAQ,CACxB,CAACxB,EAAKC,eAAgB,IACtB,CAACD,EAAKE,YAAa,IACnB,CAACF,EAAKG,gBAAiB,EACvB,CAACH,EAAKI,cAAe,IACrB,CAACJ,EAAKK,eAAgB,IACtB,CAACL,EAAKM,gBAAiB,IACvB,CAACN,EAAKO,SAAU,MAGjBkB,SAAUC,GAEVC,SAAUC,GAEVT,QAASU,GAA0BtG,KAEnCuG,YAAaC,GACbC,MAAOC,GAEPC,UAAWC,EAAUxI,OAAO,CAC3ByI,cAAeC,EAAeC,uBAC9BC,WAAW,EACXC,gBAAiBH,EAAeC,uBAChCG,iBAAiB,EACjBC,cAAc,EACdC,kBAAkB,EAClBC,uBAAuB,EACvBC,YAAa,IACbC,YAAaT,EAAeC,uBAC5BS,kBAAkB,IAEnBC,WAAYC,EAAWtJ,OAAO,CAC7BuJ,eAAgB,IAEjBC,gBAAiBC,EAAgBzJ,OAAO,CACvC0J,iBAAiB,EACjBC,iBAAkBjB,EAAeC,uBACjCiB,WAAY,EACZC,eAAe,EACfC,YAAY,IAEbC,QAASC,EAAQhK,OAAO,CACvBiK,mBAAmB,EACnBC,QAAQ,EACRC,mBAAmB,EACnBC,eAAe,EACfC,oBAAoB,KAKtBC,iBAAkB,CACjBC,GAGDC,eAAgBC,EAEhBC,wBAAyB,GAGzBC,wBAAyB,GAGzBC,YAAa,CACZjP,OAAQ,CACPkP,EACAC,EACAC,EACAC,EACAC,EACAC,IAGFC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAERC,UAAW,CACVC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,IAGDtE,QAAS,CACRuE,GACAC,GACAC,GACAC,GACAhE,IAGDR,KAAM,CACLyE,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACArF,GACAsF,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,KAIFC,aAAezS,IACR,MAAA2B,EAAa3B,EAAOkB,gBAE1B,OADmBlB,EAAO0S,IAAIC,UAAUC,QAAQC,OAC/B,EACE,GAAdlR,EACIiP,GAAmC5D,SAASA,SAC3B,GAAdrL,EACHkP,GAAiC7D,SAASA,SAE1C8D,GAAkC9D,SAASA,SAE3B,GAAdrL,EACH6O,GAAuCxD,SAASA,SAC/B,GAAdrL,EACH8O,GAAqCzD,SAASA,SAE9C2D,GAAsC3D,SAASA,QACvD,EAGD8F,eAAgB,CAAC9S,EAA+B+S,EAAsBC,KACrE,IAAKC,EAAgBC,GAAWC,EAAkCH,GAE5D,MAAAI,EAAqBC,EAAiBC,eAAe,8FAErDC,EAAaC,EAAUF,eAAe,yHACtCG,EAAyBD,EAAUF,eAAe,yHAClDI,EAAYF,EAAUF,eAAe,uIACrCK,EAAYH,EAAUF,eAAe,+IAErCM,EAAyBJ,EAAUF,eAAe,yUAAyX,IAAhDP,EAAO9N,wCAA8C4O,QAAQ,6DACxbC,EAA4CN,EAAUF,eAAe,0KAAkN,IAAxCP,EAAO5N,gCAAsC0O,QAAQ,0DACpSE,EAAkCP,EAAUF,eAAe,yHAC3DU,EAAuBR,EAAUF,eAAe,4FAAgJ,IAApDP,EAAO7N,4CAAkD2O,QAAQ,uDAC7MI,EAAiBT,EAAUF,eAAe,+CAC1C/R,EAAgBiS,EAAUF,eAAe,+CAEzCY,EAAoBV,EAAUF,eAAe,kJAC7Ca,EAAoBX,EAAUF,eAAe,yHAC7Cc,EAAaZ,EAAUF,eAAe,8MACtCe,EAA0Bb,EAAUF,eAAe,kKACnDgB,EAAiBd,EAAUF,eAAe,yIAC1CiB,EAAWf,EAAUF,eAAe,+CACpCkB,EAAgBhB,EAAUF,eAAe,+CACzCmB,EAASjB,EAAUF,eAAe,+CAElCoB,EAAalB,EAAUF,eAAe,yGACtCqB,EAA+BnB,EAAUF,eAAe,yHACxDsB,EAAYpB,EAAUF,eAAe,+CACrCuB,EAAWrB,EAAUF,eAAe,kKAE1CL,EAAe6B,KAAK1B,GAChBpT,EAAOM,aAAakB,eAAiB,GAAKuR,EAAOzN,wBACpD4N,EAAQ4B,KAAKZ,GAGR,MAAAvS,EAAa3B,EAAOkB,gBAqC1B,OApCkB,GAAdS,EACHuR,EAAQ4B,QAAQ,CACfvB,EACAE,EACAC,EACAX,EAAO5N,+BAAiC,EAAI2O,EAA4C,KACxFF,EACAG,EACAJ,EACAK,EACAjB,EAAO3N,iBAAmB7D,EAAgB,KAC1C0S,GACCc,QAAYC,GAAAA,KACU,GAAdrT,EACVuR,EAAQ4B,QAAQ,CACfX,EACAC,EACAC,EACAC,EACAvB,EAAO1N,kBAAoBvE,EAAiBC,SACzCwT,EACCxB,EAAO1N,kBAAoBvE,EAAiBE,cAC5CwT,EAAgBC,GACnBM,QAAYC,GAAAA,KACU,GAAdrT,GACVuR,EAAQ4B,QAAQ,CACfvB,EACAE,EACAE,EACAe,EACAC,EACA5B,EAAOxN,YAAcsP,EAAW,KAChCD,GACCG,QAAYC,GAAAA,KAGRC,EAAYjQ,OAAO,CACzBiO,eAAAA,EACAiC,aAAchC,EAAQiC,KAAIC,GAAUC,EAAYrQ,OAAO,CACtDoQ,cAED,GAGJ"}