{"version":3,"file":"sim-f8087bd9.chunk.js","sources":["../../../ui/warlock/presets.ts","../../../ui/warlock/inputs.ts","../../../ui/warlock/sim.ts"],"sourcesContent":["import {\n\tConsumes,\n\tFlask,\n\tFood,\n\tPetFood,\n\tGlyphs,\n\tPotions,\n\tRaidBuffs,\n\tIndividualBuffs,\n\tDebuffs,\n\tTristateEffect,\n\tFaction,\n\tSpec, Profession,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tWarlock_Rotation as WarlockRotation,\n\tWarlock_Options as WarlockOptions,\n\tWarlock_Rotation_PrimarySpell as PrimarySpell,\n\tWarlock_Rotation_SecondaryDot as SecondaryDot,\n\tWarlock_Rotation_SpecSpell as SpecSpell,\n\tWarlock_Rotation_Curse as Curse,\n\tWarlock_Options_WeaponImbue as WeaponImbue,\n\tWarlock_Options_Armor as Armor,\n\tWarlock_Options_Summon as Summon,\n\tWarlockMajorGlyph as MajorGlyph,\n\tWarlockMinorGlyph as MinorGlyph,\n} from '../core/proto/warlock.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\nimport SwpGear from './gear_sets/swp.gear.json';\nimport PreraidAfflictionGear from './gear_sets/preraid_affliction.gear.json';\nimport P1AfflictionGear from './gear_sets/p1_affliction.gear.json';\nimport P2AfflictionGear from './gear_sets/p2_affliction.gear.json';\nimport P3AfflictionAllianceGear from './gear_sets/p3_affliction_alliance.gear.json';\nimport P3AfflictionHordeGear from './gear_sets/p3_affliction_horde.gear.json';\nimport PreraidDemoDestroGear from './gear_sets/preraid_demodestro.gear.json';\nimport P1DemoDestroGear from './gear_sets/p1_demodestro.gear.json';\nimport P2DemoDestroGear from './gear_sets/p2_demodestro.gear.json';\nimport P3DemoAllianceGear from './gear_sets/p3_demo_alliance.gear.json';\nimport P3DemoHordeGear from './gear_sets/p3_demo_horde.gear.json';\nimport P3DestroAllianceGear from './gear_sets/p3_destro_alliance.gear.json';\nimport P3DestroHordeGear from './gear_sets/p3_destro_horde.gear.json';\n\nimport DemoApl from './apls/demo.apl.json';\nimport DestroApl from './apls/destro.apl.json';\n\nexport const BIS_TOOLTIP = 'This gear preset is inspired from Zephan\\'s Affliction guide: https://www.warcrafttavern.com/wotlk/guides/pve-affliction-warlock/';\n\nexport const SWP_BIS = PresetUtils.makePresetGear('Straight Outa SWP', SwpGear);\nexport const PRERAID_AFFLICTION_PRESET = PresetUtils.makePresetGear('Preraid Affliction', PreraidAfflictionGear, { tooltip: BIS_TOOLTIP, talentTree: 0 });\nexport const P1_AFFLICTION_PRESET = PresetUtils.makePresetGear('P1 Affliction', P1AfflictionGear, { tooltip: BIS_TOOLTIP, talentTree: 0 });\nexport const P2_AFFLICTION_PRESET = PresetUtils.makePresetGear('P2 Affliction', P2AfflictionGear, { tooltip: BIS_TOOLTIP, talentTree: 0 });\nexport const P3_AFFLICTION_ALLIANCE_PRESET = PresetUtils.makePresetGear('P3 Affliction [A]', P3AfflictionAllianceGear, { tooltip: BIS_TOOLTIP, talentTree: 0, faction: Faction.Alliance });\nexport const P3_AFFLICTION_HORDE_PRESET = PresetUtils.makePresetGear('P3 Affliction [H]', P3AfflictionHordeGear, { tooltip: BIS_TOOLTIP, talentTree: 0, faction: Faction.Horde });\nexport const PRERAID_DEMODESTRO_PRESET = PresetUtils.makePresetGear('Preraid Demo/Destro', PreraidDemoDestroGear, { tooltip: BIS_TOOLTIP, talentTrees: [1,2] });\nexport const P1_DEMODESTRO_PRESET = PresetUtils.makePresetGear('P1 Demo/Destro', P1DemoDestroGear, { tooltip: BIS_TOOLTIP, talentTrees: [1,2] });\nexport const P2_DEMODESTRO_PRESET = PresetUtils.makePresetGear('P2 Demo/Destro', P2DemoDestroGear, { tooltip: BIS_TOOLTIP, talentTrees: [1,2] });\nexport const P3_DEMO_ALLIANCE_PRESET = PresetUtils.makePresetGear('P3 Demo [A]', P3DemoAllianceGear, { tooltip: BIS_TOOLTIP, talentTree: 1, faction: Faction.Alliance });\nexport const P3_DEMO_HORDE_PRESET = PresetUtils.makePresetGear('P3 Demo [H]', P3DemoHordeGear, { tooltip: BIS_TOOLTIP, talentTree: 1, faction: Faction.Horde });\nexport const P3_DESTRO_ALLIANCE_PRESET = PresetUtils.makePresetGear('P3 Destro [A]', P3DestroAllianceGear, { tooltip: BIS_TOOLTIP, talentTree: 2, faction: Faction.Alliance });\nexport const P3_DESTRO_HORDE_PRESET = PresetUtils.makePresetGear('P3 Destro [H]', P3DestroHordeGear, { tooltip: BIS_TOOLTIP, talentTree: 2, faction: Faction.Horde });\n\nexport const AfflictionRotation = WarlockRotation.create({\n\tprimarySpell: PrimarySpell.ShadowBolt,\n\tsecondaryDot: SecondaryDot.UnstableAffliction,\n\tspecSpell: SpecSpell.Haunt,\n\tcurse: Curse.Agony,\n\tcorruption: true,\n\tuseInfernal: false,\n\tdetonateSeed: true,\n});\n\nexport const DemonologyRotation = WarlockRotation.create({\n\tprimarySpell: PrimarySpell.ShadowBolt,\n\tsecondaryDot: SecondaryDot.Immolate,\n\tspecSpell: SpecSpell.NoSpecSpell,\n\tcurse: Curse.Doom,\n\tcorruption: true,\n\tuseInfernal: false,\n\tdetonateSeed: true,\n});\n\nexport const DestructionRotation = WarlockRotation.create({\n\tprimarySpell: PrimarySpell.Incinerate,\n\tsecondaryDot: SecondaryDot.Immolate,\n\tspecSpell: SpecSpell.ChaosBolt,\n\tcurse: Curse.Doom,\n\tcorruption: false,\n\tuseInfernal: false,\n\tdetonateSeed: true,\n});\n\nexport const APL_Demo_Legacy = PresetUtils.makePresetLegacyRotation('Demo Legacy', Spec.SpecWarlock, DemonologyRotation);\nexport const APL_Demo_Default = PresetUtils.makePresetAPLRotation('Demo', DemoApl, { talentTree: 1 });\nexport const APL_Destro_Legacy = PresetUtils.makePresetLegacyRotation('Destro Legacy', Spec.SpecWarlock, DestructionRotation);\nexport const APL_Destro_Default = PresetUtils.makePresetAPLRotation('Destro', DestroApl, { talentTree: 2 });\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\n\nexport const AfflictionTalents = {\n\tname: 'Affliction',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '2350002030023510253500331151--550000051',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfQuickDecay,\n\t\t\tmajor2: MajorGlyph.GlyphOfLifeTap,\n\t\t\tmajor3: MajorGlyph.GlyphOfHaunt,\n\t\t\tminor1: MinorGlyph.GlyphOfSouls,\n\t\t\tminor2: MinorGlyph.GlyphOfDrainSoul,\n\t\t\tminor3: MinorGlyph.GlyphOfSubjugateDemon,\n\t\t}),\n\t}),\n};\n\nexport const DemonologyTalents = {\n\tname: 'Demonology',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-203203301035012530135201351-550000052',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfLifeTap,\n\t\t\tmajor2: MajorGlyph.GlyphOfQuickDecay,\n\t\t\tmajor3: MajorGlyph.GlyphOfFelguard,\n\t\t\tminor1: MinorGlyph.GlyphOfSouls,\n\t\t\tminor2: MinorGlyph.GlyphOfDrainSoul,\n\t\t\tminor3: MinorGlyph.GlyphOfSubjugateDemon,\n\t\t}),\n\t}),\n};\n\nexport const DestructionTalents = {\n\tname: 'Destruction',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-03310030003-05203205210331051335230351',\n\t\tglyphs: Glyphs.create({\n\t\t\tmajor1: MajorGlyph.GlyphOfConflagrate,\n\t\t\tmajor2: MajorGlyph.GlyphOfLifeTap,\n\t\t\tmajor3: MajorGlyph.GlyphOfIncinerate,\n\t\t\tminor1: MinorGlyph.GlyphOfSouls,\n\t\t\tminor2: MinorGlyph.GlyphOfDrainSoul,\n\t\t\tminor3: MinorGlyph.GlyphOfSubjugateDemon,\n\t\t}),\n\t}),\n};\n\nexport const AfflictionOptions = WarlockOptions.create({\n\tarmor: Armor.FelArmor,\n\tsummon: Summon.Felhunter,\n\tweaponImbue: WeaponImbue.GrandSpellstone,\n});\n\nexport const DemonologyOptions = WarlockOptions.create({\n\tarmor: Armor.FelArmor,\n\tsummon: Summon.Felguard,\n\tweaponImbue: WeaponImbue.GrandSpellstone,\n});\n\nexport const DestructionOptions = WarlockOptions.create({\n\tarmor: Armor.FelArmor,\n\tsummon: Summon.Imp,\n\tweaponImbue: WeaponImbue.GrandFirestone,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfTheFrostWyrm,\n\tfood: Food.FoodFishFeast,\n\tpetFood: PetFood.PetFoodSpicedMammothTreats,\n\tdefaultPotion: Potions.PotionOfWildMagic,\n\tprepopPotion: Potions.PotionOfWildMagic,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\n\tarcaneBrilliance: true,\n\tdivineSpirit: true,\n\ttrueshotAura: true,\n\tleaderOfThePack: TristateEffect.TristateEffectImproved,\n\ticyTalons: true,\n\ttotemOfWrath: true,\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\n\twrathOfAirTotem: true,\n\tsanctifiedRetribution: true,\n\tbloodlust: true,\n\tdemonicPact: 500,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tblessingOfKings: true,\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\tvampiricTouch: true,\n});\n\nexport const DestroIndividualBuffs = IndividualBuffs.create({\n\tblessingOfKings: true,\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tsunderArmor: true,\n\tfaerieFire: TristateEffect.TristateEffectImproved,\n\tbloodFrenzy: true,\n\tebonPlaguebringer: true,\n\theartOfTheCrusader: true,\n\tjudgementOfWisdom: true,\n});\n\nexport const DestroDebuffs = Debuffs.create({\n\tsunderArmor: true,\n\tfaerieFire: TristateEffect.TristateEffectImproved,\n\tbloodFrenzy: true,\n\tebonPlaguebringer: true,\n\theartOfTheCrusader: true,\n\tjudgementOfWisdom: true,\n\tshadowMastery: true,\n});\n\nexport const OtherDefaults = {\n\tdistanceFromTarget: 25,\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Tailoring,\n\tchannelClipDelay: 150,\n\tnibelungAverageCasts: 11,\n};\n","import {\n\tWarlock_Options as WarlockOptions,\n\tWarlock_Rotation_Type as RotationType,\n\tWarlock_Rotation_Preset as RotationPreset,\n\tWarlock_Rotation_PrimarySpell as PrimarySpell,\n\tWarlock_Rotation_SecondaryDot as SecondaryDot,\n\tWarlock_Rotation_SpecSpell as SpecSpell,\n\tWarlock_Rotation_Curse as Curse,\n\tWarlock_Options_WeaponImbue as WeaponImbue,\n\tWarlock_Options_Armor as Armor,\n\tWarlock_Options_Summon as Summon,\n} from '../core/proto/warlock.js';\n\nimport { Spec, Glyphs, ItemSlot } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { Player } from '../core/player.js';\nimport { EventID, TypedEvent } from '../core/typed_event.js';\n\nimport * as Presets from './presets.js';\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const ArmorInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecWarlock, Armor>({\n\tfieldName: 'armor',\n\tvalues: [\n\t\t{ value: Armor.NoArmor, tooltip: 'No Armor' },\n\t\t{ actionId: ActionId.fromSpellId(47893), value: Armor.FelArmor },\n\t\t{ actionId: ActionId.fromSpellId(47889), value: Armor.DemonArmor },\n\t],\n});\n\nexport const WeaponImbueInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecWarlock, WeaponImbue>({\n\tfieldName: 'weaponImbue',\n\tvalues: [\n\t\t{ value: WeaponImbue.NoWeaponImbue, tooltip: 'No Weapon Stone' },\n\t\t{ actionId: ActionId.fromItemId(41174), value: WeaponImbue.GrandFirestone },\n\t\t{ actionId: ActionId.fromItemId(41196), value: WeaponImbue.GrandSpellstone },\n\t],\n});\n\nexport const PetInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecWarlock, Summon>({\n\tfieldName: 'summon',\n\tvalues: [\n\t\t{ value: Summon.NoSummon, tooltip: 'No Pet' },\n\t\t{ actionId: ActionId.fromSpellId(688), value: Summon.Imp },\n\t\t{ actionId: ActionId.fromSpellId(712), value: Summon.Succubus },\n\t\t{ actionId: ActionId.fromSpellId(691), value: Summon.Felhunter },\n\t\t{\n\t\t\tactionId: ActionId.fromSpellId(30146), value: Summon.Felguard,\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().summonFelguard,\n\t\t},\n\t],\n\tchangeEmitter: (player: Player<Spec.SpecWarlock>) => player.changeEmitter,\n});\n\nexport const NewDPBehaviour = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecWarlock>({\n\tfieldName: 'newDPBehaviour',\n\tlabel: 'New DP behaviour',\n\tlabelTooltip: 'Changes DP to always be 10% of spell power, 1s ICD',\n});\n\nexport const PrimarySpellInput = InputHelpers.makeRotationEnumIconInput<Spec.SpecWarlock, PrimarySpell>({\n\tfieldName: 'primarySpell',\n\tvalues: [\n\t\t{ actionId: ActionId.fromSpellId(47809), value: PrimarySpell.ShadowBolt },\n\t\t{ actionId: ActionId.fromSpellId(47838), value: PrimarySpell.Incinerate },\n\t\t{ actionId: ActionId.fromSpellId(47836), value: PrimarySpell.Seed },\n\t],\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\n\t\tconst newRotation = player.getRotation();\n\t\tif (newValue == PrimarySpell.Seed && newRotation.corruption == true) {\n\t\t\tnewRotation.corruption = false\n\t\t}\n\t\tnewRotation.primarySpell = newValue\n\t\tnewRotation.preset = RotationPreset.Manual;\n\t\tplayer.setRotation(eventID, newRotation);\n\t},\n});\n\nexport const SecondaryDotInput = InputHelpers.makeRotationEnumIconInput<Spec.SpecWarlock, SecondaryDot>({\n\tfieldName: 'secondaryDot',\n\tvalues: [\n\t\t{ value: SecondaryDot.NoSecondaryDot },\n\t\t{ actionId: ActionId.fromSpellId(47811), value: SecondaryDot.Immolate },\n\t\t{\n\t\t\tactionId: ActionId.fromSpellId(47843), value: SecondaryDot.UnstableAffliction,\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().unstableAffliction,\n\t\t},\n\t],\n\tchangeEmitter: (player: Player<Spec.SpecWarlock>) => player.changeEmitter,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\n\t\tconst newRotation = player.getRotation();\n\t\tnewRotation.secondaryDot = newValue;\n\t\tnewRotation.preset = RotationPreset.Manual;\n\t\tplayer.setRotation(eventID, newRotation);\n\t},\n});\n\nexport const SpecSpellInput = InputHelpers.makeRotationEnumIconInput<Spec.SpecWarlock, SpecSpell>({\n\tfieldName: 'specSpell',\n\tvalues: [\n\t\t{ value: SpecSpell.NoSpecSpell },\n\t\t{\n\t\t\tactionId: ActionId.fromSpellId(59164), value: SpecSpell.Haunt,\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().haunt,\n\t\t},\n\t\t{\n\t\t\tactionId: ActionId.fromSpellId(59172), value: SpecSpell.ChaosBolt,\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().chaosBolt,\n\t\t},\n\t],\n\tchangeEmitter: (player: Player<Spec.SpecWarlock>) => player.changeEmitter,\n\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().haunt || player.getTalents().chaosBolt,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\n\t\tconst newRotation = player.getRotation();\n\t\tnewRotation.specSpell = newValue;\n\t\tnewRotation.preset = RotationPreset.Manual;\n\t\tplayer.setRotation(eventID, newRotation);\n\t},\n});\n\n\nexport const CorruptionSpell = {\n\ttype: 'icon' as const,\n\tid: ActionId.fromSpellId(47813),\n\tstates: 2,\n\textraCssClasses: [\n\t\t'Corruption-picker',\n\t],\n\tchangedEvent: (player: Player<Spec.SpecWarlock>) => player.changeEmitter,\n\tgetValue: (player: Player<Spec.SpecWarlock>) => player.getRotation().corruption,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: boolean) => {\n\t\tconst newRotation = player.getRotation();\n\t\tif (newRotation.primarySpell == PrimarySpell.Seed && newValue == true) {\n\t\t\tnewRotation.primarySpell = PrimarySpell.ShadowBolt\n\t\t}\n\t\tnewRotation.corruption = newValue;\n\t\tnewRotation.preset = RotationPreset.Manual;\n\t\tplayer.setRotation(eventID, newRotation);\n\t},\n};\n\nexport const WarlockRotationConfig = {\n\tinputs: [\n\t\t{\n\t\t\ttype: 'enum' as const,\n\n\t\t\tlabel: 'Sim presets',\n\t\t\tlabelTooltip: 'Quick switch between sim spec presets. Will UPDATE TALENTS and SPELLS to defaults.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Affliction', value: RotationType.Affliction },\n\t\t\t\t{ name: 'Demonology', value: RotationType.Demonology },\n\t\t\t\t{ name: 'Destruction', value: RotationType.Destruction },\n\t\t\t],\n\t\t\tchangedEvent: (player: Player<Spec.SpecWarlock>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (player: Player<Spec.SpecWarlock>) => player.getRotation().type,\n\t\t\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\n\t\t\t\tvar newRotation = player.getRotation();\n\t\t\t\tvar newOptions: WarlockOptions;\n\t\t\t\tvar newGlyphs: Glyphs;\n\t\t\t\tvar newTalents: string;\n\t\t\t\tif (newValue == RotationType.Affliction) {\n\t\t\t\t\tnewTalents = Presets.AfflictionTalents.data.talentsString\n\t\t\t\t\tnewGlyphs = Presets.AfflictionTalents.data.glyphs || Glyphs.create();\n\t\t\t\t\tnewRotation = Presets.AfflictionRotation\n\t\t\t\t\tnewOptions = Presets.AfflictionOptions\n\t\t\t\t} else if (newValue == RotationType.Demonology) {\n\t\t\t\t\tnewTalents = Presets.DemonologyTalents.data.talentsString\n\t\t\t\t\tnewGlyphs = Presets.DemonologyTalents.data.glyphs || Glyphs.create();\n\t\t\t\t\tnewRotation = Presets.DemonologyRotation\n\t\t\t\t\tnewOptions = Presets.DemonologyOptions\n\t\t\t\t} else if (newValue == RotationType.Destruction) {\n\t\t\t\t\tnewTalents = Presets.DestructionTalents.data.talentsString\n\t\t\t\t\tnewGlyphs = Presets.DestructionTalents.data.glyphs || Glyphs.create();\n\t\t\t\t\tnewRotation = Presets.DestructionRotation\n\t\t\t\t\tnewOptions = Presets.DestructionOptions\n\t\t\t\t}\n\t\t\t\tnewRotation.type = newValue;\n\t\t\t\tnewRotation.preset = RotationPreset.Automatic;\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tplayer.setTalentsString(eventID, newTalents);\n\t\t\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t\t\t\tplayer.setGlyphs(eventID, newGlyphs);\n\t\t\t\t\tplayer.setRotation(eventID, newRotation);\n\t\t\t\t});\n\t\t\t},\n\t\t},\n\n\t\t{\n\t\t\ttype: 'enum' as const,\n\t\t\tlabel: 'Spell & Talent',\n\t\t\tlabelTooltip: 'Putting it on Automatic will UPDATE talents and spells to defaults.',\n\t\t\tvalues: [\n\t\t\t\t{ name: \"Manual\", value: RotationPreset.Manual },\n\t\t\t\t{ name: \"Automatic\", value: RotationPreset.Automatic },\n\t\t\t],\n\t\t\tchangedEvent: (player: Player<Spec.SpecWarlock>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (player: Player<Spec.SpecWarlock>) => player.getRotation().preset,\n\t\t\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\n\t\t\t\tvar newRotation = player.getRotation();\n\t\t\t\tif (newValue == RotationPreset.Automatic) {\n\t\t\t\t\tvar newOptions: WarlockOptions;\n\t\t\t\t\tvar newGlyphs: Glyphs;\n\t\t\t\t\tvar newTalents: string;\n\t\t\t\t\tif (newRotation.type == RotationType.Affliction) {\n\t\t\t\t\t\tnewTalents = Presets.AfflictionTalents.data.talentsString\n\t\t\t\t\t\tnewGlyphs = Presets.AfflictionTalents.data.glyphs || Glyphs.create()\n\t\t\t\t\t\tnewRotation = Presets.AfflictionRotation\n\t\t\t\t\t\tnewOptions = Presets.AfflictionOptions\n\t\t\t\t\t} else if (newRotation.type == RotationType.Demonology) {\n\t\t\t\t\t\tnewTalents = Presets.DemonologyTalents.data.talentsString\n\t\t\t\t\t\tnewGlyphs = Presets.DemonologyTalents.data.glyphs || Glyphs.create()\n\t\t\t\t\t\tnewRotation = Presets.DemonologyRotation\n\t\t\t\t\t\tnewOptions = Presets.DemonologyOptions\n\t\t\t\t\t} else if (newRotation.type == RotationType.Destruction) {\n\t\t\t\t\t\tnewTalents = Presets.DestructionTalents.data.talentsString\n\t\t\t\t\t\tnewGlyphs = Presets.DestructionTalents.data.glyphs || Glyphs.create()\n\t\t\t\t\t\tnewRotation = Presets.DestructionRotation\n\t\t\t\t\t\tnewOptions = Presets.DestructionOptions\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewRotation.preset = newValue;\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tif (newValue == RotationPreset.Automatic) {\n\t\t\t\t\t\tplayer.setTalentsString(eventID, newTalents);\n\t\t\t\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t\t\t\t\tplayer.setGlyphs(eventID, newGlyphs);\n\t\t\t\t\t}\n\t\t\t\t\tplayer.setRotation(eventID, newRotation);\n\t\t\t\t});\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'enum' as const,\n\t\t\tlabel: 'Curse',\n\t\t\tlabelTooltip: 'Manual curse selection.',\n\t\t\tvalues: [\n\t\t\t\t{ name: \"None\", value: Curse.NoCurse },\n\t\t\t\t{ name: \"Elements\", value: Curse.Elements },\n\t\t\t\t{ name: \"Weakness\", value: Curse.Weakness },\n\t\t\t\t{ name: \"Doom\", value: Curse.Doom },\n\t\t\t\t{ name: \"Agony\", value: Curse.Agony },\n\t\t\t\t{ name: \"Tongues\", value: Curse.Tongues }\n\t\t\t],\n\t\t\tchangedEvent: (player: Player<Spec.SpecWarlock>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (player: Player<Spec.SpecWarlock>) => player.getRotation().curse,\n\t\t\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\n\t\t\t\tconst newRotation = player.getRotation();\n\t\t\t\tnewRotation.curse = newValue;\n\t\t\t\tnewRotation.preset = RotationPreset.Manual;\n\t\t\t\tplayer.setRotation(eventID, newRotation);\n\t\t\t},\n\t\t},\n\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecWarlock>({\n\t\t\tfieldName: 'useInfernal',\n\t\t\tlabel: 'Summon Infernal',\n\t\t\tlabelTooltip: 'Casts Inferno 60s before the fight is over',\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecWarlock>({\n\t\t\tfieldName: 'detonateSeed',\n\t\t\tlabel: 'Detonate Seed on Cast',\n\t\t\tlabelTooltip: 'Simulates raid doing damage to targets such that seed detonates immediately on cast.',\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getRotation().primarySpell == PrimarySpell.Seed,\n\t\t}),\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecWarlock>({\n\t\t\tfieldName: 'enableWeaponSwap',\n\t\t\tlabel: 'Enable Weapon Swapping',\n\t\t\tlabelTooltip: 'Toggle on/off item swapping',\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getRotation().type == RotationType.Affliction\n\t\t}),\n\t\tInputHelpers.MakeItemSwapInput<Spec.SpecWarlock>({\n\t\t\tfieldName: 'weaponSwap',\n\t\t\tvalues: [\n\t\t\t\tItemSlot.ItemSlotMainHand,\n\t\t\t\tItemSlot.ItemSlotOffHand,\n\t\t\t\tItemSlot.ItemSlotRanged,\n\t\t\t],\n\t\t\tlabelTooltip: 'Start with the swapped items until Corruption has been cast, then swap back to normal gear set. If a slot is empty it will not be used in the swap',\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => (player.getRotation().type == RotationType.Affliction && player.getRotation().enableWeaponSwap) || false\n\t\t}),\n\t],\n};\n","import {\n\tPartyBuffs,\n\tSpec,\n\tStat,\n} from '../core/proto/common.js';\n\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\nimport * as IconInputs from '../core/components/icon_inputs.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as WarlockInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nexport class WarlockSimUI extends IndividualSimUI<Spec.SpecWarlock> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecWarlock>) {\n\t\tsuper(parentElem, player, {\n\t\t\tcssClass: 'warlock-sim-ui',\n\t\t\tcssScheme: 'warlock',\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\n\t\t\tknownIssues: [\n\t\t\t\t\"Drain Soul is currently disabled for APL rotations\"\n\t\t\t],\n\n\t\t\t// All stats for which EP should be calculated.\n\t\t\tepStats: [\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatStamina,\n\t\t\t],\n\t\t\t// Reference stat against which to calculate EP. DPS classes use either spell power or attack power.\n\t\t\tepReferenceStat: Stat.StatSpellPower,\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\t\t\tdisplayStats: [\n\t\t\t\tStat.StatHealth,\n\t\t\t\tStat.StatIntellect,\n\t\t\t\tStat.StatSpirit,\n\t\t\t\tStat.StatSpellPower,\n\t\t\t\tStat.StatSpellHit,\n\t\t\t\tStat.StatSpellCrit,\n\t\t\t\tStat.StatSpellHaste,\n\t\t\t\tStat.StatMP5,\n\t\t\t\tStat.StatStamina,\n\t\t\t],\n\n\t\t\tdefaults: {\n\t\t\t\t// Default equipped gear.\n\t\t\t\tgear: Presets.P3_AFFLICTION_HORDE_PRESET.gear,\n\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\n\t\t\t\tepWeights: Stats.fromMap({\n\t\t\t\t\t[Stat.StatIntellect]: 0.18,\n\t\t\t\t\t[Stat.StatSpirit]: 0.54,\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t\t\t[Stat.StatSpellHit]: 0.93,\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.53,\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.81,\n\t\t\t\t\t[Stat.StatStamina]: 0.01,\n\t\t\t\t}),\n\t\t\t\t// Default consumes settings.\n\t\t\t\tconsumes: Presets.DefaultConsumes,\n\n\t\t\t\t// Default rotation settings.\n\t\t\t\trotation: Presets.AfflictionRotation,\n\t\t\t\t// Default talents.\n\t\t\t\ttalents: Presets.AfflictionTalents.data,\n\t\t\t\t// Default spec-specific settings.\n\t\t\t\tspecOptions: Presets.AfflictionOptions,\n\n\t\t\t\t// Default buffs and debuffs settings.\n\t\t\t\traidBuffs: Presets.DefaultRaidBuffs,\n\n\t\t\t\tpartyBuffs: PartyBuffs.create({}),\n\n\t\t\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\n\t\t\t\tdebuffs: Presets.DefaultDebuffs,\n\n\t\t\t\tother: Presets.OtherDefaults,\n\t\t\t},\n\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\n\t\t\tplayerIconInputs: [\n\t\t\t\tWarlockInputs.PetInput,\n\t\t\t\tWarlockInputs.ArmorInput,\n\t\t\t\tWarlockInputs.WeaponImbueInput,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\n\t\t\trotationIconInputs: [\n\t\t\t\tWarlockInputs.PrimarySpellInput,\n\t\t\t\tWarlockInputs.CorruptionSpell,\n\t\t\t\tWarlockInputs.SecondaryDotInput,\n\t\t\t\tWarlockInputs.SpecSpellInput,\n\t\t\t],\n\t\t\trotationInputs: WarlockInputs.WarlockRotationConfig,\n\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\t\t\tincludeBuffDebuffInputs: [\n\t\t\t\tIconInputs.ReplenishmentBuff,\n\t\t\t\tIconInputs.MajorArmorDebuff,\n\t\t\t\tIconInputs.MinorArmorDebuff,\n\t\t\t\tIconInputs.PhysicalDamageDebuff,\n\t\t\t\tIconInputs.MeleeHasteBuff,\n\t\t\t\tIconInputs.MeleeCritBuff,\n\t\t\t\tIconInputs.MP5Buff,\n\t\t\t\tIconInputs.AttackPowerPercentBuff,\n\t\t\t\tIconInputs.AttackPowerBuff,\n\t\t\t\tIconInputs.StrengthAndAgilityBuff,\n\t\t\t\tIconInputs.StaminaBuff,\n\t\t\t],\n\t\t\texcludeBuffDebuffInputs: [\n\t\t\t],\n\t\t\tpetConsumeInputs: [\n\t\t\t\tIconInputs.SpicedMammothTreats,\n\t\t\t],\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\n\t\t\totherInputs: {\n\t\t\t\tinputs: [\n\t\t\t\t\tOtherInputs.DistanceFromTarget,\n\t\t\t\t\tOtherInputs.TankAssignment,\n\t\t\t\t\tOtherInputs.ChannelClipDelay,\n\t\t\t\t\tOtherInputs.nibelungAverageCasts,\n\t\t\t\t\tWarlockInputs.NewDPBehaviour,\n\t\t\t\t],\n\t\t\t},\n\t\t\tencounterPicker: {\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\t\t\tshowExecuteProportion: false,\n\t\t\t},\n\n\t\t\tpresets: {\n\t\t\t\t// Preset talents that the user can quickly select.\n\t\t\t\ttalents: [\n\t\t\t\t\tPresets.AfflictionTalents,\n\t\t\t\t\tPresets.DemonologyTalents,\n\t\t\t\t\tPresets.DestructionTalents,\n\t\t\t\t],\n\t\t\t\t// Preset rotations that the user can quickly select.\n\t\t\t\trotations: [\n\t\t\t\t\tPresets.APL_Demo_Legacy,\n\t\t\t\t\tPresets.APL_Demo_Default,\n\t\t\t\t\tPresets.APL_Destro_Legacy,\n\t\t\t\t\tPresets.APL_Destro_Default,\n\t\t\t\t],\n\n\t\t\t\t// Preset gear configurations that the user can quickly select.\n\t\t\t\tgear: [\n\t\t\t\t\tPresets.SWP_BIS,\n\t\t\t\t\tPresets.PRERAID_AFFLICTION_PRESET,\n\t\t\t\t\tPresets.PRERAID_DEMODESTRO_PRESET,\n\t\t\t\t\tPresets.P1_AFFLICTION_PRESET,\n\t\t\t\t\tPresets.P1_DEMODESTRO_PRESET,\n\t\t\t\t\tPresets.P2_AFFLICTION_PRESET,\n\t\t\t\t\tPresets.P2_DEMODESTRO_PRESET,\n\t\t\t\t\tPresets.P3_AFFLICTION_ALLIANCE_PRESET,\n\t\t\t\t\tPresets.P3_AFFLICTION_HORDE_PRESET,\n\t\t\t\t\tPresets.P3_DEMO_ALLIANCE_PRESET,\n\t\t\t\t\tPresets.P3_DEMO_HORDE_PRESET,\n\t\t\t\t\tPresets.P3_DESTRO_ALLIANCE_PRESET,\n\t\t\t\t\tPresets.P3_DESTRO_HORDE_PRESET,\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\t}\n}\n"],"names":["BIS_TOOLTIP","SWP_BIS","PresetUtils.makePresetGear","PRERAID_AFFLICTION_PRESET","PreraidAfflictionGear","tooltip","talentTree","P1_AFFLICTION_PRESET","P1AfflictionGear","P2_AFFLICTION_PRESET","P2AfflictionGear","P3_AFFLICTION_ALLIANCE_PRESET","P3AfflictionAllianceGear","faction","Faction","Alliance","P3_AFFLICTION_HORDE_PRESET","P3AfflictionHordeGear","Horde","PRERAID_DEMODESTRO_PRESET","PreraidDemoDestroGear","talentTrees","P1_DEMODESTRO_PRESET","P1DemoDestroGear","P2_DEMODESTRO_PRESET","P2DemoDestroGear","P3_DEMO_ALLIANCE_PRESET","P3DemoAllianceGear","P3_DEMO_HORDE_PRESET","P3DemoHordeGear","P3_DESTRO_ALLIANCE_PRESET","P3DestroAllianceGear","P3_DESTRO_HORDE_PRESET","P3DestroHordeGear","AfflictionRotation","WarlockRotation","create","primarySpell","PrimarySpell","ShadowBolt","secondaryDot","SecondaryDot","UnstableAffliction","specSpell","SpecSpell","Haunt","curse","Curse","Agony","corruption","useInfernal","detonateSeed","DemonologyRotation","Immolate","NoSpecSpell","Doom","DestructionRotation","Incinerate","ChaosBolt","APL_Demo_Legacy","PresetUtils.makePresetLegacyRotation","Spec","SpecWarlock","APL_Demo_Default","PresetUtils.makePresetAPLRotation","DemoApl","APL_Destro_Legacy","APL_Destro_Default","DestroApl","AfflictionTalents","name","data","SavedTalents","talentsString","glyphs","Glyphs","major1","MajorGlyph","GlyphOfQuickDecay","major2","GlyphOfLifeTap","major3","GlyphOfHaunt","minor1","MinorGlyph","GlyphOfSouls","minor2","GlyphOfDrainSoul","minor3","GlyphOfSubjugateDemon","DemonologyTalents","GlyphOfFelguard","DestructionTalents","GlyphOfConflagrate","GlyphOfIncinerate","AfflictionOptions","WarlockOptions","armor","Armor","FelArmor","summon","Summon","Felhunter","weaponImbue","WeaponImbue","GrandSpellstone","DemonologyOptions","Felguard","DestructionOptions","Imp","GrandFirestone","DefaultConsumes","Consumes","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","petFood","PetFood","PetFoodSpicedMammothTreats","defaultPotion","Potions","PotionOfWildMagic","prepopPotion","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","arcaneBrilliance","divineSpirit","trueshotAura","leaderOfThePack","icyTalons","totemOfWrath","moonkinAura","wrathOfAirTotem","sanctifiedRetribution","bloodlust","demonicPact","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","blessingOfMight","vampiricTouch","DefaultDebuffs","Debuffs","sunderArmor","faerieFire","bloodFrenzy","ebonPlaguebringer","heartOfTheCrusader","judgementOfWisdom","shadowMastery","OtherDefaults","distanceFromTarget","profession1","Profession","Engineering","profession2","Tailoring","channelClipDelay","nibelungAverageCasts","ArmorInput","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","NoArmor","actionId","ActionId","fromSpellId","DemonArmor","WeaponImbueInput","NoWeaponImbue","fromItemId","PetInput","NoSummon","Succubus","showWhen","player","getTalents","summonFelguard","changeEmitter","NewDPBehaviour","InputHelpers.makeSpecOptionsBooleanInput","label","labelTooltip","PrimarySpellInput","InputHelpers.makeRotationEnumIconInput","Seed","setValue","eventID","newValue","newRotation","getRotation","preset","RotationPreset","Manual","setRotation","SecondaryDotInput","NoSecondaryDot","unstableAffliction","SpecSpellInput","haunt","chaosBolt","CorruptionSpell","type","id","states","extraCssClasses","changedEvent","getValue","WarlockRotationConfig","inputs","RotationType","Affliction","Demonology","Destruction","rotationChangeEmitter","newOptions","newGlyphs","newTalents","Presets.AfflictionTalents","Presets.AfflictionRotation","Presets.AfflictionOptions","Presets.DemonologyTalents","Presets.DemonologyRotation","Presets.DemonologyOptions","Presets.DestructionTalents","Presets.DestructionRotation","Presets.DestructionOptions","Automatic","TypedEvent","freezeAllAndDo","setTalentsString","setSpecOptions","setGlyphs","NoCurse","Elements","Weakness","Tongues","InputHelpers.makeRotationBooleanInput","InputHelpers.MakeItemSwapInput","ItemSlot","ItemSlotMainHand","ItemSlotOffHand","ItemSlotRanged","enableWeaponSwap","WarlockSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatStamina","epReferenceStat","displayStats","StatHealth","StatMP5","defaults","gear","Presets.P3_AFFLICTION_HORDE_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","rotation","talents","specOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","other","Presets.OtherDefaults","playerIconInputs","WarlockInputs.PetInput","WarlockInputs.ArmorInput","WarlockInputs.WeaponImbueInput","rotationIconInputs","WarlockInputs.PrimarySpellInput","WarlockInputs.CorruptionSpell","WarlockInputs.SecondaryDotInput","WarlockInputs.SpecSpellInput","rotationInputs","WarlockInputs.WarlockRotationConfig","includeBuffDebuffInputs","IconInputs.ReplenishmentBuff","IconInputs.MajorArmorDebuff","IconInputs.MinorArmorDebuff","IconInputs.PhysicalDamageDebuff","IconInputs.MeleeHasteBuff","IconInputs.MeleeCritBuff","IconInputs.MP5Buff","IconInputs.AttackPowerPercentBuff","IconInputs.AttackPowerBuff","IconInputs.StrengthAndAgilityBuff","IconInputs.StaminaBuff","excludeBuffDebuffInputs","petConsumeInputs","IconInputs.SpicedMammothTreats","otherInputs","OtherInputs.DistanceFromTarget","OtherInputs.TankAssignment","OtherInputs.ChannelClipDelay","OtherInputs.nibelungAverageCasts","WarlockInputs.NewDPBehaviour","encounterPicker","showExecuteProportion","presets","rotations","Presets.APL_Demo_Legacy","Presets.APL_Demo_Default","Presets.APL_Destro_Legacy","Presets.APL_Destro_Default","Presets.SWP_BIS","Presets.PRERAID_AFFLICTION_PRESET","Presets.PRERAID_DEMODESTRO_PRESET","Presets.P1_AFFLICTION_PRESET","Presets.P1_DEMODESTRO_PRESET","Presets.P2_AFFLICTION_PRESET","Presets.P2_DEMODESTRO_PRESET","Presets.P3_AFFLICTION_ALLIANCE_PRESET","Presets.P3_DEMO_ALLIANCE_PRESET","Presets.P3_DEMO_HORDE_PRESET","Presets.P3_DESTRO_ALLIANCE_PRESET","Presets.P3_DESTRO_HORDE_PRESET"],"mappings":"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"}